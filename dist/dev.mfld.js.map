{"version":3,"file":"dev.mfld.js","sources":["../src/util.js","../src/updates.js","../src/store.js","../src/fetch.js","../src/domutil.js","../src/bindsync.js","../src/templates.js","../src/registrar.js","../src/index.js"],"sourcesContent":["export let ATTR_PREFIX = \"mf_\";\r\nexport let _inputNestSplitRx = /[\\.\\[\\]\\?]{1,}/g;\r\nexport let _commaSepRx = /, {0,}/g;\r\n\r\nexport let _id = ()=> {\r\n    return `${Date.now()}.${Math.floor(Math.random() * 100_000)}`;\r\n}\r\n\r\n/** \r\n * @template T\r\n * @typedef {import(\"./index.js\").Store<T>} Store \r\n */\r\n\r\n/**!\r\n * @typedef {object} MFLDGlobal\r\n * @property {Map<string, Store<any>>} st\r\n * @property {Object} fn\r\n * @property {Map<HTMLElement, { toRemove: Set<Store<any>>, observer: MutationObserver }>} mut\r\n */\r\n\r\n/**!\r\n * @typedef {Window & { MFLD: MFLDGlobal }} MFLDWindowObj\r\n * @property {MFLDGlobal} MFLD\r\n */\r\n// @ts-ignore\r\nexport let _glob = /** @type {MFLDWindowObj}*/(window);\r\n\r\n/**\r\n * Get or set nested store values\r\n * @param {import(\".\").MfldOps} ops\r\n * @param {HTMLElement} el\r\n * @returns {import(\".\").MfldOps}\r\n */\r\nexport let _getOpOverrides = (ops, el)=> {\r\n    let override = el.dataset?.override || \"\";\r\n    let overrides = ops.profiles?.[override] || {}// || JSON.parse(override || {});\r\n    \r\n    let res = { ...ops, ...overrides };\r\n    // Get per-value overrides\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * @param {{el: HTMLElement, datakey: string} | string} condition \r\n * @returns {{ valueList: any[], func?: Function, as?: string[] }}\r\n */\r\nexport let _parseFunction = (condition)=> {\r\n    if(typeof condition != \"string\") {\r\n        condition = condition?.el?.dataset?.[condition?.datakey] || \"\";\r\n        if(!condition && /** @type {any}*/(condition)?.el?.dataset?.[`${ATTR_PREFIX}else`] != undefined) condition = \"return true\";\r\n    }\r\n\r\n    let [fstr, values] = condition?.split(\"=>\")?.map(s=> s.trim())?.reverse() || [\"\", \"\"];\r\n    let [fn, asStr] = fstr?.split(/\\s{1,}as\\s{1,}/) || [fstr, \"value\"];\r\n    let as = asStr?.split?.(_commaSepRx)?.map?.(s=> s.trim()) || [\"value\"];\r\n\r\n    // Set up function to evaluate store values\r\n    let valueList = values?.split(\",\")?.map(s=> s.replace(/[()]/g, \"\").trim()) || [];\r\n    // @ts-ignore\r\n    let func = _glob[fn] || MFLD.fn[fn];\r\n    if(!func) {\r\n        // If function is not found, try to create it; account for implicit returns\r\n        if(!valueList?.length && !fn.includes(\"=>\")) {\r\n            if(!fn.match(/\\(|\\)/)) {\r\n                valueList = [fn];\r\n                fn = `return ${fn}`;\r\n            }\r\n            else {\r\n                valueList = fn.match(/\\([^\\)]{1,}\\)/)?.[0]?.replace(/[\\(\\) ]/g, \"\").split(\",\").filter(s=> !s.match(/[\\\"\\'\\`]/)) || [];\r\n            }\r\n        }\r\n\r\n        valueList = (typeof valueList == \"string\" ? /** @type {string}*/(valueList).split(/\\s*,\\s*/) || [] : valueList).map(v => v.split(_inputNestSplitRx)[0]) || [];\r\n        if(!fn.match(/^\\s{0,}\\{/) && !fn.includes(\"return\")) fn = fn.replace(/^\\s{0,}/, \"return \");\r\n        try {\r\n            func = new Function(...valueList, fn);\r\n        }\r\n        catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    return { valueList, func, as };\r\n}","/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\nimport { _glob, ATTR_PREFIX } from \"./util.js\";\r\n\r\n/**\r\n * @typedef {Object} DomWorkOrder\r\n * @property {HTMLElement} in - The input HTMLElement\r\n * @property {HTMLElement} out - The output HTMLElement\r\n * @property {\"append\" | \"prepend\" | \"inner\" | \"outer\"} relation - The relation between the input and output elements\r\n * @property {Partial<MfldOps>} ops - The fetch options for the operation\r\n * @property {(el: HTMLElement | null) => void} done - The callback function to be executed when the operation is done\r\n */\r\n\r\n/** @type {(DomWorkOrder | Function)[]} */ let workArray = [];\r\nlet cancelAnimationFrame = 0;\r\n/** @type {Map<string, (any | ((any)=> any))>} */\r\n\r\n// Next tick queue\r\n/**\r\n * @type {Function[]}\r\n */\r\nlet _nextTickQueue = [];\r\n\r\n/** @type {HTMLElement | null} */\r\nlet spacer;\r\nlet spacerHeight = \"\";\r\n\r\nexport let _addToNextTickQueue = (fn)=> {\r\n    fn && _nextTickQueue.push(fn);\r\n}\r\n\r\nexport let _scheduleUpdate = (update)=> {\r\n    workArray.push(update);\r\n    if(!cancelAnimationFrame) {\r\n        cancelAnimationFrame = requestAnimationFrame(_runUpdates);\r\n    }\r\n}\r\n\r\nlet _addSpacer = (inEl, wrapper, wrapperHeight, ops)=> {\r\n    if(!(ops.trans?.smart ?? true)) return;\r\n    let { paddingTop, paddingBottom } = wrapper instanceof Element ? getComputedStyle(wrapper) : { paddingTop: 0, paddingBottom: 0 };\r\n    let spacer = document.createElement(\"div\");\r\n    spacer.style.height = `calc(${Math.abs(wrapperHeight - (inEl?.clientHeight || 0))}px - ${paddingTop} - ${paddingBottom})`;\r\n    wrapper?.after(spacer);\r\n}\r\n\r\nlet _adjustSizing = (inEl, ops)=> {\r\n    if(!ops.trans?.smart ?? true) return;\r\n    let dur = (ops?.trans?.dur?.[0] || ops?.trans?.dur || 600)/2\r\n    _scheduleUpdate(()=> {\r\n        spacer?.remove();\r\n        inEl?.animate?.([\r\n            { height: spacerHeight },\r\n            { height: `${inEl.clientHeight || 0}px` }\r\n        ], dur);\r\n    });\r\n}\r\n\r\nlet _runUpdates = ()=> {\r\n    cancelAnimationFrame = 0;\r\n    \r\n    for(let order of workArray) {\r\n        if(typeof order == \"function\") {\r\n            order();\r\n            continue;\r\n        }\r\n\r\n        let wrapperHeight = order.out ? order.out.clientHeight : 0;\r\n        let _getDimensionsAfterUpdate = order.relation == \"inner\";\r\n\r\n        if(order.relation == \"prepend\") {\r\n            _addSpacer?.(order.in, order.out, wrapperHeight, order.ops);\r\n            _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                order.out?.prepend(order.in);\r\n                _adjustSizing?.(order.in, order.ops);\r\n            });\r\n        }\r\n        else {\r\n            if([\"inner\", \"outer\"].includes(order.relation)) {\r\n                let container = /** @type {HTMLElement}*/(order.out?.cloneNode(true));\r\n                if(container) {\r\n                    order.out?.after(container);\r\n                    if(_getDimensionsAfterUpdate) {\r\n                        container.style.border = \"none\";\r\n                        order.out.replaceChildren();\r\n                    }\r\n                    _applyTransition(container, \"out\", order.ops, undefined, order.out, _getDimensionsAfterUpdate);\r\n                }\r\n            }\r\n\r\n            _addSpacer?.(order.in, order.out, wrapperHeight, order.ops);\r\n            _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                if(order.relation == \"outer\") order.out?.replaceWith(order.in)\r\n                else order.out?.appendChild(order.in);\r\n                _adjustSizing?.(order.in, order.ops);\r\n            });\r\n        }\r\n\r\n        order.done?.(order.in);\r\n    }\r\n\r\n    _nextTickQueue.forEach(fn => fn());\r\n    _nextTickQueue = [];\r\n    workArray = [];\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {\"in\" | \"out\"} dir \r\n * @param {Partial<MfldOps>} ops \r\n * @param {Function} [fn] \r\n * @param {HTMLElement} [refElement]\r\n * @param {boolean} [_getDimensionsAfterUpdate]\r\n * @returns \r\n */\r\nexport let _applyTransition = (el, dir, ops, fn, refElement, _getDimensionsAfterUpdate = false)=> {\r\n    if(el?.nodeType == Node.TEXT_NODE) {\r\n        el.replaceWith(document?.createElement(\"div\"));\r\n        el.textContent = el.textContent;\r\n    }\r\n\r\n    if(el) {\r\n        const dur = Array.isArray(ops.trans?.dur) ? ops.trans?.dur[dir == \"in\" ? 0 : 1] || ops.trans?.dur[0] : ops.trans?.dur || 0;\r\n        const transClass = ops?.trans?.class || `${ATTR_PREFIX}trans`;\r\n        el?.classList?.add(transClass);\r\n        ops.trans?.hooks?.[`${dir}-start`]?.(el);\r\n\r\n        if(dir == \"out\") {\r\n            refElement = refElement || el;\r\n            if(!refElement) return;\r\n            let dimensions = {};\r\n            if((ops.trans?.smart ?? true) && !_getDimensionsAfterUpdate) {\r\n                dimensions = _getDimensions(refElement);\r\n            }\r\n\r\n            _scheduleUpdate(()=> {\r\n                if((ops.trans?.smart ?? true) && _getDimensionsAfterUpdate && refElement) {\r\n                    dimensions = _getDimensions(refElement);\r\n                }\r\n\r\n                if(ops.trans?.smart ?? true) {\r\n                    el.style.position = \"fixed\";\r\n                    el.style.width = dimensions.w;\r\n                    el.style.left = dimensions.left;\r\n                    el.style.top = dimensions.top;\r\n                    el.style.margin = \"0\";\r\n                }\r\n                if(dur) el.style.transitionDuration = `${dur}ms`;\r\n\r\n                el.classList?.add(\"out\");\r\n            })\r\n        }\r\n        else {\r\n            el?.classList?.add(\"in\");\r\n            if(dur) el.style.transitionDuration = `${dur}ms`;\r\n            fn?.();\r\n            setTimeout(()=> {\r\n                _scheduleUpdate(()=> {\r\n                    setTimeout(()=> _scheduleUpdate(()=> el?.classList?.remove(dir)), 0);\r\n                });\r\n            }, ops.trans?.swap || 0);\r\n        }\r\n        \r\n        setTimeout(()=> {\r\n            _scheduleUpdate(()=> {\r\n                if(dir == \"out\") el?.remove();\r\n                el?.classList?.remove(transClass);\r\n                ops.trans?.hooks?.[`${dir}-end`]?.(el);\r\n            });\r\n        }, \r\n        dur + (dir == \"in\" ? ops.trans?.swap || 0 : 0));\r\n    }\r\n}\r\n\r\nlet _getDimensions = (refElement)=> {\r\n    let style = getComputedStyle(refElement);\r\n    let rect = refElement.getBoundingClientRect();\r\n    return {\r\n        w: `calc(${(refElement).clientWidth}px - ${style.paddingLeft} - ${style.paddingRight})`,\r\n        left: `calc(${rect.left}px + ${_glob.scrollX}px)`,\r\n        top: `calc(${rect.top}px + ${_glob.scrollY}px)`\r\n    };\r\n}","/** \n * @template T\n * @typedef {import(\"./index.js\").UpdaterFunction<T>} UpdaterFunction \n */\n/** \n * @template T\n * @typedef {import(\"./index.js\").StoreOptions<T>} StoreOptions \n */\n\nimport { _scheduleUpdate } from \"./updates.js\";\nimport { _glob, _id } from \"./util.js\";\n\n/**\n * @callback SubFunction\n * @param {any} value\n * @param {string} [ref]\n * @returns {void}\n */\n\n/**\n * @param {any} input \n * @returns {any}\n */\nlet _hashAny = (input)=> {\n    if(!input) return 0;\n    if(typeof input == 'number' || input === true) return input;\n    if(input instanceof Map || input instanceof Set) return _hashAny(Array.from(input.entries() || input));\n\n    let hash = 0;\n    for(let char of new TextEncoder().encode(input?.toString() || \"\")) \n        hash = ((hash << 5) - hash) + char;\n    return hash;\n}\n\n//Static\nif(!_glob.MFLD) _glob.MFLD = {\n    st: new Map(),\n    fn: {},\n    mut: new Map(),\n}\n\n/**\n * @template T\n */\nexport class Store {\n    /** @type {UpdaterFunction<T> | undefined} */ _updater = undefined;\n    /** @type {Map<string, SubFunction>} */ _subscriptions = new Map();\n    /** @type {string | undefined} */ _storedHash = undefined;\n    /** @type {Set<Store<any>>} */ _upstreamStores = new Set();\n    /** @type {Set<Store<any>>} */ _downstreamStores = new Set();\n    /** @type {HTMLElement | SVGScriptElement | string | \"global\"} */ _scope;\n    /** @type {any | undefined} */ _updateTimeout;\n\n    /**\n     * @param {string} name\n     * @param {StoreOptions<T>} [ops]\n     */\n    constructor(name, ops) {\n        return this._modify(name, ops);        \n    }\n\n    /**\n     * @param {string} name\n     * @param {StoreOptions<T>} [ops]\n     */\n    _modify(name, ops) {\n        this.name = name;\n        this._scope = ops?.scope || document.currentScript || \"global\";\n        // @ts-ignore\n        MFLD.st.set(name, this);\n\n        //Watch for scope destroy\n        // Watch for scope destroy\n        if(this._scope instanceof Element) {\n            // @ts-ignore\n            let mutOb = MFLD.mut.get(this._scope) || { toRemove: new Set() };\n            if(!mutOb.observer) {\n                mutOb.observer = new MutationObserver((muts)=> {\n                    for(let mut of muts) {\n                        if(mut.type == \"childList\") {\n                            for(let node of mut.removedNodes) {\n                                if(node instanceof Element) {\n                                    for(let store of mutOb.toRemove) {\n                                        if(store._scope == node) {\n                                            let scope = this._scope;\n                                            _destroy(store);\n                                            mutOb.observer.disconnect();\n                                            mutOb.toRemove.delete(store);\n                                            // @ts-ignore\n                                            MFLD.mut.delete(scope)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n                /** @type {MutationObserver}*/(mutOb.observer).observe(/** @type {HTMLElement}*/(this._scope?.parentElement), { childList: true });\n            }\n            mutOb.toRemove.add(this);\n            // @ts-ignore\n            MFLD.mut.set(this._scope, mutOb);\n        }\n        \n        (ops?.upstream?.map(s=> {\n            let S = _store(s);\n            this._upstreamStores.add(S);\n            S._downstreamStores.add(this);\n            return S;\n        }) || []);\n\n        this.value = ops?.value;\n        this._updater = ops?.updater;\n        this._auto_update();\n        return this;\n    }\n\n    /**\n     * @param {(T)=> void} sub\n     * @param {string | undefined} [ref]\n     * @param {boolean} [immediate]\n     */\n    sub(sub, ref, immediate = true) {\n        this._subscriptions.set(ref || _id(), sub);\n        if(immediate) sub?.(this.value);\n    }\n\n    //Update (manual or automated -- cascades downstream on batch updates)\n    /**\n    * @template T\n    * @param {T | ((T)=> T | Promise<T>)} value\n    */\n    async update(value) {\n        return new Promise(async (resolve)=> {\n            // Group updates\n            if(this._updateTimeout) clearTimeout(this._updateTimeout);\n            this._updateTimeout = setTimeout(()=> {\n                _scheduleUpdate(async ()=> {\n                    //Apply new value   \n                    let newValue = (typeof value == \"function\" ? /** @type {Function} */(await value)?.(this.value) : value);\n                    let newHash = _hashAny(newValue);\n                    \n                    if(newHash !== this._storedHash) {\n                        this.value = newValue;\n                        this._storedHash = newHash;\n\n                        // Add this store to the work order\n                        for(let ds of this._downstreamStores) await ds._auto_update();\n\n                        // Wait for next animation frame to return the value\n                        for(let [ref, sub] of this?._subscriptions || []) sub?.(this.value, ref);\n                        resolve(this.value);\n                    }\n                    else {\n                        resolve(this.value);\n                    }\n                });\n            }, 0);\n        });\n    }\n\n    async _auto_update() {\n        let newVal = await this._updater?.(\n            Array.from(this._upstreamStores)?.map(S => S?.value) || [], \n            /** @type {T} */(this?.value)\n        );\n\n        await this.update(newVal === undefined ? this.value : newVal);\n    }\n}\n\n/**\n * STORE STATIC METHODS\n */\n/**\n * @template T\n * @param {string} name - The name of the store\n * @param {StoreOptions<T>} [ops] - Options to update the store\n * @returns {Store<T>}\n */\nexport let _store = (name, ops)=> {\n    let found_store = /** @type {Store<any>}*/(_glob.MFLD.st.get(name));\n    return ops ? (found_store ? found_store._modify(name, ops) : new Store(name, ops)) : (found_store || new Store(name, ops));\n}\n/**\n * @param {HTMLElement | string} scope \n */\nexport let _clearScope = (scope)=> {\n    // @ts-ignore\n    MsFt.forEach(store=> {\n        if(store._scope == scope) _destroy(store); \n    });\n}\n\n/**\n * @param {Store<any>} store \n */\nexport let _destroy = (store)=> {\n    // @ts-ignore\n    MFLD.st.delete(store.name);\n    // @ts-ignore\n    store = undefined;\n}","import { _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _register } from \"./registrar.js\";\r\nimport { _store } from \"./store.js\";\r\n\r\n/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {string} trigger \r\n * @param {MfldOps} fetchOps\r\n * @param {string} href\r\n * @param {string} [method] \r\n * @param {any[] | \"$form\"} [valueList]\r\n * @param {Function} [processFunc]\r\n */\r\nexport let _handleFetch = (el, trigger, fetchOps, href, method, valueList, processFunc)=> {\r\n    /**\r\n     * @param {Event} [e]\r\n     */\r\n    let ev = async e=> {  \r\n        e?.preventDefault();\r\n        e?.stopPropagation();\r\n\r\n        // Set from target element if relevant; fall back to \"get\"\r\n        if(!method) method = /** @type {any}*/(e?.target)?.method || \"get\";\r\n    \r\n        //Make sure we're allowed to fetch\r\n        let externalPermissions = fetchOps?.fetch?.externals?.find(allowed=> href?.startsWith(allowed.domain)) || \r\n            !href.match(/^https?:\\/\\//) || href.includes(location.origin) ? {\r\n                scripts: true,\r\n                styles: true,\r\n        } : undefined;\r\n\r\n        // Parse input\r\n        let input = processFunc?.(...(valueList || [])) || valueList;\r\n        let body = Array.isArray(input) ? input[0] : input == \"$form\" ? new FormData(/** @type {HTMLFormElement}*/(el)) : input;\r\n        if(processFunc) {\r\n            let toFunc = Array.isArray(input) ? (input?.map(s=> _store(s).value) || []) : [body];\r\n            body = processFunc?.(...toFunc)\r\n        }\r\n\r\n        //Fetch data\r\n        let data = await fetch(href, {\r\n            ...(fetchOps?.fetch?.request || {}),\r\n            headers: {\r\n                ...fetchOps?.fetch?.request?.headers,\r\n                \"MFLD\": \"true\",\r\n            },\r\n            method,\r\n            body: input == \"$form\" || typeof body == \"string\" ? body : JSON.stringify(body),\r\n        })\r\n        .catch(error=> {\r\n            fetchOps?.fetch?.err?.(error);\r\n        });\r\n\r\n        //Handle onCode callback\r\n        let code = data?.status;\r\n        if(code && fetchOps?.fetch?.onCode?.(code, data) == false) return;\r\n\r\n        //Return JSON or text in callback\r\n        let resp = await data?.[fetchOps?.fetch?.resType || \"text\"]();\r\n\r\n        // Handle resolutions\r\n        for(let instruction of [\"append\", \"prepend\", \"inner\", \"outer\"]) {\r\n            let ds = el.dataset[`${ATTR_PREFIX}${instruction}`];\r\n            if(ds === undefined) continue;\r\n            let [selector, toReplace] = ds?.split(\"->\").map(s=> s.trim()) || [];\r\n\r\n            //Extract content and schedule a DOM update\r\n            let fullMarkup = (new DOMParser())?.parseFromString?.(resp, 'text/html');\r\n            if(fullMarkup) {\r\n                _scheduleUpdate({\r\n                    in: /** @type {HTMLElement} */ (fullMarkup.querySelector(selector || \"body\")),\r\n                    out: /** @type {HTMLElement} */ (toReplace ? document.querySelector(toReplace) : el),\r\n                    relation: /** @type {\"append\" | \"prepend\" | \"inner\" | \"outer\"}*/(instruction),\r\n                    ops: fetchOps,\r\n                    done: (el)=> {\r\n                        _register(el)\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        //Push to history if requested\r\n        if(el.dataset?.[`${ATTR_PREFIX}pushstate`] !== undefined) {\r\n            history.pushState({}, \"\", href);\r\n        }\r\n\r\n        let resolveTxt = el.dataset?.[`${ATTR_PREFIX}resolve`];\r\n        let resolveFunc = _parseFunction(resolveTxt || \"\")?.func;\r\n        resolveFunc?.(resp);\r\n\r\n            // //Clear existing scripts/styles\r\n            // for(let s of [pageScripts, pageStyles]) {\r\n            //     let elements = s.get(fullMarkup) || [];\r\n            //     elements.forEach(el => el.remove());\r\n            //     s.set(fullMarkup, []);\r\n            // }\r\n\r\n            // //Get scripts and styles\r\n            // let seek: string[] = ops.allowScripts ? [\"scripts\"] : [];\r\n            // if(ops.allowStyles) seek.push(\"style\");\r\n            // if(seek.length) {\r\n            //     let globls: NodeListOf<HTMLScriptElement | HTMLStyleElement> = fullMarkup.querySelectorAll(seek.join(\",\"));\r\n            //     for(let el of globls) {\r\n            //         let isScript = el instanceof HTMLScriptElement;\r\n            //         let source = isScript ? pageScripts : pageStyles;\r\n\r\n            //         if(isScript ? ops.allowScripts : ops.allowStyles){\r\n            //             if(!source.has(parent)) source.set(parent, []);\r\n            //             source.get(parent)?.push(el as any);\r\n            //         }\r\n            //         else if(isScript) el.parentNode?.removeChild(el);\r\n            //     }\r\n            // }\r\n    }\r\n\r\n    if(trigger == \"$mount\") ev();\r\n    else el.addEventListener(trigger, ev);\r\n}","import { _store } from \"./store\";\r\nimport { _id } from \"./util\";\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns {HTMLTemplateElement}\r\n */\r\nexport let _ensureTemplate = (el)=> {\r\n    let nodeName = \"TEMPLATE\";\r\n    if(el.tagName == nodeName) return /** @type {HTMLTemplateElement}*/(el);\r\n\r\n    let newEl = /** @type {HTMLTemplateElement}*/(document.createElement(nodeName));\r\n    newEl.content.appendChild(el.cloneNode(true));\r\n    el.replaceWith(newEl);\r\n\r\n    return newEl;\r\n}\r\n\r\n/**\r\n * @param {any} obj \r\n * @param {(value: any, index: any)=> void} cb \r\n */\r\nexport let _iterable = (obj, cb)=> {\r\n    if(obj instanceof Map) for(const [key, value] of obj.entries()) cb(key, value);\r\n    else {\r\n        try { \r\n            let arr = Array.from(obj || []);\r\n            if(arr?.length) arr.forEach(cb);\r\n            else for(let key in obj) cb(key, obj[key]);\r\n        }\r\n        catch(e) { console.error(`${obj} is not iterable`); }\r\n    }\r\n}\r\n\r\n// Returns the sibling that fails the condition\r\n/**\r\n * @param {Element | null} [sib] \r\n * @param {Function} [breakFn] \r\n * @param {Function} [cb] \r\n * @returns {Element | null | undefined}\r\n */\r\nexport function _iterateSiblings(sib, breakFn, cb) {\r\n    return breakFn?.(sib) ? sib : _iterateSiblings((cb?.(sib) || sib)?.nextElementSibling, breakFn, cb);\r\n}\r\n\r\n/**\r\n * @typedef InternalStoreOptions\r\n * @property {Function} [func]\r\n * @property {HTMLElement} [observeEl]\r\n * @property {boolean} [allowFalse]\r\n */\r\n\r\n/**\r\n * @param {string[]} [storeList] \r\n * @param {InternalStoreOptions} [options]\r\n * @returns \r\n */\r\nexport let _registerInternalStore = (storeList = [], options)=> {\r\n    // Register new store (to prevent excess evaluations)\r\n    return _store(_id(), {\r\n        upstream: [...storeList],\r\n        updater: (list)=> {\r\n            try {\r\n                return options?.func?.(...list) ?? list[0];\r\n            }\r\n            catch(_) {\r\n                return;\r\n            }\r\n        },\r\n        scope: options?.observeEl,\r\n    });\r\n}","import { _registerInternalStore } from \"./domutil\";\r\nimport { _store } from \"./store\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _glob, _inputNestSplitRx } from \"./util\";\r\n\r\nexport let _handleBindSync = (el, inputs, output, trigger, mode, processFunc)=> {\r\n    if(mode.match(\"bind\")) {\r\n        _registerInternalStore(inputs, {\r\n            observeEl: el,\r\n            func: ()=> {\r\n                let val = processFunc?.(...inputs.map(input => _glob.MFLD.st.get(input)?.value || _glob[val]), el);\r\n                if(output && val != undefined) {\r\n                    let [type, attr] = output.split(\":\");\r\n                    if(type == \"style\") el.style[attr] = val;\r\n                    else if(type == \"attr\") el.setAttribute(attr, val);\r\n                    else el[output] = val;\r\n                }\r\n                el.dispatchEvent(new CustomEvent(trigger));\r\n                return val;\r\n            }\r\n        });\r\n    } else {\r\n        let ev = ()=> {\r\n            if(inputs.length > 1) console.warn(\"Multiple sync props\", el);\r\n            let [type, attr] = inputs?.[0].trim().split(\":\");\r\n            let val = type == \"style\" ? el.style[attr] : type == \"attr\" ? el.getAttribute(attr) : el[type];\r\n            let numVal = parseFloat(val);\r\n            if(!isNaN(numVal)) val = numVal;\r\n            let value = processFunc?.(val, el);\r\n            if(output && value !== undefined) _store(output)?.update?.(value);\r\n        }\r\n        if(trigger == \"$mount\") ev();\r\n        else el.addEventListener(trigger, ev);\r\n    }\r\n}","import { _ensureTemplate, _iterable, _iterateSiblings, _registerInternalStore } from \"./domutil\";\nimport { _register } from \"./registrar\";\nimport { _store } from \"./store\";\nimport { _applyTransition, _scheduleUpdate } from \"./updates\";\nimport { _id, _parseFunction } from \"./util\";\n\n/**\n * Handle conditional and loop elements\n * @param {HTMLElement} el \n * @param {string} mode \n * @param {string[]} as \n * @param {Function | undefined} func\n * @param {any[]} valueList\n * @param {import(\".\").MfldOps} ops \n */\nexport let _handleTemplates = (el, mode, as, func, valueList, ops)=> {\n    let startElement = document.createElement(\"template\");\n    let templ = /** @type {HTMLTemplateElement}*/(_ensureTemplate(/** @type {HTMLElement}*/(el.cloneNode(true))));\n    startElement.classList.add(`${mode}-start`);\n    templ.classList.add(`${mode}-end`);\n\n    el.before(startElement);\n    el.after(templ);\n    el.remove();\n\n    // Handle conditional elements\n    let conditional = mode.match(/if|elseif|else/);\n    let newFunc = undefined;\n    if(conditional) {\n        // Get upstream conditions\n        let previousConditionStore;\n        if(!mode.match(/if/)) {\n            let lastEl = /** @type {HTMLElement}*/(startElement?.previousElementSibling?.previousElementSibling);\n            let lastStore = lastEl?.dataset?.[`${mode}-cstore`];\n            previousConditionStore = lastStore ? _store(lastStore) : undefined;\n        }\n\n        // Create funciton\n        newFunc = (list)=> {\n            if(!func) return true;\n            return func?.(list) == true;\n        }\n    }\n\n    let templStore = _registerInternalStore(\n        valueList, \n        { func: conditional ? newFunc : func, observeEl: templ }\n    );\n\n    el.dataset[`${mode}-cstore`] = templStore.name;\n\n    // Clear old elements\n    templStore.sub(val=> {\n        if(val === undefined) return;\n        _scheduleUpdate(()=> {\n            _iterateSiblings(\n                startElement?.nextElementSibling, \n                (sib)=> sib?.classList?.contains(`${mode}-end`),\n                (sib)=> _applyTransition(/** @type {HTMLElement}*/(sib), \"out\", ops, ()=> sib?.remove()), \n            );\n\n            if(conditional && !val) return;\n\n            _iterable(mode.match(/each/) ? val : [val], (val, key)=> {\n                // Get all logical bindings and replace values\n                let item = /** @type {HTMLTemplateElement}*/ (templ.cloneNode(true));\n                if(!conditional) {\n                    let rx = new RegExp(\"\\\\$:{([^}]*)}\", \"g\");\n                    let html = templ?.innerHTML?.replace(rx, (_, cap)=> _parseFunction(`(${as.join(\",\")})=> ${cap}`)?.func?.(val, key) || \"\") || \"\";\n                    if(item?.innerHTML) item.innerHTML = html;\n                }\n\n                // Replace values\n                for(let element of item.content.children) {\n                    if(!element?.innerHTML) element.innerHTML = val;\n                    templ.before(element);\n                    _applyTransition(/** @type {HTMLElement}*/(element), \"in\", ops, ()=> _register(/** @type {HTMLElement}*/(element)));\n                }\n            });\n        });\n    });\n}","import { _store } from \"./store.js\";\nimport { _scheduleUpdate } from \"./updates.js\";\nimport { _commaSepRx, _getOpOverrides, _glob, _parseFunction, ATTR_PREFIX } from \"./util.js\";\nimport { _handleFetch } from \"./fetch.js\";\nimport { _handleBindSync } from \"./bindsync.js\";\nimport { _handleTemplates } from \"./templates.js\";\n/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\n\n/** @type {Partial<MfldOps>} */\nlet _ops = {};\nlet _modes = [\"bind\", \"sync\", \"templ\", \"if\", \"elseif\", \"else\", \"each\", \"get\", \"head\", \"post\", \"put\", \"delete\", \"patch\"].map(m=> `${ATTR_PREFIX}${m}`);\n\n/**!\n * @param {Partial<MfldOps>} newops \n * @param {string} [profileName] \n */\nexport let _setOptions = (newops, profileName)=> {\n    if(profileName) _ops.profiles = { ..._ops.profiles, [profileName]: newops };\n    else _ops = { ..._ops, ...newops };\n}\n\n// Handle location state changes\n_glob.addEventListener(\"popstate\", (e)=> {\n    // for(let update of e.state) {\n    //     _scheduleUpdate(update);\n    // }\n});\n\n//Register subscriptions on the DOM (scopable in case an update needs run on a subset of the DOM)\n/**\n * @param {HTMLElement | null} [parent] \n */\nexport let _register = (parent)=> {\n    if(parent && parent.nodeType == Node.TEXT_NODE) return;\n\n    /** @type {NodeListOf<HTMLElement> | []} */\n    let els = (parent || document.body).querySelectorAll(\n        `[data-${_modes.join(`],[data-`)}],a,form`\n    ) || [];\n\n    for(let el of els) {\n        let _op_overrides = _getOpOverrides(_ops, el);\n\n        //Check for <a> and <form> elements\n        if(el.dataset?.[`${ATTR_PREFIX}promote`] !== undefined) {\n            let [mode, href, input, trigger] = el.tagName == \"A\" ?\n                [\"get\", /** @type {HTMLAnchorElement}*/(el).href, [], \"click\"] : \n                [/** @type {HTMLFormElement}*/(el).method.toLowerCase(), /** @type {HTMLFormElement}*/(el).action, \"$form\", \"submit\"];\n\n            if(href) {\n                _handleFetch(el, trigger, _op_overrides, href, mode, /** @type {any[] | \"$form\"}*/(input));\n                continue;\n            }\n        }\n\n        //Loop over all data attributes (modes)\n        for(let mode in el.dataset) {\n            if(!_modes.includes(mode)) continue;\n            let shouldHaveTriggers = !mode.match(/bind|templ|if|elseif|else|each/);\n\n            //Loop over provided settings\n            for(let setting of el.dataset?.[mode]?.split(\";;\") || []) {\n                //Don't break out settings for conditionals\n                // if(mode.match(/if/)) _handleConditionals(el, _op_overrides);\n\n                //Break out settings\n                let [sourceParts, output] = setting?.split(\"->\")?.map(s=> s.trim()) || [];\n                let triggers = shouldHaveTriggers ?sourceParts.slice(0, sourceParts.indexOf(\")\"))?.match(/[^\\(\\)]{1,}/g)?.pop()?.split(_commaSepRx)?.map(s=> s.trim()) || [] : [];\n                if(!output && mode.match(/get|head|post|put|delete|patch/)) {\n                    output = sourceParts.slice(sourceParts.indexOf(\")\") + 1);\n                    sourceParts = \"\";\n                }\n                let processFuncStr = shouldHaveTriggers ? sourceParts?.slice(sourceParts.indexOf(\")\") + 1) : sourceParts;\n\n                //Handle errors\n                if(shouldHaveTriggers && !triggers?.length) { console.error(\"No trigger\", el); break; }\n\n                let { func, valueList, as } = _parseFunction(processFuncStr);\n                if(processFuncStr && !func) console.warn(`\"${processFuncStr}\" not registered`, el);\n\n                if(mode.match(/if|elseif|else/)) console.log(\"CONDITIONAL SETTINGS\", setting, triggers, output, processFuncStr, valueList);\n                //Handle templs and loops\n                if(mode.match(/each|templ|if|elseif|else/)) _handleTemplates(el, mode, as || [], func, valueList || [], _op_overrides);\n                else {\n                    //Loop over triggers\n                    if(!triggers?.length) triggers = [\"\"]\n                    for(let trigger of triggers) {\n                        if(mode.match(/bind|sync/)) _handleBindSync(el, valueList, output, trigger, mode, func);\n                        else {\n                            _handleFetch(el, trigger, _op_overrides, output, mode.replace(ATTR_PREFIX, \"\"), valueList, func);\n                        }\n                    }\n                }\n            }; //End loop settings\n        }; //End loop dataset\n    };  //End loop elements\n}","import { _store } from \"./store.js\";\nimport { _addToNextTickQueue } from \"./updates.js\";\nimport { _register, _setOptions } from \"./registrar.js\";\n\n/**! @typedef {\"in-start\"|\"in-end\"|\"out-start\"|\"out-end\"} HookKey*/\n\n/**!\n * @typedef {object} ExternalOptions\n * @property {string} domain - The domain name these settings apply to\n * @property {boolean} [scripts] - Allow scripts from this domain to execute\n * @property {boolean} [styles] - Allow styles from this domain to apply\n */\n\n/**!\n * @typedef {object} FetchOptions\n * @property {RequestInit} [request] - Fetch request options\n * @property {\"json\"|\"text\"} [resType] - Response type (default: \"text\")\n * @property {(err: Error)=> void} [err] - Error callback - run on fetch error\n * @property {(code: number, data: void | Response)=> boolean | void} [onCode] - Callback function - run on fetch response code; return `false` to prevent further processing\n * @property {ExternalOptions[]} [externals] - External domain fetch settings\n */\n\n/**!\n * @typedef {object} TransitionOptions\n * @property {string} [class] - CSS class applied to transitions (default: `mfTrans`)\n * @property {[number, number] | number} [dur] - Transition duration: [in, out] or single value (in ms); default: 300\n * @property {number} [swap] - Swap delay (in ms) - applied between one element's outro start and the replacement's intro start; default: 0\n * @property {boolean} [smart] - Enable smart transitions (default: true)\n * @property {{ [key in HookKey]?: (el: HTMLElement)=> void }} [hooks] - Transition hooks\n */\n\n/**!\n * Manifold options for `fetch`, `trans`, and `profiles`.\n * @typedef {Object} MfldOps\n * @property {{ [ key: string ]: Partial<MfldOps> }} [profiles] - Fetch profiles assignable to elements\n * @property {FetchOptions} [fetch] - Fetch options - see https://google.com\n * @property {TransitionOptions} [trans] - Transition settings - see https://google.com\n */\n\n/**!\n * @template T\n * @callback UpdaterFunction\n * @param {Array<any>} upstreamValues\n * @param {T} value\n * @returns {T | Promise<T>}\n */\n\n/**!\n * @template T\n * @callback ValueDeterminer\n * @param {T} [currentValue]\n * @returns {T | Promise<T> | undefined}\n */\n\n/**!\n * @template T\n * @callback UpdateFunction\n * @param {T | ValueDeterminer<T>} value\n * @returns {T | Promise<T> | undefined}\n */\n\n/**!\n * @template T\n * @callback SubDeterminer\n * @param {T} value\n * @returns {void}\n */\n\n/**!\n * @template T\n * @callback SubFunction\n * @param {SubDeterminer<T>} value The store's current value\n * @returns void\n */\n\n/**!\n * @template T\n * @typedef {Object} StoreOptions\n * @property {T} [value]\n * @property {Array<string>} [upstream]\n * @property {UpdaterFunction<T>} [updater]\n * @property {HTMLElement | SVGScriptElement | \"global\"} [scope]\n */\n\n/**!\n * @template T\n * @typedef Store\n * @prop {T} value - The store's current value (read only)\n * @prop {UpdateFunction<T>} update - Update the store's current value\n * @prop {SubFunction<T>} sub - Add a subscription function to the store\n */\n\n/**!\n * @typedef {Function} MfldFunc\n * @param {any} val\n * @param {HTMLElement} [el]\n */\n\n/**!\n * The global Manifold interface.\n */\nexport let Mfld = {\nstore: \n/**!\n* - Create or overwrite a _typed_ global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<T\\>`* \n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\n* @template T\n* @param {string} store_name\n* @param {StoreOptions<T> | T} store_ops\n* @return {Store<T>}\n*/ (store_name, store_ops)=> {\n    if(!store_ops?.hasOwnProperty(\"value\") && !store_ops?.hasOwnProperty(\"updater\")) {\n        store_ops = /** @type {StoreOptions<T>}*/({ value: /** @type {T}*/store_ops });\n    }\n    return /**@type {Store<T>}*/(_store(store_name, /**@type {StoreOptions<T>}*/store_ops))\n},\nustore: \n/**!\n* - Create or overwrite an untyped global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<any\\>`* \n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\n* @param {string} store_name\n* @param {StoreOptions<any> | any} store_ops\n* @return {Store<any>}\n*/ (store_name, store_ops)=> /**@type {Store<any>}*/(_store(store_name, store_ops)),\nget:\n/**!\n * - Retrieve a Manifold store by name. *returns `Store\\<any\\>`*\n * @param {string} store_name\n * @return {Store<any>}\n */ (store_name)=> /**@type {Store<any>}*/(_store(store_name)),\nfunc: \n/**!\n * - Retrieve a Manifold function by name. *val* refers to the store's current value; *el* refers to the element that triggered the update (if applicable). *returns `MfldFunc`*\n * - *Note:* Functions retrived using this method cannot infer the type of the store's value and is therefore **not** type-checked. It is preferable to keep a reference to the function if you need to preserve type information.\n * @param {string} func_name\n * @return {MfldFunc}\n */ (func_name)=> /** @type {(val: any, el?: HTMLElement)=> void}*/(\n// @ts-ignore\n MFLD.fn[func_name]),\nfuncs: \n/**!\n * - Add functions to the Manifold function registry in key-value pairs.\n * - Functions must be registered in order to be accessible to HTML elements via `mfBind`, `mfSync`, and `mfResolve`. \n * - It may still be beneficial to keep a reference to the original function if you need to preserve type information.\n * @param {{ [key: string]: MfldFunc }} funcs\n */ funcs=> {\n    for(let key in funcs) {\n    // @ts-ignore\n    MFLD.fn[key] = funcs[key];\n }},\nconfig:\n/**!\n * - Set Manifold configuration options, including `trans` (DOM transition settings), `fetch` (fetch options), and `profiles` (configuration option overrides that can be set on elements ad-hoc via `mfOverrides`).\n * - Providing the optional `profileName` parameter allows you to save the configuration as a named profile. Otherwise, the profile is saved as the default configuration.\n * @param {MfldOps} new_ops\n * @param {string} [profile_name]\n */ (new_ops, profile_name)=> _setOptions(new_ops, profile_name),\n onTick:\n /**!\n  * - Wait for the next Manifold data update cycle to complete before executing the callback function.\n  * @param {()=> void} cb\n  */ (cb)=> _addToNextTickQueue(cb),\nregister:\n/**!\n * - Register Manifold subscriptions on the DOM. *Optional:* Pass an `HTMLElement` or selector string to scope the registration to a specific element.\n * @param {HTMLElement | string | null} [parent]\n */ (parent)=> {\n    if(typeof parent == \"string\") parent = /** @type {HTMLElement | null}*/(document.querySelector(parent));\n        _register(parent)\n    },\n};"],"names":["ATTR_PREFIX","_inputNestSplitRx","_commaSepRx","_id","Date","now","Math","floor","random","_glob","_getOpOverrides","ops","el","override","dataset","overrides","profiles","_parseFunction","condition","datakey","undefined","fstr","values","split","map","s","trim","reverse","fn","asStr","as","valueList","replace","func","MFLD","length","includes","match","filter","v","Function","e","console","error","workArray","cancelAnimationFrame","_nextTickQueue","_scheduleUpdate","update","push","requestAnimationFrame","_runUpdates","_addSpacer","inEl","wrapper","wrapperHeight","trans","smart","paddingTop","paddingBottom","Element","getComputedStyle","spacer","document","createElement","style","height","abs","clientHeight","after","_adjustSizing","dur","animate","order","out","_getDimensionsAfterUpdate","relation","in","_applyTransition","prepend","container","cloneNode","border","replaceChildren","replaceWith","appendChild","done","forEach","dir","refElement","nodeType","Node","TEXT_NODE","textContent","Array","isArray","transClass","class","classList","add","hooks","dimensions","_getDimensions","position","width","w","left","top","margin","transitionDuration","setTimeout","remove","swap","rect","getBoundingClientRect","clientWidth","paddingLeft","paddingRight","scrollX","scrollY","_hashAny","input","Map","Set","from","entries","hash","char","TextEncoder","encode","toString","st","mut","Store","_updater","_subscriptions","_storedHash","_upstreamStores","_downstreamStores","_scope","_updateTimeout","constructor","name","this","_modify","scope","currentScript","set","mutOb","get","toRemove","observer","MutationObserver","muts","type","node","removedNodes","store","_destroy","disconnect","delete","observe","parentElement","childList","upstream","S","_store","value","updater","_auto_update","sub","ref","immediate","Promise","async","resolve","clearTimeout","newValue","newHash","ds","newVal","found_store","_handleFetch","trigger","fetchOps","href","method","processFunc","ev","preventDefault","stopPropagation","target","fetch","externals","find","allowed","startsWith","domain","location","origin","body","FormData","toFunc","data","request","headers","JSON","stringify","catch","err","code","status","onCode","resp","resType","instruction","selector","toReplace","fullMarkup","DOMParser","parseFromString","querySelector","_register","history","pushState","resolveTxt","resolveFunc","addEventListener","_iterateSiblings","sib","breakFn","cb","nextElementSibling","_registerInternalStore","storeList","options","list","_","observeEl","_handleBindSync","inputs","output","mode","val","attr","setAttribute","dispatchEvent","CustomEvent","warn","getAttribute","numVal","parseFloat","isNaN","_handleTemplates","startElement","templ","nodeName","tagName","newEl","content","before","newFunc","conditional","lastEl","previousElementSibling","lastStore","templStore","contains","obj","key","arr","_iterable","item","rx","RegExp","html","innerHTML","cap","join","element","children","_ops","_modes","m","parent","els","querySelectorAll","_op_overrides","toLowerCase","action","shouldHaveTriggers","setting","sourceParts","triggers","slice","indexOf","pop","processFuncStr","log","Mfld","store_name","store_ops","hasOwnProperty","ustore","func_name","funcs","config","new_ops","profile_name","_setOptions","newops","profileName","onTick","register"],"mappings":"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"}