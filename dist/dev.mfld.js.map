{"version":3,"file":"dev.mfld.js","sources":["../src/util.js","../src/updates.js","../src/store.js","../src/fetch.js","../src/domutil.js","../src/bindsync.js","../src/templates.js","../src/registrar.js","../src/index.js"],"sourcesContent":["export let ATTR_PREFIX = \"mf_\";\r\nexport let _inputNestSplitRx = /[\\.\\[\\]\\?]{1,}/g;\r\nexport let _commaSepRx = /, {0,}/g;\r\n\r\nexport function _randomEnoughId() {\r\n    return `${Date.now()}.${Math.floor(Math.random() * 100_000)}`;\r\n}\r\n\r\nfunction _getOverride(name, el, ops, parse = true, def = \"{}\", as) {\r\n    let override = el.dataset[`${ATTR_PREFIX}${name}`];\r\n    if(!override) return;\r\n    if(name == \"overrides\") return ops.profiles?.[override]?.fetch || JSON.parse(override || def);\r\n    if(parse) return JSON.parse(override || def);\r\n    if(as == \"num\") return parseInt(override);\r\n    if(as == \"bool\") return override == \"true\";\r\n    return override;\r\n}\r\n\r\n/**\r\n * Get or set nested store values\r\n * @param {import(\".\").MfldOps} ops\r\n * @param {HTMLElement} el\r\n * @returns {import(\".\").MfldOps}\r\n */\r\nexport function _getOpOverrides(ops, el) {\r\n    let overrides = _getOverride(\"overrides\", el, ops);\r\n\r\n    return {\r\n        profiles: ops.profiles,\r\n        fetch: {\r\n            ...ops.fetch,\r\n            responseType: _getOverride(\"responsetype\", el, ops, false) || ops.fetch?.responseType,\r\n            ...overrides?.fetch,\r\n            ..._getOverride(\"fetch\", el, ops),\r\n        },\r\n        trans: {\r\n            ...ops.trans,\r\n            dur: _getOverride(\"transdur\", el, ops, true, \"[]\", \"num\") || ops.trans?.dur,\r\n            swap: _getOverride(\"transswap\", el, ops, false, \"\", \"num\") || ops.trans?.swap,\r\n            class: _getOverride(\"transclass\", el, ops, false) || ops.trans?.class,\r\n            smartTransition: _getOverride(\"transsmart\", el, ops, false, undefined, \"bool\") || ops.trans?.smartTransition,\r\n            ...overrides?.trans,\r\n            ..._getOverride(\"trans\", el, ops),\r\n        },\r\n    }\r\n}\r\n\r\n/**\r\n * @param {{el: HTMLElement, datakey: string} | string} condition \r\n * @returns {{ valueList?: string[], func?: Function, as?: string[] }}\r\n */\r\nexport function _parseFunction(condition) {\r\n    if(typeof condition != \"string\") {\r\n        condition = condition?.el?.dataset?.[condition?.datakey] || \"\";\r\n        if(!condition && /** @type {any}*/(condition)?.el?.dataset?.[`${ATTR_PREFIX}else`] != undefined) condition = \"return true\";\r\n    }\r\n\r\n    let [fstr, values] = condition?.split(\"=>\")?.map(s=> s.trim())?.reverse() || [\"\", \"\"];\r\n    let [fn, asStr] = fstr?.split(/\\s{1,}as\\s{1,}/) || [fstr, \"value\"];\r\n    let as = asStr?.split?.(_commaSepRx)?.map?.(s=> s.trim()) || [\"value\"];\r\n\r\n    // Set up function to evaluate store values\r\n    let valueList = values?.split(\",\")?.map(s=> s.replace(/[()]/g, \"\").trim()) || [];\r\n    // @ts-ignore\r\n    let func = globalThis[fn] || MfFn[fn];\r\n    if(!func) {\r\n        // If function is not found, try to create it; account for implicit returns\r\n        if(!valueList?.length && !fn.includes(\"=>\")) {\r\n            if(!fn.match(/\\(|\\)/)) {\r\n                valueList = [fn];\r\n                fn = `return ${fn}`;\r\n            }\r\n            else {\r\n                valueList = fn.match(/\\([^\\)]{1,}\\)/)?.[0]?.replace(/[\\(\\) ]/g, \"\").split(\",\").filter(s=> !s.match(/[\\\"\\'\\`]/)) || [];\r\n            }\r\n        }\r\n\r\n        valueList = (typeof valueList == \"string\" ? valueList.split(/\\s*,\\s*/) : valueList).map(v => v.split(_inputNestSplitRx)[0]);\r\n        if(!fn.match(/^\\s{0,}\\{/) && !fn.includes(\"return\")) fn = fn.replace(/^\\s{0,}/, \"return \");\r\n        try {\r\n            func = new Function(...valueList, fn);\r\n        }\r\n        catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    return { valueList, func, as };\r\n}","/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\nimport { ATTR_PREFIX } from \"./util.js\";\r\n\r\n/**\r\n * @typedef {Object} DomWorkOrder\r\n * @property {HTMLElement} in - The input HTMLElement\r\n * @property {HTMLElement} out - The output HTMLElement\r\n * @property {\"append\" | \"prepend\" | \"swapinner\" | \"swapouter\"} relation - The relation between the input and output elements\r\n * @property {Partial<MfldOps>} ops - The fetch options for the operation\r\n * @property {(el: HTMLElement | null) => void} done - The callback function to be executed when the operation is done\r\n */\r\n\r\n/** @type {(DomWorkOrder | Function)[]} */ let workArray = [];\r\nlet cancelAnimationFrame = false;\r\n/** @type {Map<string, (any | ((any)=> any))>} */\r\n\r\n// Next tick queue\r\n/**\r\n * @type {Function[]}\r\n */\r\nlet _nextTickQueue = [];\r\n\r\n/** @type {HTMLElement | null} */\r\nlet spacer;\r\nlet spacerHeight = \"\";\r\n\r\nexport function _addToNextTickQueue(fn) {\r\n    fn && _nextTickQueue.push(fn);\r\n}\r\n\r\nexport function _scheduleUpdate(update) {\r\n    workArray.push(update);\r\n    if(!cancelAnimationFrame) {\r\n        cancelAnimationFrame = requestAnimationFrame(_runUpdates);\r\n    }\r\n}\r\n\r\nfunction _addSpacer(inEl, wrapper, wrapperHeight, replaceWholeObject = false, ops) {\r\n    if(!(ops.trans?.smartTransition ?? true)) return;\r\n    let { paddingTop, paddingBottom } = wrapper instanceof Element ? window.getComputedStyle(wrapper) : { paddingTop: 0, paddingBottom: 0 };\r\n    let spacer = document.createElement(\"div\");\r\n    spacer.style.height = `calc(${Math.abs(wrapperHeight - (inEl?.clientHeight || 0))}px - ${paddingTop} - ${paddingBottom})`;\r\n    wrapper?.after(spacer);\r\n}\r\n\r\nfunction _adjustSizing(inEl, ops) {\r\n    if(!ops.trans?.smartTransition ?? true) return;\r\n    let dur = (ops?.trans?.dur?.[0] || ops?.trans?.dur || 600)/2\r\n    _scheduleUpdate(()=> {\r\n        spacer?.remove();\r\n        inEl?.animate?.([\r\n            { height: spacerHeight },\r\n            { height: `${inEl.clientHeight || 0}px` }\r\n        ], dur);\r\n    });\r\n}\r\n\r\nfunction _runUpdates() {\r\n    cancelAnimationFrame = false;\r\n    \r\n    for(let order of workArray) {\r\n        if(typeof order == \"function\") {\r\n            order();\r\n            continue;\r\n        }\r\n\r\n        let wrapperHeight = order.out ? order.out.clientHeight : 0;\r\n        let _getDimensionsAfterUpdate = order.relation == \"swapinner\";\r\n\r\n        if(order.relation == \"prepend\") {\r\n            _addSpacer?.(order.in, order.out, wrapperHeight, false, order.ops);\r\n            _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                order.out?.prepend(order.in);\r\n                _adjustSizing?.(order.in, order.ops);\r\n            });\r\n        }\r\n        else {\r\n            if([\"swapinner\", \"swapouter\"].includes(order.relation)) {\r\n                let container = order.out?.cloneNode(true);\r\n                if(container) {\r\n                    order.out?.after(container);\r\n                    if(_getDimensionsAfterUpdate) {\r\n                        container.style.border = \"none\";\r\n                        order.out.replaceChildren();\r\n                    }\r\n                    _applyTransition(container, \"out\", order.ops, undefined, order.out, _getDimensionsAfterUpdate);\r\n                }\r\n            }\r\n\r\n            _addSpacer?.(order.in, order.out, wrapperHeight, false, order.ops);\r\n            _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                if(order.relation == \"swapouter\") order.out?.replaceWith(order.in)\r\n                else order.out?.appendChild(order.in);\r\n                _adjustSizing?.(order.in, order.ops);\r\n            });\r\n        }\r\n\r\n        order.done?.(order.in);\r\n    }\r\n\r\n    _nextTickQueue.forEach(fn => fn());\r\n    _nextTickQueue = [];\r\n    workArray = [];\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {\"in\" | \"out\"} dir \r\n * @param {Partial<MfldOps>} ops \r\n * @param {Function} [fn] \r\n * @param {HTMLElement} [refElement]\r\n * @param {boolean} [_getDimensionsAfterUpdate]\r\n * @returns \r\n */\r\nexport function _applyTransition(el, dir, ops, fn, refElement, _getDimensionsAfterUpdate = false) {\r\n    if(el?.nodeType == Node.TEXT_NODE) {\r\n        el = el.replaceWith(document?.createElement(\"div\")).textContent = el.textContent;\r\n    }\r\n\r\n    if(el) {\r\n        const dur = Array.isArray(ops.trans?.dur) ? ops.trans?.dur[dir == \"in\" ? 0 : 1] || ops.trans?.dur[0] : ops.trans?.dur || 0;\r\n        const transClass = ops?.trans?.class || `${ATTR_PREFIX}trans`;\r\n        el?.classList?.add(transClass);\r\n        ops.trans?.hooks?.[`${dir}-start`]?.(el);\r\n\r\n        if(dir == \"out\") {\r\n            refElement = refElement || el;\r\n            if(!refElement) return;\r\n            let dimensions = {};\r\n            if((ops.trans?.smartTransition ?? true) && !_getDimensionsAfterUpdate) {\r\n                dimensions = _getDimensions(refElement);\r\n            }\r\n\r\n            _scheduleUpdate(()=> {\r\n                if((ops.trans?.smartTransition ?? true) && _getDimensionsAfterUpdate && refElement) {\r\n                    dimensions = _getDimensions(refElement);\r\n                }\r\n\r\n                if(ops.trans?.smartTransition ?? true) {\r\n                    el.style.position = \"fixed\";\r\n                    el.style.width = dimensions.w;\r\n                    el.style.left = dimensions.left;\r\n                    el.style.top = dimensions.top;\r\n                    el.style.margin = \"0\";\r\n                }\r\n                if(dur) el.style.transitionDuration = `${dur}ms`;\r\n\r\n                el.classList?.add(\"out\");\r\n            })\r\n        }\r\n        else {\r\n            el?.classList?.add(\"in\");\r\n            if(dur) el.style.transitionDuration = `${dur}ms`;\r\n            fn?.();\r\n            setTimeout(()=> {\r\n                _scheduleUpdate(()=> {\r\n                    setTimeout(()=> _scheduleUpdate(()=> el?.classList?.remove(dir)), 0);\r\n                });\r\n            }, ops.trans?.swap || 0);\r\n        }\r\n        \r\n        setTimeout(()=> {\r\n            _scheduleUpdate(()=> {\r\n                if(dir == \"out\") el?.remove();\r\n                el?.classList?.remove(transClass);\r\n                ops.trans?.hooks?.[`${dir}-end`]?.(el);\r\n            });\r\n        }, \r\n        dur + (dir == \"in\" ? ops.trans?.swap || 0 : 0));\r\n    }\r\n}\r\n\r\nfunction _getDimensions(refElement) {\r\n    let style = getComputedStyle(refElement);\r\n    return {\r\n        w: `calc(${(refElement).clientWidth}px - ${style.paddingLeft} - ${style.paddingRight})`,\r\n        left: `calc(${refElement.getBoundingClientRect().left}px + ${window.scrollX}px)`,\r\n        top: `calc(${refElement.getBoundingClientRect().top}px + ${window.scrollY}px)`\r\n    };\r\n}","/** \r\n * @template T\r\n * @typedef {import(\"./index.js\").UpdaterFunction<T>} UpdaterFunction \r\n */\r\n/** \r\n * @template T\r\n * @typedef {import(\"./index.js\").StoreOptions<T>} StoreOptions \r\n */\r\n\r\nimport { _scheduleUpdate } from \"./updates.js\";\r\nimport { _randomEnoughId } from \"./util.js\";\r\n\r\n/**\r\n * @callback SubFunction\r\n * @param {any} value\r\n * @param {string} [ref]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @param {any} input \r\n * @returns {any}\r\n */\r\nfunction _hashAny(input) {\r\n    if(!input) return 0;\r\n    if(typeof input == 'number' || input === true) return input;\r\n    if(input instanceof Map || input instanceof Set) return _hashAny(Array.from(input.entries() || input));\r\n\r\n    let hash = 0;\r\n    for(let char of new TextEncoder().encode(input?.toString() || \"\")) \r\n        hash = ((hash << 5) - hash) + char;\r\n    return hash;\r\n}\r\n\r\n//Static\r\n/** @type {Map<string, Store<any>>} */ if(!globalThis.MfSt) globalThis.MfSt = new Map();\r\n/** @type {{[key: string]: Function}} */ if(!globalThis.MfFn) globalThis.MfFn = {};\r\n/** @type {Map<Element, {toDestroy: Set<Store<any>>, observer: MutationObserver}>} */ if(!globalThis.MfMutOb) globalThis.MfMutOb = new Map();\r\n\r\n/**\r\n * @template T\r\n */\r\nexport class Store {\r\n    /** @type {UpdaterFunction<T> | undefined} */ _updater = undefined;\r\n    /** @type {Map<string, SubFunction>} */ _subscriptions = new Map();\r\n    /** @type {string | undefined} */ _storedHash = undefined;\r\n    /** @type {Set<Store<any>>} */ _upstreamStores = new Set();\r\n    /** @type {Set<Store<any>>} */ _downstreamStores = new Set();\r\n    /** @type {HTMLElement | SVGScriptElement | string | \"global\"} */ _scope;\r\n    /** @type {any | undefined} */ _updateTimeout;\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {StoreOptions<T>} [ops]\r\n     */\r\n    constructor(name, ops) {\r\n        return this._modify(name, ops);        \r\n    }\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {StoreOptions<T>} [ops]\r\n     */\r\n    _modify(name, ops) {\r\n        this.name = name;\r\n        this._scope = ops?.scope || document.currentScript || \"global\";\r\n        // @ts-ignore\r\n        MfSt.set(name, this);\r\n\r\n        //Watch for scope destroy\r\n        // Watch for scope destroy\r\n        if(this._scope instanceof Element) {\r\n            // @ts-ignore\r\n            let mutOb = MfMutOb.get(this._scope) || { toRemove: new Set() };\r\n            if(!mutOb.observer) {\r\n                mutOb.observer = new MutationObserver((muts)=> {\r\n                    for(let mut of muts) {\r\n                        if(mut.type == \"childList\") {\r\n                            for(let node of mut.removedNodes) {\r\n                                if(node instanceof Element) {\r\n                                    for(let store of mutOb.toRemove) {\r\n                                        if(store._scope == node) {\r\n                                            let scope = this._scope;\r\n                                            _destroy(store);\r\n                                            mutOb.observer.disconnect();\r\n                                            mutOb.toRemove.delete(store);\r\n                                            // @ts-ignore\r\n                                            MfMutOb.delete(scope)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                /** @type {MutationObserver}*/(mutOb.observer).observe(/** @type {HTMLElement}*/(this._scope?.parentElement), { childList: true });\r\n            }\r\n            mutOb.toRemove.add(this);\r\n            // @ts-ignore\r\n            MfMutOb.set(this._scope, mutOb);\r\n        }\r\n        \r\n        (ops?.upstream?.map(s=> {\r\n            let S = _store(s);\r\n            this._upstreamStores.add(S);\r\n            S._downstreamStores.add(this);\r\n            return S;\r\n        }) || []);\r\n\r\n        this.value = ops?.value;\r\n        this._updater = ops?.updater;\r\n        this._auto_update();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {(T)=> void} sub\r\n     * @param {string | undefined} [ref]\r\n     * @param {boolean} [immediate]\r\n     */\r\n    sub(sub, ref, immediate = true) {\r\n        this._subscriptions.set(ref || _randomEnoughId(), sub);\r\n        if(immediate) sub?.(this.value);\r\n    }\r\n\r\n    //Update (manual or automated -- cascades downstream on batch updates)\r\n    /**\r\n    * @template T\r\n    * @param {T | ((T)=> T | Promise<T>)} value\r\n    */\r\n    async update(value) {\r\n        return new Promise(async (resolve)=> {\r\n            // Group updates\r\n            if(this._updateTimeout) clearTimeout(this._updateTimeout);\r\n            this._updateTimeout = setTimeout(()=> {\r\n\r\n                _scheduleUpdate(async ()=> {\r\n                    //Apply new value   \r\n                    let newValue = (typeof value == \"function\" ? /** @type {Function} */(await value)?.(this.value) : value);\r\n                    let newHash = _hashAny(newValue);\r\n                    \r\n                    if(newHash !== this._storedHash) {\r\n                        this.value = newValue;\r\n                        this._storedHash = newHash;\r\n\r\n                        // Add this store to the work order\r\n                        for(let ds of this._downstreamStores) await ds._auto_update();\r\n\r\n                        // Wait for next animation frame to return the value\r\n                        for(let [ref, sub] of this?._subscriptions || []) sub?.(this.value, ref);\r\n                        resolve(this.value);\r\n                    }\r\n                    else {\r\n                        resolve(this.value);\r\n                    }\r\n                });\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    async _auto_update() {\r\n        let newVal = await this._updater?.(\r\n            Array.from(this._upstreamStores)?.map(S => S?.value) || [], \r\n            /** @type {T} */(this?.value)\r\n        );\r\n\r\n        await this.update(newVal === undefined ? this.value : newVal);\r\n    }\r\n}\r\n\r\n/**\r\n * STORE STATIC METHODS\r\n */\r\n/**\r\n * @template T\r\n * @param {string} name - The name of the store\r\n * @param {StoreOptions<T> | T} [ops] - Options to update the store\r\n * @returns {Store<T>}\r\n */\r\nexport function _store(name, ops) {\r\n    let found_store = MfSt.get(name);\r\n    return ops ? (found_store ? found_store._modify(name, ops) : new Store(name, ops)) : (found_store || new Store(name, ops));\r\n}\r\n/**\r\n * @param {HTMLElement | string} scope \r\n */\r\nexport function _clearScope(scope) {\r\n    // @ts-ignore\r\n    MsFt.forEach(store=> {\r\n        if(store._scope == scope) _destroy(store); \r\n    });\r\n}\r\n\r\n/**\r\n * @param {Store<any>} store \r\n */\r\nexport function _destroy(store) {\r\n    // @ts-ignore\r\n    MfSt.delete(store.name);\r\n    // @ts-ignore\r\n    store = undefined;\r\n}","import { _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _register } from \"./registrar.js\";\r\nimport { _store } from \"./store.js\";\r\n\r\n/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {string} trigger \r\n * @param {MfldOps} fetchOps\r\n * @param {string} href\r\n * @param {string} [method] \r\n * @param {any[] | \"$form\"} [valueList]\r\n * @param {Function} [processFunc]\r\n */\r\nexport function _handleFetch(el, trigger, fetchOps, href, method, valueList, processFunc) {\r\n    /**\r\n     * @param {Event} [e]\r\n     */\r\n    let ev = async e=> {  \r\n        e?.preventDefault();\r\n        e?.stopPropagation();\r\n\r\n        // Set from target element if relevant; fall back to \"get\"\r\n        if(!method) method = /** @type {any}*/(e?.target)?.method || \"get\";\r\n    \r\n        //Make sure we're allowed to fetch\r\n        let externalPermissions = fetchOps?.fetch?.externals?.find(allowed=> href?.startsWith(allowed.domain)) || \r\n            !href.match(/^https?:\\/\\//) || href.includes(location.origin) ? {\r\n                scripts: true,\r\n                styles: true,\r\n        } : undefined;\r\n\r\n        // Parse input\r\n        let input = processFunc?.(...(valueList || [])) || valueList;\r\n        let body = Array.isArray(input) ? input[0] : input == \"$form\" ? new FormData(/** @type {HTMLFormElement}*/(el)) : input;\r\n        if(processFunc) {\r\n            let toFunc = Array.isArray(input) ? (input?.map(s=> _store(s).value) || []) : [body];\r\n            body = processFunc?.(...toFunc)\r\n        }\r\n\r\n        //Fetch data\r\n        let data = await fetch(href, {\r\n            ...(fetchOps?.fetch?.request || {}),\r\n            headers: {\r\n                ...fetchOps?.fetch?.request?.headers,\r\n                \"Manifold-App-Fetch\": \"true\",\r\n            },\r\n            method,\r\n            body: input == \"$form\" || typeof body == \"string\" ? body : JSON.stringify(body),\r\n        })\r\n        .catch(error=> {\r\n            fetchOps?.fetch?.err?.(error) || console.error(\"FETCH ERROR\", error);\r\n        });\r\n\r\n        //Handle onCode callback\r\n        let code = data?.status;\r\n        if(code && fetchOps?.fetch?.onCode?.(code, data) == false) return;\r\n\r\n        //Return JSON or text in callback\r\n        let resp = await data?.[fetchOps?.fetch?.responseType || \"text\"]();\r\n\r\n        // Handle resolutions\r\n        for(let instruction of [\"append\", \"prepend\", \"swapinner\", \"swapouter\"]) {\r\n            let ds = el.dataset[`${ATTR_PREFIX}${instruction}`];\r\n            if(ds === undefined) continue;\r\n            let [selector, toReplace] = ds?.split(\"->\").map(s=> s.trim()) || [];\r\n\r\n            //Extract content and schedule a DOM update\r\n            let fullMarkup = (new DOMParser())?.parseFromString?.(resp, 'text/html');\r\n            if(fullMarkup) {\r\n                _scheduleUpdate({\r\n                    in: /** @type {HTMLElement} */ (fullMarkup.querySelector(selector || \"body\")),\r\n                    out: /** @type {HTMLElement} */ (toReplace ? document.querySelector(toReplace) : el),\r\n                    relation: /** @type {\"append\" | \"prepend\" | \"swapinner\" | \"swapouter\"}*/(instruction),\r\n                    ops: fetchOps,\r\n                    done: (el)=> {\r\n                        _register(el)\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        //Push to history if requested\r\n        if(el.dataset?.[`${ATTR_PREFIX}pushstate`] !== undefined) {\r\n            history.pushState({}, \"\", href);\r\n        }\r\n\r\n        let resolveTxt = el.dataset?.[`${ATTR_PREFIX}resolve`];\r\n        let resolveFunc = _parseFunction(resolveTxt || \"\")?.func;\r\n        resolveFunc?.(resp);\r\n\r\n            // //Clear existing scripts/styles\r\n            // for(let s of [pageScripts, pageStyles]) {\r\n            //     let elements = s.get(fullMarkup) || [];\r\n            //     elements.forEach(el => el.remove());\r\n            //     s.set(fullMarkup, []);\r\n            // }\r\n\r\n            // //Get scripts and styles\r\n            // let seek: string[] = ops.allowScripts ? [\"scripts\"] : [];\r\n            // if(ops.allowStyles) seek.push(\"style\");\r\n            // if(seek.length) {\r\n            //     let globls: NodeListOf<HTMLScriptElement | HTMLStyleElement> = fullMarkup.querySelectorAll(seek.join(\",\"));\r\n            //     for(let el of globls) {\r\n            //         let isScript = el instanceof HTMLScriptElement;\r\n            //         let source = isScript ? pageScripts : pageStyles;\r\n\r\n            //         if(isScript ? ops.allowScripts : ops.allowStyles){\r\n            //             if(!source.has(parent)) source.set(parent, []);\r\n            //             source.get(parent)?.push(el as any);\r\n            //         }\r\n            //         else if(isScript) el.parentNode?.removeChild(el);\r\n            //     }\r\n            // }\r\n    }\r\n\r\n    if(trigger == \"$mount\") ev();\r\n    else el.addEventListener(trigger, ev);\r\n}","import { _store } from \"./store\";\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns {HTMLElement}\r\n */\r\nexport function _ensureNodeName(el, nodeName, skipAttributes = [], removeClasses = []) {\r\n    if(el.tagName == nodeName) return el;\r\n\r\n    let newEl = document.createElement(nodeName);\r\n    newEl.innerHTML = el.innerHTML;       \r\n    [...el.attributes].filter(attr => !skipAttributes.includes(attr.name)).forEach(attr => newEl.setAttribute(attr.name, attr.value));\r\n    removeClasses.forEach(cls => newEl.classList.remove(cls));\r\n    el.replaceWith(newEl);\r\n\r\n    return newEl;\r\n}\r\n\r\n/**\r\n * @param {any} obj \r\n * @param {(value: any, index: any, array?: any)=> void} cb \r\n */\r\nexport function _iterable(obj, cb) {\r\n    if(obj instanceof Map) for(const [key, value] of obj.entries()) cb(key, value);\r\n    else {\r\n        try { \r\n            let arr = Array.from(obj || []);\r\n            if(arr?.length) arr.forEach(cb);\r\n            else for(let key in obj) cb(key, obj[key]);\r\n        }\r\n        catch(e) { console.error(`${obj} is not iterable`); }\r\n    }\r\n}\r\n\r\n// Returns the sibling that fails the condition\r\n/**\r\n * @param {Element | null} [sib] \r\n * @param {Function} [breakFn] \r\n * @param {Function} [cb] \r\n * @returns {Element | null | undefined}\r\n */\r\nexport function _iterateSiblings(sib, breakFn, cb) {\r\n    return breakFn?.(sib) ? sib : _iterateSiblings(cb?.(sib) || sib?.nextElementSibling, breakFn, cb);\r\n}\r\n\r\n/**\r\n * @typedef InternalStoreOptions\r\n * @property {Function} [func]\r\n * @property {HTMLElement} [observeEl]\r\n * @property {boolean} [allowFalse]\r\n */\r\n\r\n/**\r\n * @param {string} [storeName] \r\n * @param {string[]} [storeList] \r\n * @param {InternalStoreOptions} [options]\r\n * @returns \r\n */\r\nexport function _registerInternalStore(storeName = \"\", storeList = [], options) {\r\n    // Register new store (to prevent excess evaluations)\r\n    return _store(storeName, {\r\n        upstream: [...storeList],\r\n        updater: (list)=> {\r\n            try {\r\n                return options?.func?.(...list) || list[0];\r\n            }\r\n            catch(_) {\r\n                return;\r\n            }\r\n        },\r\n        scope: options?.observeEl,\r\n    });\r\n}","import { _registerInternalStore } from \"./domutil\";\r\nimport { _store } from \"./store\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _inputNestSplitRx, _randomEnoughId } from \"./util\";\r\n\r\nexport function _handleBindSync(el, inputs, output, trigger, mode, processFunc) {\r\n    if(mode.match(\"bind\")) {\r\n        _registerInternalStore(_randomEnoughId(), inputs, {\r\n            observeEl: el,\r\n            func: ()=> {\r\n                let val = processFunc?.(...inputs.map(input => MfSt.get(input).value || globalThis.value), el);\r\n                if(output && val != undefined) {\r\n                    let [type, attr] = output.split(\":\");\r\n                    if(type == \"style\") el.style[attr] = val;\r\n                    else if(type == \"attr\") el.setAttribute(attr, val);\r\n                    else el[output] = val;\r\n                }\r\n                el.dispatchEvent(new CustomEvent(trigger));\r\n                return val;\r\n            }\r\n        });\r\n    } else {\r\n        let ev = ()=> {\r\n            if(inputs.length > 1) console.warn(\"Multiple sync props\", el);\r\n            let [type, attr] = inputs?.[0].trim().split(\":\");\r\n            let val = type == \"style\" ? el.style[attr] : type == \"attr\" ? el.getAttribute(attr) : el[type];\r\n            let numVal = parseFloat(val);\r\n            if(!isNaN(numVal)) val = numVal;\r\n            let value = processFunc?.(val, el);\r\n            if(output && value !== undefined) _store(output)?.update?.(value);\r\n        }\r\n        if(trigger == \"$mount\") ev();\r\n        else el.addEventListener(trigger, ev);\r\n    }\r\n}","import { _ensureNodeName, _iterable, _iterateSiblings, _registerInternalStore } from \"./domutil\";\r\nimport { _register } from \"./registrar\";\r\nimport { _store } from \"./store\";\r\nimport { _applyTransition, _scheduleUpdate } from \"./updates\";\r\nimport { _parseFunction, _randomEnoughId, ATTR_PREFIX } from \"./util\";\r\n\r\n/**\r\n * Handle conditional and loop elements\r\n * @param {HTMLElement} el \r\n * @param {string} mode \r\n * @param {string[]} as \r\n * @param {Function | undefined} func\r\n * @param {any[]} valueList\r\n * @param {import(\".\").MfldOps} ops \r\n */\r\nexport function _handleTemplates(el, mode, as, func, valueList, ops) {\r\n    let startElement = document.createElement(\"template\");\r\n    let templ = /** @type {HTMLTemplateElement}*/(_ensureNodeName(/** @type {HTMLElement}*/(el.cloneNode(true)), \"TEMPLATE\"));\r\n    startElement.classList.add(`${mode}-start`);\r\n    templ.classList.add(`${mode}-end`);\r\n\r\n    templ.dataset.nodeName = el.nodeName;\r\n    el.before(startElement);\r\n    el.after(templ);\r\n    el.remove();\r\n\r\n    let templStore = _registerInternalStore(\r\n        _randomEnoughId(),\r\n        valueList, \r\n        { func, observeEl: templ }\r\n    );\r\n\r\n    // Clear old elements\r\n    templStore.sub(val=> {\r\n        _scheduleUpdate(()=> {\r\n            _iterateSiblings(\r\n                startElement?.nextElementSibling, \r\n                (sib)=> sib?.classList?.contains(`${mode}-end`),\r\n                (sib)=> _applyTransition(/** @type {HTMLElement}*/(sib), \"out\", ops, ()=> sib?.remove()), \r\n            );\r\n\r\n            let it = mode.match(/each/) ? _iterable : (object, cb)=> cb(object || \"\");\r\n\r\n            it(val, (val, key)=> {\r\n                if(val == undefined) return;\r\n                let html = templ?.innerHTML || templ?.textContent?.replace(/^\\n{0,}|\\n{0,}$/, \"\") || \"\";\r\n\r\n                // Get all logical bindings and replace values\r\n                let replacements = html.match(/\\${[^}]*}/g) || [];\r\n                for(let rep of replacements) {\r\n                    try {\r\n                        let fn = _parseFunction(`(${as.join(\",\")})=> ${rep.slice(2, rep.length-1)}`)?.func;\r\n                        html = html.replace(rep, fn?.(val, key) || \"\");\r\n                    }\r\n                    catch(e) {\r\n                        html = \"Error in template. Check console for details.\"\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                let elms;\r\n                if(mode.match(/each/)) {\r\n                    let item = /** @type {HTMLTemplateElement}*/(templ.cloneNode(true));\r\n                    item.innerHTML = html || val;\r\n                    elms = item.content.children;\r\n                }\r\n                else {\r\n                    let item = /** @type {HTMLTemplateElement}*/(_ensureNodeName(/** @type {HTMLElement}*/(templ.cloneNode(true)), templ.dataset.nodeName, [\"data-node-name\", `data-${ATTR_PREFIX}`], [`${mode}-end`]));\r\n                    item.innerHTML = html || val;\r\n                    elms = [item];\r\n                }\r\n\r\n                // Replace values\r\n                for(let element of elms) {\r\n                    templ.before(element);\r\n                    _applyTransition(/** @type {HTMLElement}*/(element), \"in\", ops, ()=> _register(/** @type {HTMLElement}*/(element)));\r\n                }\r\n            });\r\n        });\r\n    });\r\n}","import { _store } from \"./store.js\";\r\nimport { _scheduleUpdate } from \"./updates.js\";\r\nimport { _commaSepRx, _getOpOverrides, _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _handleFetch } from \"./fetch.js\";\r\nimport { _handleBindSync } from \"./bindsync.js\";\r\nimport { _handleTemplates } from \"./templates.js\";\r\n/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\n/** @type {Partial<MfldOps>} */\r\nlet _ops = {};\r\nlet _modes = [\"bind\", \"sync\", \"templ\", \"if\", \"each\", \"get\", \"head\", \"post\", \"put\", \"delete\", \"patch\"].map(m=> `${ATTR_PREFIX}${m}`);\r\n\r\n/**!\r\n * @param {Partial<MfldOps>} newops \r\n * @param {string} [profileName] \r\n */\r\nexport function _setOptions(newops, profileName) {\r\n    if(profileName) _ops.profiles = { ..._ops.profiles, [profileName]: newops };\r\n    else _ops = { ..._ops, ...newops };\r\n}\r\n\r\n// Handle location state changes\r\nglobalThis.addEventListener(\"popstate\", (e)=> {\r\n    // for(let update of e.state) {\r\n    //     _scheduleUpdate(update);\r\n    // }\r\n});\r\n\r\n//Register subscriptions on the DOM (scopable in case an update needs run on a subset of the DOM)\r\n/**\r\n * @param {HTMLElement | null} [parent] \r\n */\r\nexport function _register(parent) {\r\n    if(parent && parent.nodeType == Node.TEXT_NODE) return;\r\n\r\n    /** @type {NodeListOf<HTMLElement> | []} */\r\n    let els = (parent || document.body).querySelectorAll(\r\n        `[data-${_modes.join(`],[data-`)}],a,form`\r\n    ) || [];\r\n\r\n    for(let el of els) {\r\n        let _op_overrides = _getOpOverrides(_ops, el);\r\n\r\n        //Check for <a> and <form> elements\r\n        if(el.dataset?.[`${ATTR_PREFIX}promote`] !== undefined) {\r\n            let [mode, href, input, trigger] = el.tagName == \"A\" ?\r\n                [\"get\", /** @type {HTMLAnchorElement}*/(el).href, [], \"click\"] : \r\n                [/** @type {HTMLFormElement}*/(el).method.toLowerCase(), /** @type {HTMLFormElement}*/(el).action, \"$form\", \"submit\"];\r\n\r\n            if(href) {\r\n                _handleFetch(el, trigger, _op_overrides, href, mode, /** @type {any[] | \"$form\"}*/(input));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        //Loop over all data attributes (modes)\r\n        for(let mode in el.dataset) {\r\n            if(!_modes.includes(mode)) continue;\r\n            let shouldHaveTriggers = !mode.match(/bind|templ|if|each/);\r\n\r\n            //Loop over provided settings\r\n            for(let setting of el.dataset?.[mode]?.split(\";;\") || []) {\r\n                //Break out settings\r\n                let [sourceParts, output] = setting?.split(\"->\")?.map(s=> s.trim()) || [];\r\n                let triggers = shouldHaveTriggers ?sourceParts.slice(0, sourceParts.indexOf(\")\"))?.match(/[^\\(\\)]{1,}/g)?.pop()?.split(_commaSepRx)?.map(s=> s.trim()) || [] : [];\r\n                if(!output && mode.match(/get|head|post|put|delete|patch/)) {\r\n                    output = sourceParts.slice(sourceParts.indexOf(\")\") + 1);\r\n                    sourceParts = \"\";\r\n                }\r\n                let processFuncStr = shouldHaveTriggers ? sourceParts?.slice(sourceParts.indexOf(\")\") + 1) : sourceParts;\r\n\r\n                //Handle errors\r\n                if(shouldHaveTriggers && !triggers?.length) { console.error(\"No trigger\", el); break; }\r\n\r\n                let { func, valueList, as } = _parseFunction(processFuncStr);\r\n                if(processFuncStr && !func) console.warn(`\"${processFuncStr}\" not registered`, el);\r\n\r\n                //Handle conditionals and loops\r\n                if(mode.match(/if|each|templ/)) _handleTemplates(el, mode, as || [], func, valueList || [], _op_overrides);\r\n                else {\r\n                    //Loop over triggers\r\n                    if(!triggers?.length) triggers = [\"\"]\r\n                    for(let trigger of triggers) {\r\n                        if(mode.match(/bind|sync/)) _handleBindSync(el, valueList, output, trigger, mode, func);\r\n                        else {\r\n                            _handleFetch(el, trigger, _op_overrides, output, mode.replace(ATTR_PREFIX, \"\"), valueList, func);\r\n                        }\r\n                    }\r\n                }\r\n            }; //End loop settings\r\n        }; //End loop dataset\r\n    };  //End loop elements\r\n}","import { _store } from \"./store.js\";\r\nimport { _addToNextTickQueue } from \"./updates.js\";\r\nimport { _register, _setOptions } from \"./registrar.js\";\r\n\r\n/**! @typedef {\"in-start\"|\"in-end\"|\"out-start\"|\"out-end\"} HookKey*/\r\n\r\n/**!\r\n * @typedef {object} ExternalOptions\r\n * @property {string} domain - The domain name these settings apply to\r\n * @property {boolean} [scripts] - Allow scripts from this domain to execute\r\n * @property {boolean} [styles] - Allow styles from this domain to apply\r\n */\r\n\r\n/**!\r\n * @typedef {object} FetchOptions\r\n * @property {RequestInit} [request] - Fetch request options\r\n * @property {\"json\"|\"text\"} [responseType] - Response type (default: \"text\")\r\n * @property {(err: Error)=> void} [err] - Error callback - run on fetch error\r\n * @property {(code: number, data: void | Response)=> boolean | void} [onCode] - Callback function - run on fetch response code; return `false` to prevent further processing\r\n * @property {ExternalOptions[]} [externals] - External domain fetch settings\r\n */\r\n\r\n/**!\r\n * @typedef {object} TransitionOptions\r\n * @property {string} [class] - CSS class applied to transitions (default: `mfTrans`)\r\n * @property {[number, number] | number} [dur] - Transition duration: [in, out] or single value (in ms); default: 300\r\n * @property {number} [swap] - Swap delay (in ms) - applied between one element's outro start and the replacement's intro start; default: 0\r\n * @property {boolean} [smartTransition] - Enable smart transitions (default: true)\r\n * @property {{ [key in HookKey]?: (el: HTMLElement)=> void }} [hooks] - Transition hooks\r\n */\r\n\r\n/**!\r\n * Manifold options for `fetch`, `trans`, and `profiles`.\r\n * @typedef {Object} MfldOps\r\n * @property {{ [ key: string ]: Partial<MfldOps> }} [profiles] - Fetch profiles assignable to elements\r\n * @property {FetchOptions} [fetch] - Fetch options - see https://google.com\r\n * @property {TransitionOptions} [trans] - Transition settings - see https://google.com\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback UpdaterFunction\r\n * @param {Array<any>} upstreamValues\r\n * @param {T} value\r\n * @returns {T | Promise<T>}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback ValueDeterminer\r\n * @param {T} [currentValue]\r\n * @returns {T | Promise<T> | undefined}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback UpdateFunction\r\n * @param {T | ValueDeterminer<T>} value\r\n * @returns {T | Promise<T> | undefined}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback SubDeterminer\r\n * @param {T} value\r\n * @returns {void}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback SubFunction\r\n * @param {SubDeterminer<T>} value The store's current value\r\n * @returns void\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @typedef {Object} StoreOptions\r\n * @property {T} [value]\r\n * @property {Array<string>} [upstream]\r\n * @property {UpdaterFunction<T>} [updater]\r\n * @property {HTMLElement | SVGScriptElement | \"global\"} [scope]\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @typedef Store\r\n * @prop {T} value - The store's current value (read only)\r\n * @prop {UpdateFunction<T>} update - Update the store's current value\r\n * @prop {SubFunction<T>} sub - Add a subscription function to the store\r\n */\r\n\r\n/**!\r\n * @typedef {Function} MfldFunc\r\n * @param {any} val\r\n * @param {HTMLElement} [el]\r\n */\r\n\r\n/**!\r\n * The global Manifold interface.\r\n */\r\nexport let Mfld = {\r\nstore: \r\n/**!\r\n* - Create or overwrite a _typed_ global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<T\\>`* \r\n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\r\n* @template T\r\n* @param {string} store_name\r\n* @param {StoreOptions<T> | T} store_ops\r\n* @return {Store<T>}\r\n*/ (store_name, store_ops)=> {\r\n    if(!store_ops?.hasOwnProperty(\"value\") && !store_ops?.hasOwnProperty(\"updater\")) {\r\n        store_ops = /** @type {StoreOptions<T>}*/({ value: /** @type {T}*/store_ops });\r\n    }\r\n    return /**@type {Store<T>}*/(_store(store_name, /**@type {StoreOptions<T>}*/store_ops))\r\n},\r\nustore: \r\n/**!\r\n* - Create or overwrite an untyped global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<any\\>`* \r\n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\r\n* @param {string} store_name\r\n* @param {StoreOptions<any> | any} store_ops\r\n* @return {Store<any>}\r\n*/ (store_name, store_ops)=> /**@type {Store<any>}*/(_store(store_name, store_ops)),\r\nget:\r\n/**!\r\n * - Retrieve a Manifold store by name. *returns `Store\\<any\\>`*\r\n * @param {string} store_name\r\n * @return {Store<any>}\r\n */ (store_name)=> /**@type {Store<any>}*/(_store(store_name)),\r\nfunc: \r\n/**!\r\n * - Retrieve a Manifold function by name. *val* refers to the store's current value; *el* refers to the element that triggered the update (if applicable). *returns `MfldFunc`*\r\n * - *Note:* Functions retrived using this method cannot infer the type of the store's value and is therefore **not** type-checked. It is preferable to keep a reference to the function if you need to preserve type information.\r\n * @param {string} func_name\r\n * @return {MfldFunc}\r\n */ (func_name)=> /** @type {(val: any, el?: HTMLElement)=> void}*/(\r\n// @ts-ignore\r\n MfFn[func_name]),\r\nfuncs: \r\n/**!\r\n * - Add functions to the Manifold function registry in key-value pairs.\r\n * - Functions must be registered in order to be accessible to HTML elements via `mfBind`, `mfSync`, and `mfResolve`. \r\n * - It may still be beneficial to keep a reference to the original function if you need to preserve type information.\r\n * @param {{ [key: string]: MfldFunc }} funcs\r\n */ funcs=> {\r\n    for(let key in funcs) {\r\n    // @ts-ignore\r\n    MfFn[key] = funcs[key];\r\n }},\r\nconfig:\r\n/**!\r\n * - Set Manifold configuration options, including `trans` (DOM transition settings), `fetch` (fetch options), and `profiles` (configuration option overrides that can be set on elements ad-hoc via `mfOverrides`).\r\n * - Providing the optional `profileName` parameter allows you to save the configuration as a named profile. Otherwise, the profile is saved as the default configuration.\r\n * @param {MfldOps} new_ops\r\n * @param {string} [profile_name]\r\n */ (new_ops, profile_name)=> _setOptions(new_ops, profile_name),\r\n onTick:\r\n /**!\r\n  * - Wait for the next Manifold data update cycle to complete before executing the callback function.\r\n  * @param {()=> void} cb\r\n  */ (cb)=> _addToNextTickQueue(cb),\r\nregister:\r\n/**!\r\n * - Register Manifold subscriptions on the DOM. *Optional:* Pass an `HTMLElement` or selector string to scope the registration to a specific element.\r\n * @param {HTMLElement | string | null} [parent]\r\n */ (parent)=> {\r\n    if(typeof parent == \"string\") parent = /** @type {HTMLElement | null}*/(document.querySelector(parent));\r\n        _register(parent)\r\n    },\r\n};"],"names":["ATTR_PREFIX","_inputNestSplitRx","_commaSepRx","_randomEnoughId","Date","now","Math","floor","random","_getOverride","name","el","ops","parse","def","as","override","dataset","profiles","fetch","JSON","parseInt","_getOpOverrides","overrides","responseType","trans","dur","swap","class","smartTransition","undefined","_parseFunction","condition","datakey","fstr","values","split","map","s","trim","reverse","fn","asStr","valueList","replace","func","globalThis","MfFn","length","includes","match","filter","v","Function","e","console","error","workArray","cancelAnimationFrame","_nextTickQueue","spacerHeight","_scheduleUpdate","update","push","requestAnimationFrame","_runUpdates","_addSpacer","inEl","wrapper","wrapperHeight","replaceWholeObject","paddingTop","paddingBottom","Element","window","getComputedStyle","spacer","document","createElement","style","height","abs","clientHeight","after","_adjustSizing","animate","order","out","_getDimensionsAfterUpdate","relation","in","_applyTransition","prepend","container","cloneNode","border","replaceChildren","replaceWith","appendChild","done","forEach","dir","refElement","nodeType","Node","TEXT_NODE","textContent","Array","isArray","transClass","classList","add","hooks","dimensions","_getDimensions","position","width","w","left","top","margin","transitionDuration","setTimeout","remove","clientWidth","paddingLeft","paddingRight","getBoundingClientRect","scrollX","scrollY","_hashAny","input","Map","Set","from","entries","hash","char","TextEncoder","encode","toString","MfSt","MfMutOb","Store","_updater","_subscriptions","_storedHash","_upstreamStores","_downstreamStores","_scope","_updateTimeout","constructor","this","_modify","scope","currentScript","set","mutOb","get","toRemove","observer","MutationObserver","muts","mut","type","node","removedNodes","store","_destroy","disconnect","delete","observe","parentElement","childList","upstream","S","_store","value","updater","_auto_update","sub","ref","immediate","Promise","async","resolve","clearTimeout","newValue","newHash","ds","newVal","found_store","_handleFetch","trigger","fetchOps","href","method","processFunc","ev","preventDefault","stopPropagation","target","externals","find","allowed","startsWith","domain","location","origin","body","FormData","toFunc","data","request","headers","stringify","catch","err","code","status","onCode","resp","instruction","selector","toReplace","fullMarkup","DOMParser","parseFromString","querySelector","_register","history","pushState","resolveTxt","resolveFunc","addEventListener","_ensureNodeName","nodeName","skipAttributes","removeClasses","tagName","newEl","innerHTML","attributes","attr","setAttribute","cls","_iterable","obj","cb","key","arr","_iterateSiblings","sib","breakFn","nextElementSibling","_registerInternalStore","storeName","storeList","options","list","_","observeEl","_handleBindSync","inputs","output","mode","val","dispatchEvent","CustomEvent","warn","getAttribute","numVal","parseFloat","isNaN","_handleTemplates","startElement","templ","before","contains","object","elms","html","replacements","rep","join","slice","item","content","children","element","_ops","_modes","m","parent","els","querySelectorAll","_op_overrides","toLowerCase","action","shouldHaveTriggers","setting","sourceParts","triggers","indexOf","pop","processFuncStr","Mfld","store_name","store_ops","hasOwnProperty","ustore","func_name","funcs","config","new_ops","profile_name","_setOptions","newops","profileName","onTick","register"],"mappings":"AAAO,IAAIA,EAAc,MACdC,EAAoB,kBACpBC,EAAc;AAElB,SAASC,IACZ,MAAO,GAAGC,KAAKC,SAASC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC5C,CAEA,SAASC,EAAaC,EAAMC,EAAIC,EAAKC,GAAQ,EAAMC,EAAM,KAAMC,GAC3D,IAAIC,EAAWL,EAAGM,QAAQ,GAAGjB,IAAcU;AAC3C,GAAIM,EACJ,MAAW,aAARN,EAA4BE,EAAIM,WAAWF,IAAWG,OAASC,KAAKP,MAAMG,GAAYF,GACtFD,EAAcO,KAAKP,MAAMG,GAAYF,GAC/B,OAANC,EAAoBM,SAASL,GACvB,QAAND,EAAiC,QAAZC,EACjBA,CACX,CAQO,SAASM,EAAgBV,EAAKD,GACjC,IAAIY,EAAYd,EAAa,YAAaE,EAAIC;AAE9C,MAAO,CACHM,SAAUN,EAAIM,SACdC,MAAO,IACAP,EAAIO,MACPK,aAAcf,EAAa,eAAgBE,EAAIC,GAAK,IAAUA,EAAIO,OAAOK,gBACtED,GAAWJ,SACXV,EAAa,QAASE,EAAIC,IAEjCa,MAAO,IACAb,EAAIa,MACPC,IAAKjB,EAAa,WAAYE,EAAIC,GAAK,EAAM,KAAM,QAAUA,EAAIa,OAAOC,IACxEC,KAAMlB,EAAa,YAAaE,EAAIC,GAAK,EAAO,GAAI,QAAUA,EAAIa,OAAOE,KACzEC,MAAOnB,EAAa,aAAcE,EAAIC,GAAK,IAAUA,EAAIa,OAAOG,MAChEC,gBAAiBpB,EAAa,aAAcE,EAAIC,GAAK,OAAOkB,EAAW,SAAWlB,EAAIa,OAAOI,mBAC1FN,GAAWE,SACXhB,EAAa,QAASE,EAAIC,IAGzC,CAMO,SAASmB,EAAeC,GACJ,iBAAbA,KACNA,EAAYA,GAAWrB,IAAIM,UAAUe,GAAWC,UAAY,KAC0BH,MAApD,GAAanB,IAAIM,UAAU,GAAGjB,WAAiCgC,EAAY;AAGjH,IAAKE,EAAMC,GAAUH,GAAWI,MAAM,OAAOC,KAAIC,GAAIA,EAAEC,UAASC,WAAa,CAAC,GAAI,KAC7EC,EAAIC,GAASR,GAAME,MAAM,mBAAqB,CAACF,EAAM,SACtDnB,EAAK2B,GAAON,QAAQlC,IAAcmC,OAAMC,GAAIA,EAAEC,UAAW,CAAC,SAG1DI,EAAYR,GAAQC,MAAM,MAAMC,KAAIC,GAAIA,EAAEM,QAAQ,QAAS,IAAIL,UAAW,GAE1EM,EAAOC,WAAWL,IAAOM,KAAKN;AAClC,IAAII,EAAM,CAEFF,GAAWK,QAAWP,EAAGQ,SAAS,QAC9BR,EAAGS,MAAM,SAKTP,EAAYF,EAAGS,MAAM,mBAAmB,IAAIN,QAAQ,WAAY,IAAIR,MAAM,KAAKe,QAAOb,IAAKA,EAAEY,MAAM,eAAgB,IAJnHP,EAAY,CAACF,GACbA,EAAK,UAAUA,MAOvBE,GAAiC,iBAAbA,EAAwBA,EAAUP,MAAM,WAAaO,GAAWN,KAAIe,GAAKA,EAAEhB,MAAMnC,GAAmB,KACpHwC,EAAGS,MAAM,cAAiBT,EAAGQ,SAAS,YAAWR,EAAKA,EAAGG,QAAQ,UAAW;AAChF,IACIC,EAAO,IAAIQ,YAAYV,EAAWF,EACrC,CACD,MAAMa,GACFC,QAAQC,MAAMF,EACjB,CACJ,CAED,MAAO,CAAEX,YAAWE,OAAM9B,KAC9B,CC3E2C,IAAI0C,EAAY,GACvDC,GAAuB,EAOvBC,EAAiB,GAIjBC,EAAe;AAMZ,SAASC,EAAgBC,GAC5BL,EAAUM,KAAKD,GACXJ,IACAA,EAAuBM,sBAAsBC,GAErD,CAEA,SAASC,EAAWC,EAAMC,EAASC,EAAeC,GAAqB,EAAO1D,GAC1E,KAAKA,EAAIa,OAAOI,iBAAmB,GAAO;AAC1C,IAAI0C,WAAEA,EAAUC,cAAEA,GAAkBJ,aAAmBK,QAAUC,OAAOC,iBAAiBP,GAAW,CAAEG,WAAY,EAAGC,cAAe,GAChII,EAASC,SAASC,cAAc;AACpCF,EAAOG,MAAMC,OAAS,QAAQ1E,KAAK2E,IAAIZ,GAAiBF,GAAMe,cAAgB,WAAWX,OAAgBC,KACzGJ,GAASe,MAAMP,EACnB,CAEA,SAASQ,EAAcjB,EAAMvD,GACzB,IAAIA,EAAIa,OAAOI,iBAAmB,EAAM;AACxC,IAAIH,GAAOd,GAAKa,OAAOC,MAAM,IAAMd,GAAKa,OAAOC,KAAO,KAAK;AAC3DmC,GAAgB,KAEZM,GAAMkB,UAAU,CACZ,CAAEL,OAAQpB,GACV,CAAEoB,OAAQ,GAAGb,EAAKe,cAAgB,QACnCxD,EAAI,GAEf,CAEA,SAASuC,IACLP,GAAuB;AAEvB,IAAI,IAAI4B,KAAS7B,EAAW,CACxB,GAAmB,mBAAT6B,EAAqB,CAC3BA;AACA,QACH,CAED,IAAIjB,EAAgBiB,EAAMC,IAAMD,EAAMC,IAAIL,aAAe,EACrDM,EAA8C,aAAlBF,EAAMG;AAEtC,GAAqB,WAAlBH,EAAMG,SACLvB,IAAaoB,EAAMI,GAAIJ,EAAMC,IAAKlB,GAAe,EAAOiB,EAAM1E,KAC9D+E,EAAiBL,EAAMI,GAAI,KAAMJ,EAAM1E,KAAK,KACxC0E,EAAMC,KAAKK,QAAQN,EAAMI,IACzBN,IAAgBE,EAAMI,GAAIJ,EAAM1E,IAAI;IAGvC,CACD,GAAG,CAAC,YAAa,aAAaqC,SAASqC,EAAMG,UAAW,CACpD,IAAII,EAAYP,EAAMC,KAAKO,WAAU;AAClCD,IACCP,EAAMC,KAAKJ,MAAMU,GACdL,IACCK,EAAUd,MAAMgB,OAAS,OACzBT,EAAMC,IAAIS,mBAEdL,EAAiBE,EAAW,MAAOP,EAAM1E,SAAKkB,EAAWwD,EAAMC,IAAKC,GAE3E,CAEDtB,IAAaoB,EAAMI,GAAIJ,EAAMC,IAAKlB,GAAe,EAAOiB,EAAM1E,KAC9D+E,EAAiBL,EAAMI,GAAI,KAAMJ,EAAM1E,KAAK,KACnB,aAAlB0E,EAAMG,SAAyBH,EAAMC,KAAKU,YAAYX,EAAMI,IAC1DJ,EAAMC,KAAKW,YAAYZ,EAAMI,IAClCN,IAAgBE,EAAMI,GAAIJ,EAAM1E,IAAI,GAE3C,CAED0E,EAAMa,OAAOb,EAAMI,GACtB,CAED/B,EAAeyC,SAAQ3D,GAAMA,MAC7BkB,EAAiB,GACjBF,EAAY,EAChB,CAWO,SAASkC,EAAiBhF,EAAI0F,EAAKzF,EAAK6B,EAAI6D,EAAYd,GAA4B,GAKvF,GAJG7E,GAAI4F,UAAYC,KAAKC,YACpB9F,EAAKA,EAAGsF,YAAYpB,UAAUC,cAAc,QAAQ4B,YAAc/F,EAAG+F,aAGtE/F,EAAI,CACH,MAAMe,EAAMiF,MAAMC,QAAQhG,EAAIa,OAAOC,KAAOd,EAAIa,OAAOC,IAAW,MAAP2E,EAAc,EAAI,IAAMzF,EAAIa,OAAOC,IAAI,GAAKd,EAAIa,OAAOC,KAAO,EACnHmF,EAAajG,GAAKa,OAAOG,OAAS,GAAG5B;AAI3C,GAHAW,GAAImG,WAAWC,IAAIF,GACnBjG,EAAIa,OAAOuF,QAAQ,GAAGX,aAAe1F,GAE3B,OAAP0F,EAAc,CAEb,KADAC,EAAaA,GAAc3F,GACX;AAChB,IAAIsG,EAAa,CAAA,GACbrG,EAAIa,OAAOI,iBAAmB,KAAU2D,IACxCyB,EAAaC,EAAeZ,IAGhCzC,GAAgB,MACRjD,EAAIa,OAAOI,iBAAmB,IAAS2D,GAA6Bc,IACpEW,EAAaC,EAAeZ,KAG7B1F,EAAIa,OAAOI,iBAAmB,KAC7BlB,EAAGoE,MAAMoC,SAAW,QACpBxG,EAAGoE,MAAMqC,MAAQH,EAAWI,EAC5B1G,EAAGoE,MAAMuC,KAAOL,EAAWK,KAC3B3G,EAAGoE,MAAMwC,IAAMN,EAAWM,IAC1B5G,EAAGoE,MAAMyC,OAAS,KAEnB9F,IAAKf,EAAGoE,MAAM0C,mBAAqB,GAAG/F,OAEzCf,EAAGmG,WAAWC,IAAI,MAAM,GAE/B,MAEGpG,GAAImG,WAAWC,IAAI,MAChBrF,IAAKf,EAAGoE,MAAM0C,mBAAqB,GAAG/F,OACzCe,MACAiF,YAAW,KACP7D,GAAgB,KACZ6D,YAAW,IAAK7D,GAAgB,IAAKlD,GAAImG,WAAWa,OAAOtB,MAAO,EAAE,GACtE,GACHzF,EAAIa,OAAOE,MAAQ;AAG1B+F,YAAW,KACP7D,GAAgB,KACF,OAAPwC,GAAc1F,GAAIgH,SACrBhH,GAAImG,WAAWa,OAAOd,GACtBjG,EAAIa,OAAOuF,QAAQ,GAAGX,WAAa1F,EAAG,GACxC,GAENe,GAAc,MAAP2E,GAAczF,EAAIa,OAAOE,MAAY,GAC/C,CACL,CAEA,SAASuF,EAAeZ,GACpB,IAAIvB,EAAQJ,iBAAiB2B;AAC7B,MAAO,CACHe,EAAG,QAAQ,EAAaO,mBAAmB7C,EAAM8C,iBAAiB9C,EAAM+C,gBACxER,KAAM,QAAQhB,EAAWyB,wBAAwBT,YAAY5C,OAAOsD,aACpET,IAAK,QAAQjB,EAAWyB,wBAAwBR,WAAW7C,OAAOuD,aAE1E,CC7JA,SAASC,EAASC,GACd,IAAIA,EAAO,OAAO;AAClB,GAAmB,iBAATA,IAA+B,IAAVA,EAAgB,OAAOA;AACtD,GAAGA,aAAiBC,KAAOD,aAAiBE,IAAK,OAAOH,EAASvB,MAAM2B,KAAKH,EAAMI,WAAaJ;AAE/F,IAAIK,EAAO;AACX,IAAI,IAAIC,KAAQ,IAAIC,aAAcC,OAAOR,GAAOS,YAAc,IAC1DJ,GAASA,GAAQ,GAAKA,EAAQC;AAClC,OAAOD,CACX,CAG2C1F,WAAW+F,OAAM/F,WAAW+F,KAAO,IAAIT,KACrCtF,WAAWC,OAAMD,WAAWC,KAAO,CAAA,GACUD,WAAWgG,UAAShG,WAAWgG,QAAU,IAAIV;AAKhI,MAAMW,EACqCC,OAAWlH;AACjBmH,EAAiB,IAAIb;AAC3Bc,OAAcpH;AACjBqH,EAAkB,IAAId;AACtBe,EAAoB,IAAIf;AACWgB;AACnCC;AAM/B,WAAAC,CAAY7I,EAAME,GACd,OAAO4I,KAAKC,EAAQ/I,EAAME,EAC7B,CAMD,CAAA6I,CAAQ/I,EAAME,GAQV,GAPA4I,KAAK9I,KAAOA,EACZ8I,KAAKH,EAASzI,GAAK8I,OAAS7E,SAAS8E,eAAiB,SAEtDd,KAAKe,IAAIlJ,EAAM8I,MAIZA,KAAKH,aAAkB5E,QAAS,CAE/B,IAAIoF,EAAQf,QAAQgB,IAAIN,KAAKH,IAAW,CAAEU,SAAU,IAAI1B;AACpDwB,EAAMG,WACNH,EAAMG,SAAW,IAAIC,kBAAkBC,IACnC,IAAI,IAAIC,KAAOD,EACX,GAAe,aAAZC,EAAIC,KACH,IAAI,IAAIC,KAAQF,EAAIG,aAChB,GAAGD,aAAgB5F,QACf,IAAI,IAAI8F,KAASV,EAAME,SACnB,GAAGQ,EAAMlB,GAAUgB,EAAM,CACrB,IAAIX,EAAQF,KAAKH;AACjBmB,EAASD,GACTV,EAAMG,SAASS,aACfZ,EAAME,SAASW,OAAOH,GAEtBzB,QAAQ4B,OAAOhB,EAClB,CAKpB,IAE0BG,EAAc,SAAEc,QAAkCnB,KAAKH,GAAQuB,cAAgB,CAAEC,WAAW,KAE/HhB,EAAME,SAAShD,IAAIyC,MAEnBV,QAAQc,IAAIJ,KAAKH,EAAQQ,EAC5B,CAYD,OAVCjJ,GAAKkK,UAAUzI,KAAIC,IAChB,IAAIyI,EAAIC,EAAO1I;AAGf,OAFAkH,KAAKL,EAAgBpC,IAAIgE,GACzBA,EAAE3B,EAAkBrC,IAAIyC,MACjBuB,CAAC,IAGZvB,KAAKyB,MAAQrK,GAAKqK,MAClBzB,KAAKR,EAAWpI,GAAKsK,QACrB1B,KAAK2B,IACE3B,IACV,CAOD,GAAA4B,CAAIA,EAAKC,EAAKC,GAAY,GACtB9B,KAAKP,EAAeW,IAAIyB,GAAOlL,IAAmBiL,GAC/CE,GAAWF,IAAM5B,KAAKyB,MAC5B,CAOD,YAAMnH,CAAOmH,GACT,OAAO,IAAIM,SAAQC,MAAOC,IAEnBjC,KAAKF,GAAgBoC,aAAalC,KAAKF,GAC1CE,KAAKF,EAAiB5B,YAAW,KAE7B7D,GAAgB2H,UAEZ,IAAIG,EAA4B,mBAATV,SAAoDA,KAASzB,KAAKyB,OAASA,EAC9FW,EAAU1D,EAASyD;AAEvB,GAAGC,IAAYpC,KAAKN,EAAa,CAC7BM,KAAKyB,MAAQU,EACbnC,KAAKN,EAAc0C;AAGnB,IAAI,IAAIC,KAAMrC,KAAKJ,QAAyByC,EAAGV;AAG/C,IAAI,IAAKE,EAAKD,KAAQ5B,MAAMP,GAAkB,GAAImC,IAAM5B,KAAKyB,MAAOI;AACpEI,EAAQjC,KAAKyB,MAChB,MAEGQ,EAAQjC,KAAKyB,MAChB,GACH,GACH,EAAE,GAEZ,CAED,OAAME,GACF,IAAIW,QAAetC,KAAKR,IACpBrC,MAAM2B,KAAKkB,KAAKL,IAAkB9G,KAAI0I,GAAKA,GAAGE,SAAU,GACvCzB,MAAMyB;MAGrBzB,KAAK1F,YAAkBhC,IAAXgK,EAAuBtC,KAAKyB,MAAQa,EACzD,EAYE,SAASd,EAAOtK,EAAME,GACzB,IAAImL,EAAclD,KAAKiB,IAAIpJ;AAC3B,OAAOE,EAAOmL,EAAcA,EAAYtC,EAAQ/I,EAAME,GAAO,IAAImI,EAAMrI,EAAME,GAASmL,GAAe,IAAIhD,EAAMrI,EAAME,EACzH,CAcO,SAAS4J,EAASD,GAErB1B,KAAK6B,OAAOH,EAAM7J,MAElB6J,OAAQzI,CACZ,CCzLO,SAASkK,EAAarL,EAAIsL,EAASC,EAAUC,EAAMC,EAAQzJ,EAAW0J,GAIzE,IAAIC,EAAKd,UACLlI,GAAGiJ,iBACHjJ,GAAGkJ,kBAGCJ,IAAQA,GAA2B9I,GAAGmJ,SAASL,QAAU,OAGnCF,GAAU/K,OAAOuL,WAAWC,MAAKC,GAAUT,GAAMU,WAAWD,EAAQE,YACzFX,EAAKjJ,MAAM,iBAAmBiJ,EAAKlJ,SAAS8J,SAASC;AAM1D,IAAI7E,EAAQkE,OAAkB1J,GAAa,KAAQA,EAC/CsK,EAAOtG,MAAMC,QAAQuB,GAASA,EAAM,GAAc,SAATA,EAAmB,IAAI+E,SAAQ,GAAsC/E;AAClH,GAAGkE,EAAa,CACZ,IAAIc,EAASxG,MAAMC,QAAQuB,GAAUA,GAAO9F,KAAIC,GAAI0I,EAAO1I,GAAG2I,SAAU,GAAM,CAACgC;AAC/EA,EAAOZ,OAAiBc,EAC3B,CAGD,IAAIC,QAAajM,MAAMgL,EAAM,IACrBD,GAAU/K,OAAOkM,SAAW,CAAE,EAClCC,QAAS,IACFpB,GAAU/K,OAAOkM,SAASC,QAC7B,qBAAsB,QAE1BlB,SACAa,KAAe,SAAT9E,GAAmC,iBAAR8E,EAAmBA,EAAO7L,KAAKmM,UAAUN,KAE7EO,OAAMhK,IACH0I,GAAU/K,OAAOsM,MAAMjK,IAAUD,QAAQC,MAAM,cAAeA,EAAM,IAIpEkK,EAAON,GAAMO;AACjB,GAAGD,GAAiD,GAAzCxB,GAAU/K,OAAOyM,SAASF,EAAMN,GAAgB;AAG3D,IAAIS,QAAaT,IAAOlB,GAAU/K,OAAOK,cAAgB;AAGzD,IAAI,IAAIsM,IAAe,CAAC,SAAU,UAAW,YAAa,aAAc,CACpE,IAAIjC,EAAKlL,EAAGM,QAAQ,GAAGjB,IAAc8N;AACrC,QAAUhM,IAAP+J,EAAkB;AACrB,IAAKkC,EAAUC,GAAanC,GAAIzJ,MAAM,MAAMC,KAAIC,GAAIA,EAAEC,UAAW,GAG7D0L,GAAa,IAAKC,YAAcC,kBAAkBN,EAAM;AACzDI,GACCpK,EAAgB,CACZ6B,GAAgCuI,EAAWG,cAAcL,GAAY,QACrExI,IAAiCyI,EAAYnJ,SAASuJ,cAAcJ,GAAarN,EACjF8E,SAAyE,EACzE7E,IAAKsL,EACL/F,KAAOxF,IACH0N,EAAU1N,EAAG,GAI5B,MAG8CmB,IAA5CnB,EAAGM,UAAU,GAAGjB,eACfsO,QAAQC,UAAU,CAAA,EAAI,GAAIpC;AAG9B,IAAIqC,EAAa7N,EAAGM,UAAU,GAAGjB,YAC7ByO,EAAc1M,EAAeyM,GAAc,KAAK3L;AACpD4L,IAAcZ,EAAK;AA2BT,UAAX5B,EAAqBK,IACnB3L,EAAG+N,iBAAiBzC,EAASK,EACtC,CClHO,SAASqC,EAAgBhO,EAAIiO,EAAUC,EAAiB,GAAIC,EAAgB,IAC/E,GAAGnO,EAAGoO,SAAWH,EAAU,OAAOjO;AAElC,IAAIqO,EAAQnK,SAASC,cAAc8J;AAMnC,OALAI,EAAMC,UAAYtO,EAAGsO,UACrB,IAAItO,EAAGuO,YAAY/L,QAAOgM,IAASN,EAAe5L,SAASkM,EAAKzO,QAAO0F,SAAQ+I,GAAQH,EAAMI,aAAaD,EAAKzO,KAAMyO,EAAKlE,SAC1H6D,EAAc1I,SAAQiJ,GAAOL,EAAMlI,UAAUa,OAAO0H,KACpD1O,EAAGsF,YAAY+I,GAERA,CACX,CAMO,SAASM,EAAUC,EAAKC,GAC3B,GAAGD,aAAenH,IAAK,IAAI,MAAOqH,EAAKxE,KAAUsE,EAAIhH,UAAWiH,EAAGC,EAAKxE;KAEpE,IACI,IAAIyE,EAAM/I,MAAM2B,KAAKiH,GAAO;AAC5B,GAAGG,GAAK1M,OAAQ0M,EAAItJ,QAAQoJ;KACvB,IAAI,IAAIC,KAAOF,EAAKC,EAAGC,EAAKF,EAAIE,GACxC,CACD,MAAMnM,GAAKC,QAAQC,MAAM,GAAG+L,oBAAyB,CAE7D,CASO,SAASI,EAAiBC,EAAKC,EAASL,GAC3C,OAAOK,IAAUD,GAAOA,EAAMD,EAAiBH,IAAKI,IAAQA,GAAKE,mBAAoBD,EAASL,EAClG,CAeO,SAASO,EAAuBC,EAAY,GAAIC,EAAY,GAAIC,GAEnE,OAAOlF,EAAOgF,EAAW,CACrBlF,SAAU,IAAImF,GACd/E,QAAUiF,IACN,IACI,OAAOD,GAASrN,UAAUsN,IAASA,EAAK,EAC3C,CACD,MAAMC,GACF,MACH,GAEL1G,MAAOwG,GAASG,WAExB,CCnEO,SAASC,EAAgB3P,EAAI4P,EAAQC,EAAQvE,EAASwE,EAAMpE,GAC/D,GAAGoE,EAAKvN,MAAM,QACV6M,EAAuB5P,IAAmBoQ,EAAQ,CAC9CF,UAAW1P,EACXkC,KAAM,KACF,IAAI6N,EAAMrE,OAAiBkE,EAAOlO,KAAI8F,GAASU,KAAKiB,IAAI3B,GAAO8C,OAASnI,WAAWmI,QAAQtK;AAC3F,GAAG6P,GAAiB1O,MAAP4O,EAAkB,CAC3B,IAAKtG,EAAM+E,GAAQqB,EAAOpO,MAAM;AACrB,SAARgI,EAAiBzJ,EAAGoE,MAAMoK,GAAQuB,EACrB,QAARtG,EAAgBzJ,EAAGyO,aAAaD,EAAMuB,GACzC/P,EAAG6P,GAAUE,CACrB,CAED,OADA/P,EAAGgQ,cAAc,IAAIC,YAAY3E,IAC1ByE,CAAG;IAGf,CACH,IAAIpE,EAAK,KACFiE,EAAOvN,OAAS,GAAGO,QAAQsN,KAAK,sBAAuBlQ;AAC1D,IAAKyJ,EAAM+E,GAAQoB,IAAS,GAAGhO,OAAOH,MAAM,KACxCsO,EAAc,SAARtG,EAAkBzJ,EAAGoE,MAAMoK,GAAgB,QAAR/E,EAAiBzJ,EAAGmQ,aAAa3B,GAAQxO,EAAGyJ,GACrF2G,EAASC,WAAWN;AACpBO,MAAMF,KAASL,EAAMK;AACzB,IAAI9F,EAAQoB,IAAcqE,EAAK/P;AAC5B6P,QAAoB1O,IAAVmJ,GAAqBD,EAAOwF,IAAS1M,SAASmH,EAAM;AAEvD,UAAXgB,EAAqBK,IACnB3L,EAAG+N,iBAAiBzC,EAASK,EACrC,CACL,CCnBO,SAAS4E,EAAiBvQ,EAAI8P,EAAM1P,EAAI8B,EAAMF,EAAW/B,GAC5D,IAAIuQ,EAAetM,SAASC,cAAc,YACtCsM,EAA0CzC,EAA0ChO,EAAGmF,WAAU,GAAQ;AAC7GqL,EAAarK,UAAUC,IAAI,GAAG0J,WAC9BW,EAAMtK,UAAUC,IAAI,GAAG0J,SAEvBW,EAAMnQ,QAAQ2N,SAAWjO,EAAGiO,SAC5BjO,EAAG0Q,OAAOF,GACVxQ,EAAGwE,MAAMiM,GACTzQ,EAAGgH,SAEcoI,EACb5P,IACAwC,EACA,CAAEE,OAAMwN,UAAWe,IAIZhG,KAAIsF,IACX7M,GAAgB,KACZ8L,EACIwB,GAAcrB,oBACbF,GAAOA,GAAK9I,WAAWwK,SAAS,GAAGb,WACnCb,GAAOjK,EAAgB,EAAiC,MAAO/E,GAAK,IAAKgP,GAAKjI,cAG1E8I,EAAKvN,MAAM,QAAUoM,EAAY,CAACiC,EAAQ/B,IAAMA,EAAG+B,GAAU,KAEnEb,GAAK,CAACA,EAAKjB,KACV,GAAU3N,MAAP4O,EAAkB;AACrB,IAeIc,EAfAC,EAAOL,GAAOnC,WAAamC,GAAO1K,aAAa9D,QAAQ,kBAAmB,KAAO,GAGjF8O,EAAeD,EAAKvO,MAAM,eAAiB;AAC/C,IAAI,IAAIyO,KAAOD,EACX,IACI,IAAIjP,EAAKV,EAAe,IAAIhB,EAAG6Q,KAAK,WAAWD,EAAIE,MAAM,EAAGF,EAAI3O,OAAO,OAAOH;AAC9E4O,EAAOA,EAAK7O,QAAQ+O,EAAKlP,IAAKiO,EAAKjB,IAAQ,GAC9C,CACD,MAAMnM,GACFmO,EAAO,gDACPlO,QAAQC,MAAMF,EACjB,CAIL,GAAGmN,EAAKvN,MAAM,QAAS,CACnB,IAAI4O,EAAyCV,EAAMtL,WAAU;AAC7DgM,EAAK7C,UAAYwC,GAAQf,EACzBc,EAAOM,EAAKC,QAAQC,QACvB,KACI,CACD,IAAIF,EAAyCnD,EAA0CyC,EAAMtL,WAAU,GAAQsL,EAAMnQ,QAAQ2N,SAAU,CAAC,iBAAkB,QAAQ5O,KAAgB,CAAC,GAAGyQ;AACtLqB,EAAK7C,UAAYwC,GAAQf,EACzBc,EAAO,CAACM,EACX,CAGD,IAAI,IAAIG,KAAWT,EACfJ,EAAMC,OAAOY,GACbtM,EAAgB,EAAqC,KAAM/E,GAAK,IAAKyN,EAAS,IACjF,GACH,GACJ,GAEV,CCvEA,IAAI6D,EAAO,CAAA,EACPC,EAAS,CAAC,OAAQ,OAAQ,QAAS,KAAM,OAAQ,MAAO,OAAQ,OAAQ,MAAO,SAAU,SAAS9P,KAAI+P,GAAI,GAAGpS,IAAcoS;AAsBxH,SAAS/D,EAAUgE,GACtB,GAAGA,GAAUA,EAAO9L,UAAYC,KAAKC,UAAW;AAGhD,IAAI6L,GAAOD,GAAUxN,SAASoI,MAAMsF,iBAChC,SAASJ,EAAOP,KAAK,wBACpB;AAEL,IAAI,IAAIjR,KAAM2R,EAAK,CACf,IAAIE,EAAgBlR,EAAgB4Q,EAAMvR;AAG1C,QAA6CmB,IAA1CnB,EAAGM,UAAU,GAAGjB,YAAqC,CACpD,IAAKyQ,EAAMtE,EAAMhE,EAAO8D,GAAyB,KAAdtL,EAAGoO,QAClC,CAAC,MAAsC,EAAK5C,KAAM,GAAI,SACtD,CAA8B,EAAKC,OAAOqG,cAA4C,EAAKC,OAAQ,QAAS;AAEhH,GAAGvG,EAAM,CACLH,EAAarL,EAAIsL,EAASuG,EAAerG,EAAMsE,EAAoC;AACnF,QACH,CACJ,CAGD,IAAI,IAAIA,KAAQ9P,EAAGM,QAAS,CACxB,IAAIkR,EAAOlP,SAASwN,GAAO;AAC3B,IAAIkC,GAAsBlC,EAAKvN,MAAM;AAGrC,IAAI,IAAI0P,KAAWjS,EAAGM,UAAUwP,IAAOrO,MAAM,OAAS,GAAI,CAEtD,IAAKyQ,EAAarC,GAAUoC,GAASxQ,MAAM,OAAOC,KAAIC,GAAIA,EAAEC,UAAW,GACnEuQ,EAAWH,GAAoBE,EAAYhB,MAAM,EAAGgB,EAAYE,QAAQ,OAAO7P,MAAM,iBAAiB8P,OAAO5Q,MAAMlC,IAAcmC,KAAIC,GAAIA,EAAEC,UAAgB;CAC3JiO,GAAUC,EAAKvN,MAAM,oCACrBsN,EAASqC,EAAYhB,MAAMgB,EAAYE,QAAQ,KAAO,GACtDF,EAAc;AAElB,IAAII,EAAiBN,EAAqBE,GAAahB,MAAMgB,EAAYE,QAAQ,KAAO,GAAKF;AAG7F,GAAGF,IAAuBG,GAAU9P,OAAQ,CAAEO,QAAQC,MAAM,aAAc7C;AAAK,KAAQ,CAEvF,IAAIkC,KAAEA,EAAIF,UAAEA,EAAS5B,GAAEA,GAAOgB,EAAekR;AAI7C,GAHGA,IAAmBpQ,GAAMU,QAAQsN,KAAK,IAAIoC,oBAAkCtS,GAG5E8P,EAAKvN,MAAM,iBAAkBgO,EAAiBvQ,EAAI8P,EAAM1P,GAAM,GAAI8B,EAAMF,GAAa,GAAI6P;IACvF,CAEGM,GAAU9P,SAAQ8P,EAAW,CAAC;AAClC,IAAI,IAAI7G,KAAW6G,EACZrC,EAAKvN,MAAM,aAAcoN,EAAgB3P,EAAIgC,EAAW6N,EAAQvE,EAASwE,EAAM5N,GAE9EmJ,EAAarL,EAAIsL,EAASuG,EAAehC,EAAQC,EAAK7N,QAAQ5C,EAAa,IAAK2C,EAAWE,EAGtG,CACjB,EAGA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAtEAC,WAAW4L,iBAAiB,YAAapL,IAAD;AC+E9B,IAAC4P,EAAO,CAClB3I;;;;;;;;;AAQG,CAAC4I,WAAYC,aACRA,WAAWC,eAAe,UAAaD,WAAWC,eAAe,aACjED,WAA4CnI,MAAsBmI,YAEzCpI,EAAOmI,WAAwCC,YAEhFE;;;;;;;;AAOG,CAACH,WAAYC,YAAqCpI,EAAOmI,WAAYC,WACxEtJ;;;;;;AAKKqJ,YAAsCnI,EAAOmI,YAClDtQ;;;;;;;AAMK0Q,WAEJxQ,KAAKwQ,WACNC;;;;;;;AAMIA,QACA,IAAI,IAAI/D,KAAO+D,MAEfzQ,KAAK0M,GAAO+D,MAAM/D,EACtB,EACAgE;;;;;;;AAMI,CAACC,QAASC,gBAAgBC,OD5IFC,EC4IcH,cD5INI,EC4IeH,cD3I/BzB,EAAKhR,SAAW,IAAKgR,EAAKhR,SAAU4S,CAACA,GAAcD,GAC9D3B,EAAO,IAAKA,KAAS2B;;;;;;AAFvB,IAAqBA,EAAQC,CC4I4B,EAC/DC;;;;;AAIKvE,IPtIC,IAA6B/M,KOsIJ+M,IPrItB7L,EAAeI,KAAKtB,EOqIK,EACnCuR;;;;;AAIK3B,IACmB,iBAAVA,IAAoBA,EAA0CxN,SAASuJ,cAAciE,IAC3FhE,EAAUgE,EAAO;"}