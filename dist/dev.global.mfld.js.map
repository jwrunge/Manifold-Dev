{"version":3,"file":"dev.global.mfld.js","sources":["../src/util.js","../src/updates.js","../src/store.js","../src/fetch.js","../src/domutil.js","../src/bindsync.js","../src/templates.js","../src/registrar.js","../src/index.js","../src/index.global.js"],"sourcesContent":["import { _store } from \"./store.js\";\r\n\r\nexport let ATTR_PREFIX = \"mf_\";\r\nexport let _inputNestSplitRx = /[\\.\\[\\]\\?]{1,}/g;\r\nexport let _commaSepRx = /, {0,}/g;\r\n\r\nexport let _id = ()=> {\r\n    return `${Date.now()}.${Math.floor(Math.random() * 100_000)}`;\r\n}\r\n\r\n/** \r\n * @template T\r\n * @typedef {import(\"./store.js\").Store<T>} Store \r\n */\r\n\r\n/**\r\n * @param {import(\".\").MfldOps} ops\r\n * @param {HTMLElement} el\r\n * @returns {import(\".\").MfldOps}\r\n */\r\nexport let _getOpOverrides = (ops, el)=> {\r\n    let overrides = ops.profiles?.[el.dataset?.override || \"\"];\r\n    let res = { ...ops, ...overrides };\r\n    \r\n    // ad hoc overrides\r\n    for(let set in el.dataset) {\r\n        for(let key of [\"fetch\", \"trans\"]) {\r\n            if(set.startsWith(`${ATTR_PREFIX}${key}_`)) {\r\n                try {\r\n                    let prop = set.split(\"_\")[1];\r\n                    /** @type {any} */\r\n                    let val = el.dataset[set];\r\n                    if(val?.match(/\\{\\[/)) val = JSON.parse(val);\r\n                    if(parseInt(val)) val = parseInt(val);\r\n                    res[key][prop] = val;\r\n                }\r\n                catch(e) {\r\n                    console.error(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * @param {string} condition \r\n * @param {string} [valArg] \r\n * @param {string} [keyArg] \r\n * @returns {{ func?: Function, as?: string[] }}\r\n */\r\nexport let _parseFunction = (condition, valArg, keyArg)=> {\r\n    try {\r\n        let [fnStr, asStr] = condition?.split(/\\s{1,}as\\s{1,}/) || [condition, \"value\"],\r\n            fn = fnStr?.match(/^\\s{0,}(function)?\\(.{0,}\\)(=>)?\\s{0,}/) ? `(${fnStr})()` : fnStr,\r\n            fnText = `let {$el, $st, $fn, ${valArg || \"$val\"}, ${keyArg || \"$key\"}, $body} = ops;return ${fn}`,    // Take $el as a reference to the element; assign global refs to $fn and $st\r\n            as = asStr?.split?.(_commaSepRx)?.map?.(s=> s.trim()) || [\"value\"] || [];\r\n        let func = new Function(\"ops\", fnText);\r\n        return { func, as };\r\n    }\r\n    catch(e) {\r\n        console.error(e);\r\n        return {};\r\n    }\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {Event} [ev]\r\n * @param {string} [href]\r\n */\r\nexport function _handlePushState(el, ev, href) {\r\n    ev?.preventDefault();\r\n\r\n    let pushState = el.dataset?.[`${ATTR_PREFIX}pushstate`];\r\n    /** @type {string | undefined} */\r\n    let push = href;\r\n    switch(pushState) {\r\n        case \"\": break;\r\n        case undefined: return;\r\n        default: push = `#${pushState}`\r\n    }\r\n\r\n    history.pushState(null, \"\", push);\r\n}","/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\nimport { _glob } from \"./store.js\";\r\nimport { ATTR_PREFIX } from \"./util.js\";\r\n\r\n/**\r\n * @typedef {Object} DomWorkOrder\r\n * @property {HTMLElement} in - The input HTMLElement\r\n * @property {HTMLElement} out - The output HTMLElement\r\n * @property {\"append\" | \"prepend\" | \"inner\" | \"outer\"} relation - The relation between the input and output elements\r\n * @property {Partial<MfldOps>} ops - The fetch options for the operation\r\n * @property {(el: HTMLElement | null) => void} done - The callback function to be executed when the operation is done\r\n */\r\n\r\n/** @type {(DomWorkOrder | Function)[]} */ let workArray = [];\r\nlet cancelAnimationFrame = 0;\r\n/** @type {Map<string, (any | ((any)=> any))>} */\r\n\r\n// Next tick queue\r\n/**\r\n * @type {Function[]}\r\n */\r\nlet _nextTickQueue = [];\r\n\r\n/** @type {HTMLElement | null} */\r\nlet spacer;\r\nlet spacerHeight = \"\";\r\n\r\nexport let _addToNextTickQueue = (fn)=> {\r\n    fn && _nextTickQueue.push(fn);\r\n}\r\n\r\nexport let _scheduleUpdate = (update)=> {\r\n    workArray.push(update);\r\n    if(!cancelAnimationFrame) {\r\n        cancelAnimationFrame = requestAnimationFrame(_runUpdates);\r\n    }\r\n}\r\n\r\nlet _addSpacer = (inEl, wrapper, wrapperHeight, ops)=> {\r\n    if(!(ops.trans?.smart ?? true)) return;\r\n    let { paddingTop, paddingBottom } = wrapper instanceof Element ? getComputedStyle(wrapper) : { paddingTop: 0, paddingBottom: 0 };\r\n    let spacer = document.createElement(\"div\");\r\n    spacer.style.height = `calc(${Math.abs(wrapperHeight - (inEl?.clientHeight || 0))}px - ${paddingTop} - ${paddingBottom})`;\r\n    wrapper?.after(spacer);\r\n}\r\n\r\nlet _adjustSizing = (inEl, ops)=> {\r\n    if(!ops.trans?.smart ?? true) return;\r\n    let dur = (ops?.trans?.dur?.[0] || ops?.trans?.dur || 600)/2\r\n    _scheduleUpdate(()=> {\r\n        spacer?.remove();\r\n        inEl?.animate?.([\r\n            { height: spacerHeight },\r\n            { height: `${inEl.clientHeight || 0}px` }\r\n        ], dur);\r\n    });\r\n}\r\n\r\nlet _runUpdates = ()=> {\r\n    cancelAnimationFrame = 0;\r\n    \r\n    for(let order of workArray) {\r\n        if(typeof order == \"function\") {\r\n            order();\r\n            continue;\r\n        }\r\n\r\n        let wrapperHeight = order.out ? order.out.clientHeight : 0;\r\n        let _getDimensionsAfterUpdate = order.relation == \"inner\";\r\n\r\n        if(order.relation == \"prepend\") {\r\n            _addSpacer?.(order.in, order.out, wrapperHeight, order.ops);\r\n            _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                order.out?.prepend(order.in);\r\n                _adjustSizing?.(order.in, order.ops);\r\n            });\r\n        }\r\n        else {\r\n            if([\"inner\", \"outer\"].includes(order.relation)) {\r\n                let container = /** @type {HTMLElement}*/(order.out?.cloneNode(true));\r\n                if(container) {\r\n                    order.out?.after(container);\r\n                    if(_getDimensionsAfterUpdate) {\r\n                        container.style.border = \"none\";\r\n                        order.out.replaceChildren();\r\n                    }\r\n                    _applyTransition(container, \"out\", order.ops, undefined, order.out, _getDimensionsAfterUpdate);\r\n                }\r\n            }\r\n\r\n            _addSpacer?.(order.in, order.out, wrapperHeight, order.ops);\r\n            _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                if(order.relation == \"outer\") order.out?.replaceWith(order.in)\r\n                else order.out?.appendChild(order.in);\r\n                _adjustSizing?.(order.in, order.ops);\r\n            });\r\n        }\r\n\r\n        order.done?.(order.in);\r\n    }\r\n\r\n    _nextTickQueue.forEach(fn => fn());\r\n    _nextTickQueue = [];\r\n    workArray = [];\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {\"in\" | \"out\"} dir \r\n * @param {Partial<MfldOps>} ops \r\n * @param {Function} [fn] \r\n * @param {HTMLElement} [refElement]\r\n * @param {boolean} [_getDimensionsAfterUpdate]\r\n * @param {Function} [after]\r\n * @returns \r\n */\r\nexport let _applyTransition = (el, dir, ops, fn, refElement, _getDimensionsAfterUpdate = false, after)=> {\r\n    if(el?.nodeType == Node.TEXT_NODE) {\r\n        el.replaceWith(document?.createElement(\"div\"));\r\n        el.textContent = el.textContent;\r\n    }\r\n\r\n    if(el) {\r\n        const dur = Array.isArray(ops.trans?.dur) ? ops.trans?.dur[dir == \"in\" ? 0 : 1] || ops.trans?.dur[0] : ops.trans?.dur || 0;\r\n        const transClass = ops?.trans?.class || `${ATTR_PREFIX}trans`;\r\n        el?.classList?.add(transClass);\r\n        ops.trans?.hooks?.[`${dir}-start`]?.(el);\r\n\r\n        if(dir == \"out\") {\r\n            refElement = refElement || el;\r\n            if(!refElement) return;\r\n            let dimensions = {};\r\n            if((ops.trans?.smart ?? true) && !_getDimensionsAfterUpdate) {\r\n                dimensions = _getDimensions(refElement);\r\n            }\r\n\r\n            _scheduleUpdate(()=> {\r\n                if((ops.trans?.smart ?? true) && _getDimensionsAfterUpdate && refElement) {\r\n                    dimensions = _getDimensions(refElement);\r\n                }\r\n\r\n                if(ops.trans?.smart ?? true) {\r\n                    el.style.position = \"fixed\";\r\n                    el.style.width = dimensions.w;\r\n                    el.style.left = dimensions.left;\r\n                    el.style.top = dimensions.top;\r\n                    el.style.margin = \"0\";\r\n                }\r\n                if(dur) el.style.transitionDuration = `${dur}ms`;\r\n\r\n                el.classList?.add(\"out\");\r\n            })\r\n        }\r\n        else {\r\n            el?.classList?.add(\"in\");\r\n            if(dur) el.style.transitionDuration = `${dur}ms`;\r\n            fn?.();\r\n            setTimeout(()=> {\r\n                _scheduleUpdate(()=> {\r\n                    setTimeout(()=> _scheduleUpdate(()=> el?.classList?.remove(dir)), 0);\r\n                });\r\n            }, ops.trans?.swap || 0);\r\n        }\r\n        \r\n        setTimeout(()=> {\r\n            _scheduleUpdate(()=> {\r\n                if(dir == \"out\") el?.remove();\r\n                el?.classList?.remove(transClass);\r\n                ops.trans?.hooks?.[`${dir}-end`]?.(el);\r\n                el.style.transitionDuration = \"\";\r\n                if(dir == \"in\") after?.(el);\r\n            });\r\n        }, \r\n        dur + (dir == \"in\" ? ops.trans?.swap || 0 : 0));\r\n    }\r\n}\r\n\r\nlet _getDimensions = (refElement)=> {\r\n    let style = getComputedStyle(refElement);\r\n    let rect = refElement.getBoundingClientRect();\r\n    return {\r\n        w: `calc(${(refElement).clientWidth}px - ${style.paddingLeft} - ${style.paddingRight})`,\r\n        left: `calc(${rect.left}px + ${_glob.scrollX}px)`,\r\n        top: `calc(${rect.top}px + ${_glob.scrollY}px)`\r\n    };\r\n}","/** \r\n * @template T\r\n * @typedef {import(\"./index.js\").UpdaterFunction<T>} UpdaterFunction \r\n */\r\n/** \r\n * @template T\r\n * @typedef {import(\"./index.js\").StoreOptions<T>} StoreOptions \r\n */\r\n\r\nimport { _scheduleUpdate } from \"./updates.js\";\r\nimport { _id } from \"./util.js\";\r\n\r\n/**\r\n * @template T\r\n * @param {string} name - The name of the store\r\n * @param {StoreOptions<T>} [ops] - Options to update the store\r\n * @returns {Store<T>}\r\n */\r\nexport let _store = (name, ops)=> {\r\n    let found_store = /** @type {Store<any>}*/(_glob.MFLD.st.get(name));\r\n    return ops ? (found_store ? found_store._modify(name, ops) : new Store(name, ops)) : (found_store || new Store(name, ops));\r\n}\r\n\r\n/**!\r\n * @typedef {object} MFLDGlobal\r\n * @property {Map<string, Store<any>>} st\r\n * @property {Map<HTMLElement, { toRemove: Set<Store<any>>, observer: MutationObserver }>} mut\r\n * @property {<T>(name: string, ops?: import(\".\").StoreOptions<T> | undefined) => Store<T>} $st\r\n * @property {{[key: string]: Function}} $fn\r\n */\r\n\r\n/**!\r\n * @typedef {Window & { MFLD: MFLDGlobal }} MFLDWindowObj\r\n * @property {MFLDGlobal} MFLD\r\n */\r\n// @ts-ignore\r\nexport let _glob = /** @type {MFLDWindowObj}*/(window);\r\n\r\nif(!_glob.MFLD) _glob.MFLD = {\r\n    st: new Map(),\r\n    mut: new Map(),\r\n    $st: new Proxy(_store, {\r\n        get: (store, property)=> {\r\n            return store(/** @type {string}*/(property))?.value;\r\n        },\r\n        set: (store, property, value)=> {\r\n            let propParts = /** @type {string}*/(property).split(/[\\.\\[\\]\\?]{1,}/g).map(s=> parseFloat(s.trim()) || s.trim()),\r\n                S = store(/** @type {string}*/(propParts[0])),\r\n                ret = S.value;\r\n\r\n            for(let part of propParts.slice(1) || []) ret = ret[part];\r\n            ret = value;\r\n            S.update(ret);\r\n\r\n            return true;\r\n        }\r\n    }),\r\n    $fn: {},\r\n}\r\n\r\n/**\r\n * @callback SubFunction\r\n * @param {any} value\r\n * @param {string} [ref]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @param {any} input \r\n * @returns {any}\r\n */\r\nlet _hashAny = (input)=> {\r\n    if(!input) return 0;\r\n    if(typeof input == 'number' || input === true) return input;\r\n    if(input instanceof Map || input instanceof Set) return _hashAny(Array.from(input.entries() || input));\r\n\r\n    let hash = 0;\r\n    for(let char of new TextEncoder().encode(input?.toString() || \"\")) \r\n        hash = ((hash << 5) - hash) + char;\r\n    return hash;\r\n}\r\n\r\n/**\r\n * @template T\r\n */\r\nexport class Store {\r\n    /** @type {UpdaterFunction<T> | undefined} */ _updater = undefined;\r\n    /** @type {Map<string, SubFunction>} */ _subscriptions = new Map();\r\n    /** @type {string | undefined} */ _storedHash = undefined;\r\n    /** @type {Set<Store<any>>} */ _upstreamStores = new Set();\r\n    /** @type {Set<Store<any>>} */ _downstreamStores = new Set();\r\n    /** @type {HTMLElement | SVGScriptElement | string | \"global\"} */ _scope;\r\n    /** @type {any | undefined} */ _updateTimeout;\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {StoreOptions<T>} [ops]\r\n     */\r\n    constructor(name, ops) {\r\n        return this._modify(name, ops);        \r\n    }\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {StoreOptions<T>} [ops]\r\n     */\r\n    _modify(name, ops) {\r\n        this.name = name;\r\n        this._scope = ops?.scope || document.currentScript || \"global\";\r\n        _glob.MFLD.st.set(name, this);\r\n\r\n        //Watch for scope destroy\r\n        if(this._scope instanceof Element) {\r\n            let mutOb = _glob.MFLD.mut.get(/** @type {HTMLElement}*/(this._scope)) || { toRemove: new Set(), observer: /** @type {MutationObserver | null}*/(null) };\r\n            if(!mutOb.observer) {\r\n                mutOb.observer = new MutationObserver((muts)=> {\r\n                    for(let mut of muts) {\r\n                        if(mut.type == \"childList\") {\r\n                            for(let node of mut.removedNodes) {\r\n                                if(node instanceof Element) {\r\n                                    for(let store of mutOb.toRemove) {\r\n                                        if(store._scope == /** @type {HTMLElement}*/(node)) {\r\n                                            let scope = this._scope;\r\n                                            _destroy(store);\r\n                                            mutOb.observer?.disconnect();\r\n                                            mutOb.toRemove.delete(store);\r\n                                            // @ts-ignore\r\n                                            MFLD.mut.delete(scope)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                /** @type {MutationObserver}*/(mutOb.observer).observe(/** @type {HTMLElement}*/(this._scope?.parentElement), { childList: true });\r\n            }\r\n            mutOb.toRemove.add(this);\r\n            // @ts-ignore\r\n            MFLD.mut.set(this._scope, mutOb);\r\n        }\r\n        \r\n        (ops?.upstream?.map(s=> {\r\n            let S = _store(s);\r\n            this._upstreamStores.add(S);\r\n            S._downstreamStores.add(this);\r\n            return S;\r\n        }) || []);\r\n\r\n        this.value = ops?.value;\r\n        this._updater = ops?.updater;\r\n        this._auto_update();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {(T)=> void} sub\r\n     * @param {string | undefined} [ref]\r\n     * @param {boolean} [immediate]\r\n     */\r\n    sub(sub, ref, immediate = true) {\r\n        this._subscriptions.set(ref || _id(), sub);\r\n        if(immediate) sub?.(this.value);\r\n    }\r\n\r\n    //Update (manual or automated -- cascades downstream on batch updates)\r\n    /**\r\n    * @template T\r\n    * @param {T | ((T)=> T | Promise<T>)} value\r\n    */\r\n    update(value) {\r\n        // Group updates\r\n        if(this._updateTimeout) clearTimeout(this._updateTimeout);\r\n        this._updateTimeout = setTimeout(()=> {\r\n            _scheduleUpdate(()=> {\r\n                //Apply new value   \r\n                let newValue = (typeof value == \"function\" ? /** @type {Function} */(value)?.(this.value) : value);\r\n                let newHash = _hashAny(newValue);\r\n                \r\n                if(newHash !== this._storedHash) {\r\n                    this.value = newValue;\r\n                    this._storedHash = newHash;\r\n\r\n                    // Add this store to the work order\r\n                    for(let ds of this._downstreamStores) ds._auto_update();\r\n\r\n                    // Wait for next animation frame to return the value\r\n                    for(let [ref, sub] of this?._subscriptions || []) sub?.(this.value, ref);\r\n                }\r\n                \r\n                return this.value;\r\n            });\r\n        }, 0);\r\n    }\r\n\r\n    _auto_update() {\r\n        let newVal = this._updater?.(\r\n            Array.from(this._upstreamStores)?.map(S => S?.value) || [], \r\n            /** @type {T} */(this?.value)\r\n        );\r\n\r\n        this.update(newVal === undefined ? this.value : newVal);\r\n    }\r\n}\r\n\r\n/**\r\n * STORE STATIC METHODS\r\n */\r\n\r\n/**\r\n * @param {HTMLElement | string} scope \r\n */\r\nexport let _clearScope = (scope)=> {\r\n    _glob.MFLD.st.forEach(store=> {\r\n        if(store._scope == scope) _destroy(store); \r\n    });\r\n}\r\n\r\n/**\r\n * @param {Store<any>} store \r\n */\r\nexport let _destroy = (store)=> {\r\n    _glob.MFLD.st.delete(store?.name || \"\");\r\n    // @ts-ignore\r\n    store = undefined;\r\n}","import { _handlePushState, _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _register } from \"./registrar.js\";\r\nimport { _store } from \"./store.js\";\r\nimport { $fn, $st } from \"./index.js\";\r\n\r\n/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {string} trigger \r\n * @param {MfldOps} fetchOps\r\n * @param {string} href\r\n * @param {string} [method] \r\n * @param {Function} [func]\r\n */\r\nexport let _handleFetch = (el, trigger, fetchOps, href, method, func)=> {\r\n    /**\r\n     * @param {Event} [e]\r\n     */\r\n\r\nconsole.log(el, \"TRIGGER\", trigger,  \"OPS\", fetchOps, \"HREF\", href, \"METHOD\", method, \"FUNC\",  func)\r\n\r\n    let ev = async e=> {  \r\n        e?.preventDefault();\r\n        e?.stopPropagation();\r\n\r\n        // Set from target element if relevant; fall back to \"get\"\r\n        if(!method) method = /** @type {any}*/(e?.target)?.method || \"get\";\r\n    \r\n        //Make sure we're allowed to fetch\r\n        let externalPermissions = fetchOps?.fetch?.externals?.find(allowed=> href?.startsWith(allowed.domain)) || \r\n            !href.match(/^https?:\\/\\//) || href.includes(location.origin) ? {\r\n                scripts: true,\r\n                styles: true,\r\n        } : undefined;\r\n\r\n        // Parse input\r\n        let input = func?.(el, $st, $fn);\r\n        let body = Array.isArray(input) ? input[0] : input == \"$form\" ? new FormData(/** @type {HTMLFormElement}*/(el)) : input;\r\n        if(func) {\r\n            let toFunc = Array.isArray(input) ? (input?.map(s=> _store(s).value) || []) : [body];\r\n            body = func?.(...toFunc)\r\n        }\r\n\r\n        //Fetch data\r\n        let data = await fetch(href, {\r\n            ...(fetchOps?.fetch?.request || {}),\r\n            headers: {\r\n                ...fetchOps?.fetch?.request?.headers,\r\n                \"MFLD\": \"true\",\r\n            },\r\n            method,\r\n            body: input == \"$form\" || typeof body == \"string\" ? body : JSON.stringify(body),\r\n        })\r\n        .catch(error=> {\r\n            fetchOps?.fetch?.err?.(error);\r\n        });\r\n\r\n        //Handle onCode callback\r\n        let code = data?.status;\r\n        if(code && fetchOps?.fetch?.onCode?.(code, data) == false) return;\r\n\r\n        //Return JSON or text in callback\r\n        let resp = await data?.[fetchOps?.fetch?.resType || \"text\"]();\r\n\r\n        // Handle resolutions\r\n        /** @type {import(\"./updates\").DomWorkOrder | undefined} */\r\n        for(let instruction of [\"append\", \"prepend\", \"inner\", \"outer\"]) {\r\n            let ds = el.dataset[`${ATTR_PREFIX}${instruction}`];\r\n            if(ds === undefined) continue;\r\n            let [selector, toReplace] = ds?.split(\"->\").map(s=> s.trim()) || [];\r\n\r\n            //Extract content and schedule a DOM update\r\n            let fullMarkup = (new DOMParser())?.parseFromString?.(resp, 'text/html');\r\n\r\n            if(fullMarkup) {\r\n                if(!externalPermissions?.styles) fullMarkup.querySelectorAll(\"style\").forEach(s=> s.parentNode?.removeChild(s));\r\n                if(externalPermissions?.scripts) {\r\n                    fullMarkup.querySelectorAll(\"script\").forEach(s=> {\r\n                        let script = document.createElement(\"script\");\r\n                        script.src = s.src;\r\n                        document.head.appendChild(script);\r\n                    });\r\n                }\r\n\r\n                _scheduleUpdate({\r\n                    in: /** @type {HTMLElement} */ (fullMarkup.querySelector(selector || \"body\")),\r\n                    out: /** @type {HTMLElement} */ (toReplace ? document.querySelector(toReplace) : el),\r\n                    relation: /** @type {\"append\" | \"prepend\" | \"inner\" | \"outer\"}*/(instruction),\r\n                    ops: fetchOps,\r\n                    done: (el)=> {\r\n                        _register(el)\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        let resolveTxt = el.dataset?.[`${ATTR_PREFIX}resolve`];\r\n        let resolveFunc = _parseFunction(resolveTxt || \"\")?.func;\r\n        resolveFunc?.(resp);\r\n\r\n        _handlePushState(el, e, href);\r\n    }\r\n\r\n    if(trigger == \"$mount\") ev();\r\n    else el.addEventListener(trigger, ev);\r\n}","import { $fn, $st } from \"./registrar\";\r\nimport { _store } from \"./store\";\r\nimport { _id } from \"./util\";\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns {HTMLTemplateElement}\r\n */\r\nexport let _ensureTemplate = (el)=> {\r\n    let nodeName = \"TEMPLATE\";\r\n    if(el.tagName == nodeName) return /** @type {HTMLTemplateElement}*/(el);\r\n\r\n    let newEl = /** @type {HTMLTemplateElement}*/(document.createElement(nodeName));\r\n    newEl.content.appendChild(el.cloneNode(true));\r\n    el.replaceWith(newEl);\r\n\r\n    return newEl;\r\n}\r\n\r\n/**\r\n * @param {any} obj \r\n * @param {(value: any, index: any)=> void} cb \r\n */\r\nexport let _iterable = (obj, cb)=> {\r\n    if(obj instanceof Map) for(const [key, value] of obj.entries()) cb(key, value);\r\n    else {\r\n        try { \r\n            let arr = Array.from(obj || []);\r\n            if(arr?.length) arr.forEach(cb);\r\n            else for(let key in obj) cb(key, obj[key]);\r\n        }\r\n        catch(e) { console.error(`${obj} is not iterable`); }\r\n    }\r\n}\r\n\r\n// Returns the sibling that fails the condition\r\n/**\r\n * @param {Element | null} [sib] \r\n * @param {Function} [breakFn] \r\n * @param {Function | null} [cb] \r\n * @returns {Element | null | undefined}\r\n */\r\nexport function _iterateSiblings(sib, breakFn, cb, reverse = false) {\r\n    let dir = reverse ? \"previousElementSibling\" : \"nextElementSibling\";\r\n    return breakFn?.(sib) ? sib : _iterateSiblings((cb?.(sib) || sib)?.[dir], breakFn, cb, reverse);\r\n}\r\n\r\n/**\r\n * @param {string[]} upstream\r\n * @property {Function} [func]\r\n * @property {HTMLElement} [observeEl]\r\n * @returns \r\n */\r\nexport let _registerInternalStore = (upstream, func, $el)=> {\r\n    // Register new store (to prevent excess evaluations)\r\n    return _store(_id(), {\r\n        upstream,\r\n        updater: ()=> func?.({$el, $st, $fn}),\r\n        scope: $el,\r\n    });\r\n}","import { $fn, $st } from \"./registrar\";\r\nimport { _registerInternalStore } from \"./domutil\";\r\nimport { _handlePushState } from \"./util\";\r\n\r\nexport let _handleBind = (el, func, dependencyList)=> {\r\n    _registerInternalStore(\r\n        dependencyList, \r\n        ()=> {\r\n            return func?.({$el: el, $st, $fn});\r\n        },\r\n        el\r\n    );\r\n}\r\n\r\nexport let _handleSync = (el, trigger, func)=> {\r\n    let ev = (e)=> {\r\n        func?.({$el: el, $st, $fn});\r\n        _handlePushState(el, e);\r\n    }\r\n    if(trigger == \"$mount\") ev();\r\n    else el.addEventListener(trigger, ev);\r\n}","import { $fn, $st } from \"./registrar\";\r\nimport { _ensureTemplate, _iterable, _iterateSiblings, _registerInternalStore } from \"./domutil\";\r\nimport { _register } from \"./registrar\";\r\nimport { _applyTransition, _scheduleUpdate } from \"./updates\";\r\nimport { _parseFunction, ATTR_PREFIX } from \"./util\";\r\n\r\n/**\r\n * Handle conditional and loop elements\r\n * @param {HTMLElement} el \r\n * @param {string} mode \r\n * @param {string[]} as \r\n * @param {Function | undefined} func\r\n * @param {string[]} dependencyList\r\n * @param {import(\".\").MfldOps} ops \r\n */\r\nexport let _handleTemplates = (el, mode, as, func, dependencyList, ops)=> {\r\n    let startElement = document.createElement(\"template\"),\r\n        templ = /** @type {HTMLTemplateElement}*/(_ensureTemplate(/** @type {HTMLElement}*/(el.cloneNode(true)))),\r\n        templStore,\r\n        conditional = mode.match(/if|else/), \r\n        conditionalSub = mode.match(/(else|elseif)(\\s|$)/), // Whole word match to allow for exact checks later on (otherwise else is greedy)\r\n        newFunc = undefined,\r\n        prevConditions = [];\r\n\r\n    startElement.classList.add(`${mode}-start`);\r\n    templ.classList.add(`${mode}-end`);\r\n\r\n    el.before(startElement);\r\n    el.after(templ);\r\n    el.remove();\r\n\r\n    // Handle conditional elements\r\n    if(conditional) {\r\n        // Get upstream conditions\r\n        if(conditionalSub) {\r\n            let first = _iterateSiblings(startElement, (sib)=> sib?.classList?.contains(`${ATTR_PREFIX}if-end`), null, true);\r\n            _iterateSiblings(\r\n                first, \r\n                sib=> sib == templ, \r\n                sib=> { if(sib?.dataset?.[`${ATTR_PREFIX}cstore`]) prevConditions.push(sib?.dataset?.[`${ATTR_PREFIX}cstore`]) }\r\n            );\r\n        }\r\n\r\n        // Create function\r\n        newFunc = ({$el: el, $st, $fn})=> {\r\n            if(conditionalSub) {\r\n                for(let d of prevConditions) {\r\n                    if($st[d]) return false;\r\n                }\r\n            }\r\n            return conditionalSub?.[0] == \"else\" ? true : func?.({$el: el, $st, $fn}) == true;\r\n        }\r\n    }\r\n\r\n    templStore = _registerInternalStore([...dependencyList, ...prevConditions], conditional ? newFunc : func, templ);\r\n    templ.dataset[`${ATTR_PREFIX}cstore`] = templStore.name;\r\n\r\n    // Clear old elements\r\n    templStore.sub(val=> {\r\n        if(val === undefined) return;\r\n        _scheduleUpdate(()=> {\r\n            _iterateSiblings(\r\n                startElement?.nextElementSibling, \r\n                (sib)=> sib?.classList?.contains(`${mode}-end`),\r\n                (sib)=> _applyTransition(/** @type {HTMLElement}*/(sib), \"out\", ops, ()=> sib?.remove()), \r\n            );\r\n\r\n            if(conditional && !val) return;\r\n\r\n            _iterable(mode.match(/each/) ? val : [val], (val, key)=> {\r\n                // Get all logical bindings and replace values\r\n                let item = /** @type {HTMLTemplateElement}*/ (templ.cloneNode(true));\r\n                if(!conditional) {\r\n                    let html = templ?.innerHTML?.replace(\r\n                        /\\$:{([^}]*)}/g, \r\n                        (_, cap)=> _parseFunction(cap, as[0], as[1])?.func?.({$el: el, $st, $fn, [as[0]]: val, [as[1]]: key}) || \"\"\r\n                    ) || \"\";\r\n                    if(item?.innerHTML) item.innerHTML = html;\r\n                }\r\n\r\n                // Replace values\r\n                for(let element of item.content.children) {\r\n                    if(!element?.innerHTML) element.innerHTML = val;\r\n                    templ.before(element);\r\n                    _applyTransition(/** @type {HTMLElement}*/(element), \"in\", ops);\r\n                }\r\n            });\r\n        });\r\n    });\r\n}","import { _glob, _store } from \"./store.js\";\r\nimport { _scheduleUpdate } from \"./updates.js\";\r\nimport { _commaSepRx, _getOpOverrides, _id, _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _handleFetch } from \"./fetch.js\";\r\nimport { _handleBind, _handleSync } from \"./bindsync.js\";\r\nimport { _handleTemplates } from \"./templates.js\";\r\n/** @typedef {import(\"./index.js\").MfldOps} MfldOps */\r\n\r\n/** @type {Partial<MfldOps>} */\r\nlet _ops = {};\r\nlet _modes = [\"bind\", \"sync\", \"templ\", \"if\", \"elseif\", \"else\", \"each\", \"get\", \"head\", \"post\", \"put\", \"delete\", \"patch\"].map(m=> `${ATTR_PREFIX}${m}`);\r\n\r\n/**!\r\n * @param {Partial<MfldOps>} newops \r\n * @param {string} [profileName] \r\n */\r\nexport let _setOptions = (newops, profileName)=> {\r\n    if(profileName) _ops.profiles = { ..._ops.profiles, [profileName]: newops };\r\n    else _ops = { ..._ops, ...newops };\r\n}\r\n\r\n// Handle location state changes\r\n_glob.addEventListener(\"popstate\", ()=> {\r\n    location.reload();\r\n});\r\n\r\nexport let {$fn, $st} = _glob.MFLD;\r\n\r\n//Register subscriptions on the DOM (scopable in case an update needs run on a subset of the DOM)\r\n/**\r\n * @param {HTMLElement | null} [parent] \r\n */\r\nexport let _register = (parent)=> {\r\n    if(parent?.nodeType == Node.TEXT_NODE) return;\r\n\r\n    /** @type {NodeListOf<HTMLElement>} */\r\n    let els = (parent || document.body).querySelectorAll(\r\n        `[data-${_modes.join(`],[data-`)}],a,form`\r\n    );\r\n\r\n    for(let el of els) {\r\n        let _op_overrides = _getOpOverrides(_ops, el);\r\n        if(!el.id) el.id = _id();\r\n\r\n        //Check for <a> and <form> elements\r\n        if(el.dataset?.[`${ATTR_PREFIX}promote`] !== undefined) {\r\n            let [mode, href, input, trigger] = el.tagName == \"A\" ?\r\n                [\"get\", /** @type {HTMLAnchorElement}*/(el).href, [], \"click\"] : \r\n                [/** @type {HTMLFormElement}*/(el).method.toLowerCase(), /** @type {HTMLFormElement}*/(el).action, \"$form\", \"submit\"];\r\n\r\n            if(href) {\r\n                // _handleFetch(el, trigger, _op_overrides, href, mode, /** @type {any[] | \"$form\"}*/(input));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        //Loop over all data attributes (modes)\r\n        for(let mode in el.dataset) {\r\n            if(!_modes.includes(mode)) continue;\r\n\r\n            //Loop over provided settings\r\n            for(let setting of el.dataset?.[mode]?.split(\";;\") || []) {\r\n                //Break out settings\r\n                let isFetch = mode.match(/get|head|post|put|delete|patch/) ? true : false,\r\n                    parts = setting?.split(/\\s*->\\s*/g),\r\n                    href = isFetch ? parts.pop() || \"\" : \"\",\r\n                    triggers = isFetch || mode.match(/sync/) ? parts.shift()?.match(/[^\\(\\)]{1,}/g)?.pop()?.split(_commaSepRx)?.map(s=> s.trim()) : [] || [],\r\n                    funcStr = parts?.[0] || \"\",\r\n                    dependencyList = Array.from(new Set([...funcStr?.matchAll(/\\$st\\.(\\w{1,})/g)].map(m=> m[1])));\r\n\r\n                let {func, as} = _parseFunction(funcStr);\r\n                \r\n                if(mode.match(/bind|templ/)) console.log(\"funcstr\", funcStr, \"dependencies\", dependencyList, \"setting\", setting, \"href\", href, \"triggers\", triggers)\r\n\r\n                //Handle templs and loops\r\n                if(mode.match(/each|templ|if|else/)) _handleTemplates(el, mode, as || [], func, dependencyList, _op_overrides);\r\n                else {\r\n                    //Loop over triggers\r\n                    if(!triggers?.length) triggers = [\"\"]\r\n                    for(let trigger of triggers) {\r\n                        if(mode.match(/bind/)) _handleBind(el, func, dependencyList);\r\n                        else if(mode.match(/sync/)) _handleSync(el, trigger, func);\r\n                        else _handleFetch(el, trigger, _op_overrides, href, mode.replace(ATTR_PREFIX, \"\"), func);\r\n                    }\r\n                }\r\n            }; //End loop settings\r\n        }; //End loop dataset\r\n    };  //End loop elements\r\n}","import { _glob, _store } from \"./store.js\";\r\nimport { _addToNextTickQueue } from \"./updates.js\";\r\nimport { _register, _setOptions } from \"./registrar.js\";\r\n\r\n/**! @typedef {\"in-start\"|\"in-end\"|\"out-start\"|\"out-end\"} HookKey*/\r\n\r\n/**!\r\n * @typedef {object} ExternalOptions\r\n * @property {string} domain - The domain name these settings apply to\r\n * @property {boolean} [scripts] - Allow scripts from this domain to execute\r\n * @property {boolean} [styles] - Allow styles from this domain to apply\r\n */\r\n\r\n/**!\r\n * @typedef {object} FetchOptions\r\n * @property {RequestInit} [request] - Fetch request options\r\n * @property {\"json\"|\"text\"} [resType] - Response type (default: \"text\")\r\n * @property {(err: Error)=> void} [err] - Error callback - run on fetch error\r\n * @property {(code: number, data: void | Response)=> boolean | void} [onCode] - Callback function - run on fetch response code; return `false` to prevent further processing\r\n * @property {ExternalOptions[]} [externals] - External domain fetch settings\r\n */\r\n\r\n/**!\r\n * @typedef {object} TransitionOptions\r\n * @property {string} [class] - CSS class applied to transitions (default: `mfTrans`)\r\n * @property {[number, number] | number} [dur] - Transition duration: [in, out] or single value (in ms); default: 300\r\n * @property {number} [swap] - Swap delay (in ms) - applied between one element's outro start and the replacement's intro start; default: 0\r\n * @property {boolean} [smart] - Enable smart transitions (default: true)\r\n * @property {{ [key in HookKey]?: (el: HTMLElement)=> void }} [hooks] - Transition hooks\r\n */\r\n\r\n/**!\r\n * Manifold options for `fetch`, `trans`, and `profiles`.\r\n * @typedef {Object} MfldOps\r\n * @property {{ [ key: string ]: Partial<MfldOps> }} [profiles] - Fetch profiles assignable to elements\r\n * @property {FetchOptions} [fetch] - Fetch options - see https://google.com\r\n * @property {TransitionOptions} [trans] - Transition settings - see https://google.com\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback UpdaterFunction\r\n * @param {Array<any>} upstreamValues\r\n * @param {T} value\r\n * @returns {T | Promise<T>}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback ValueDeterminer\r\n * @param {T} [currentValue]\r\n * @returns {T | Promise<T> | undefined}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback UpdateFunction\r\n * @param {T | ValueDeterminer<T>} value\r\n * @returns {T | Promise<T> | undefined}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback SubDeterminer\r\n * @param {T} value\r\n * @returns {void}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback SubFunction\r\n * @param {SubDeterminer<T>} value The store's current value\r\n * @returns void\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @typedef {Object} StoreOptions\r\n * @property {T} [value]\r\n * @property {Array<string>} [upstream]\r\n * @property {UpdaterFunction<T>} [updater]\r\n * @property {HTMLElement | SVGScriptElement | \"global\"} [scope]\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @typedef Store\r\n * @prop {T} value - The store's current value (read only)\r\n * @prop {UpdateFunction<T>} update - Update the store's current value\r\n * @prop {SubFunction<T>} sub - Add a subscription function to the store\r\n */\r\n\r\n/**!\r\n * @typedef {Function} MfldFunc\r\n * @param {any} val\r\n * @param {HTMLElement} [el]\r\n */\r\n\r\n/**!\r\n * The global Manifold interface.\r\n */\r\nexport let Mfld = {\r\nstore: \r\n/**!\r\n* - Create or overwrite a _typed_ global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<T\\>`* \r\n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\r\n* @template T\r\n* @param {string} store_name\r\n* @param {StoreOptions<T> | T} store_ops\r\n* @return {Store<T>}\r\n*/ (store_name, store_ops)=> {\r\n    if(!store_ops?.hasOwnProperty(\"value\") && !store_ops?.hasOwnProperty(\"updater\")) {\r\n        store_ops = /** @type {StoreOptions<T>}*/({ value: /** @type {T}*/store_ops });\r\n    }\r\n    return /**@type {Store<T>}*/(_store(store_name, /**@type {StoreOptions<T>}*/store_ops))\r\n},\r\nustore: \r\n/**!\r\n* - Create or overwrite an untyped global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<any\\>`* \r\n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\r\n* @param {string} store_name\r\n* @param {StoreOptions<any> | any} store_ops\r\n* @return {Store<any>}\r\n*/ (store_name, store_ops)=> /**@type {Store<any>}*/(_store(store_name, store_ops)),\r\nfuncs: \r\n/**!\r\n * - Add functions to the Manifold function registry in key-value pairs.\r\n * - Functions must be registered in order to be accessible to HTML elements via `mfBind`, `mfSync`, and `mfResolve`. \r\n * - It may still be beneficial to keep a reference to the original function if you need to preserve type information.\r\n * @param {{ [key: string]: MfldFunc }} funcs\r\n */ funcs=> {\r\n    for(let key in funcs) {\r\n    _glob.MFLD.$fn[key] = funcs[key];\r\n }},\r\nconfig:\r\n/**!\r\n * - Set Manifold configuration options, including `trans` (DOM transition settings), `fetch` (fetch options), and `profiles` (configuration option overrides that can be set on elements ad-hoc via `mfOverrides`).\r\n * - Providing the optional `profileName` parameter allows you to save the configuration as a named profile. Otherwise, the profile is saved as the default configuration.\r\n * @param {MfldOps} new_ops\r\n * @param {string} [profile_name]\r\n */ (new_ops, profile_name)=> _setOptions(new_ops, profile_name),\r\n onTick:\r\n /**!\r\n  * - Wait for the next Manifold data update cycle to complete before executing the callback function.\r\n  * @param {()=> void} cb\r\n  */ (cb)=> _addToNextTickQueue(cb),\r\nregister:\r\n/**!\r\n * - Register Manifold subscriptions on the DOM. *Optional:* Pass an `HTMLElement` or selector string to scope the registration to a specific element.\r\n * @param {HTMLElement | string | null} [parent]\r\n */ (parent)=> {\r\n    if(typeof parent == \"string\") parent = /** @type {HTMLElement | null}*/(document.querySelector(parent));\r\n        _register(parent)\r\n    },\r\n};\r\n\r\nexport let $st = _glob.MFLD.$st;\r\nexport let $fn = _glob.MFLD.$fn;","import { Mfld } from \"./index\";\r\nif(!globalThis.Mfld) globalThis.Mfld = Mfld;"],"names":["ATTR_PREFIX","_commaSepRx","_id","Date","now","Math","floor","random","_getOpOverrides","ops","el","overrides","profiles","dataset","override","res","set","key","startsWith","prop","split","val","match","JSON","parse","parseInt","e","console","error","_parseFunction","condition","valArg","keyArg","fnStr","asStr","fnText","as","map","s","trim","func","Function","_handlePushState","ev","href","preventDefault","pushState","push","undefined","history","workArray","cancelAnimationFrame","_nextTickQueue","_scheduleUpdate","update","requestAnimationFrame","_runUpdates","_addSpacer","inEl","wrapper","wrapperHeight","trans","smart","paddingTop","paddingBottom","Element","getComputedStyle","spacer","document","createElement","style","height","abs","clientHeight","after","_adjustSizing","dur","animate","order","out","_getDimensionsAfterUpdate","relation","in","_applyTransition","prepend","includes","container","cloneNode","border","replaceChildren","replaceWith","appendChild","done","forEach","fn","dir","refElement","nodeType","Node","TEXT_NODE","textContent","Array","isArray","transClass","class","classList","add","hooks","dimensions","_getDimensions","position","width","w","left","top","margin","transitionDuration","setTimeout","remove","swap","rect","getBoundingClientRect","clientWidth","paddingLeft","paddingRight","_glob","scrollX","scrollY","_store","name","found_store","MFLD","st","get","_modify","Store","Map","mut","$st","Proxy","store","property","value","propParts","parseFloat","S","ret","part","slice","$fn","_hashAny","input","Set","from","entries","hash","char","TextEncoder","encode","toString","_updater","_subscriptions","_storedHash","_upstreamStores","_downstreamStores","_scope","_updateTimeout","constructor","this","scope","currentScript","mutOb","toRemove","observer","MutationObserver","muts","type","node","removedNodes","_destroy","disconnect","delete","observe","parentElement","childList","upstream","updater","_auto_update","sub","ref","immediate","clearTimeout","newValue","newHash","ds","newVal","_handleFetch","trigger","fetchOps","method","log","async","stopPropagation","target","externalPermissions","fetch","externals","find","allowed","domain","location","origin","scripts","styles","body","FormData","toFunc","data","request","headers","stringify","catch","err","code","status","onCode","resp","resType","instruction","selector","toReplace","fullMarkup","DOMParser","parseFromString","querySelectorAll","parentNode","removeChild","script","src","head","querySelector","_register","resolveTxt","resolveFunc","addEventListener","_iterateSiblings","sib","breakFn","cb","reverse","_registerInternalStore","$el","_handleBind","dependencyList","_handleSync","_handleTemplates","mode","templStore","newFunc","startElement","templ","nodeName","tagName","newEl","content","conditional","conditionalSub","prevConditions","before","first","contains","d","nextElementSibling","obj","arr","length","_iterable","item","html","innerHTML","replace","_","cap","element","children","_ops","_modes","m","reload","parent","els","join","_op_overrides","id","toLowerCase","action","setting","isFetch","parts","pop","triggers","shift","funcStr","matchAll","Mfld","store_name","store_ops","hasOwnProperty","ustore","funcs","config","new_ops","profile_name","_setOptions","newops","profileName","onTick","register","globalThis"],"mappings":"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"}