{"version":3,"file":"mfld.mod.js","sources":["../../src/util.js","../../src/updates.js","../../src/store.js","../../src/fetch.js","../../src/bindsync.js","../../src/domutil.js","../../src/registrar.js","../../src/index.module.js"],"sourcesContent":["export let ATTR_PREFIX = \"mf_\";\r\nexport let _inputNestSplitRx = /[\\.\\[\\]\\?]{1,}/g;\r\nexport let _commaSepRx = /, {0,}/g;\r\n\r\nexport function _randomEnoughId() {\r\n    return `${Date.now()}.${Math.floor(Math.random() * 100_000)}`;\r\n}\r\n\r\n// /**\r\n//  * Get or set nested store values\r\n//  * @param {any} obj \r\n//  * @param {(string | number)[]} path \r\n//  * @param {any} [newval] \r\n//  * @returns \r\n//  */\r\n// export function _nestedValue(obj, path, newval) {\r\n//     let ptr = obj;\r\n\r\n//     for(let key of path) {\r\n//         //Dynamically letruct object if it doesn't exist\r\n//         if(ptr == undefined) ptr = typeof key == \"number\" ? [] : {};\r\n\r\n//         //Set or get value\r\n//         if(newval == undefined || path[path.length - 1] !== key) ptr = ptr instanceof Map ? ptr?.get(key) : ptr?.[key];\r\n//         else ptr instanceof Map ? ptr.set(key, newval) : ptr[key] = newval;\r\n//     }\r\n\r\n//     return ptr;\r\n// }\r\n\r\n// export function _getStorePathFromKey(s) {\r\n//     let [storeName, ...path] = (s)?.split(_inputNestSplitRx);\r\n//     return [storeName, path?.map(sp=> !isNaN(parseInt(sp)) ? parseInt(sp) : sp).filter(sp=> sp) || []];\r\n// }\r\n\r\nfunction _getOverride(name, el, ops, parse = true, def = \"{}\", as) {\r\n    let override = el.dataset[`${ATTR_PREFIX}${name}`];\r\n    if(!override) return undefined;\r\n    if(name == \"overrides\") return ops.profiles?.[override || \"\"]?.fetch || JSON.parse(override || \"{}\");\r\n    if(parse) return JSON.parse(override || def);\r\n    if(as == \"num\") return parseInt(override) || undefined;\r\n    if(as == \"bool\") return override == \"true\" ? true : override == \"false\" ? false : undefined;\r\n    return override;\r\n}\r\n\r\n/**\r\n * Get or set nested store values\r\n * @param {import(\"./index.module\").MfldOps} ops\r\n * @param {HTMLElement} el\r\n * @returns {import(\"./index.module\").MfldOps}\r\n */\r\nexport function _getOpOverrides(ops, el) {\r\n    let overrides = _getOverride(\"overrides\", el, ops);\r\n\r\n    let newops = {\r\n        profiles: ops.profiles,\r\n        fetch: {\r\n            ...ops.fetch,\r\n            ...{\r\n                responseType: _getOverride(\"responsetype\", el, ops, false) || ops.fetch?.responseType\r\n            },\r\n            ...(overrides?.fetch || {}),\r\n            ...(_getOverride(\"fetch\", el, ops) || {}),\r\n        },\r\n        trans: {\r\n            ...ops.trans,\r\n            ...{\r\n                dur: _getOverride(\"transdur\", el, ops, true, \"[]\", \"num\") || ops.trans?.dur,\r\n                swap: _getOverride(\"transswap\", el, ops, false, \"\", \"num\") || ops.trans?.swap,\r\n                class: _getOverride(\"transclass\", el, ops, false) || ops.trans?.class,\r\n                smartTransition: _getOverride(\"transsmart\", el, ops, false, undefined, \"bool\") || ops.trans?.smartTransition,\r\n            },\r\n            ...(overrides?.trans || {}),\r\n            ...(_getOverride(\"trans\", el, ops) || {}),\r\n        },\r\n    }\r\n\r\n    return newops;\r\n}\r\n\r\nfunction _parseValues(values) {\r\n    if(typeof values == \"string\") values = values.split(/\\s{0,},\\s{0,}/);\r\n    return values.map(v=> v.split(_inputNestSplitRx)?.[0]) || [];\r\n}\r\n\r\n/**\r\n * @param {{el: HTMLElement, datakey: string} | string} condition \r\n * @returns {{ valueList?: string[], func?: Function, as?: string[] }}\r\n */\r\nexport function _parseFunction(condition) {\r\n    if(typeof condition != \"string\") {\r\n        condition = condition?.el?.dataset?.[condition?.datakey] || \"\";\r\n        if(!condition && /** @type {any}*/(condition)?.el?.dataset?.[`${ATTR_PREFIX}else`] != undefined) condition = \"return true\";\r\n    }\r\n\r\n    let [fstr, values] = condition?.split(\"=>\")?.map(s=> s.trim())?.reverse() || [\"\", \"\"];\r\n    let [fn, asStr] = fstr?.split(/\\s{1,}as\\s{1,}/) || [fn, \"value\"];\r\n    let as = asStr?.slice?.(_commaSepRx)?.map?.(s=> s.trim())?.[0] || [\"value\"];\r\n\r\n    // Set up function to evaluate store values\r\n    let valueList = values?.split(\",\")?.map(s=> s.replace(/[()]/g, \"\").trim()) || [];\r\n    // @ts-ignore\r\n    let func = globalThis[fn] || MfFn[fn];\r\n    if(!func) {\r\n        // If function is not found, try to create it; account for implicit returns\r\n        if(!valueList?.length && !fn.includes(\"=>\")) {\r\n            if(!fn.match(/\\(|\\)/)) {\r\n                valueList = [fn];\r\n                fn = `return ${fn}`;\r\n            }\r\n            else {\r\n                valueList = fn.match(/\\([^\\)]{1,}\\)/)?.[0]?.replace(/[\\(\\) ]/g, \"\").split(\",\").filter(s=> !s.match(/[\\\"\\'\\`]/)) || [];\r\n            }\r\n        }\r\n\r\n        valueList = _parseValues(valueList);\r\n        if(!fn.match(/^\\s{0,}\\{/) && !fn.includes(\"return\")) fn = fn.replace(/^\\s{0,}/, \"return \");\r\n        try {\r\n            func = new Function(...valueList, fn);\r\n        }\r\n        catch(e) {\r\n            console.error(e);\r\n            console.log(valueList, fn)\r\n        }\r\n    }\r\n\r\n    return { valueList, func, as };\r\n}\r\n\r\nwindow.parse = _parseFunction;\r\n\r\nexport function _evalInputs(inputs) {\r\n    let values = [];\r\n    for(let input of inputs) {\r\n        let S = MfSt.get(input);\r\n        values.push(S.value || globalThis.value);\r\n    }\r\n    return values;\r\n}","/** @typedef {import(\"./index.module.js\").MfldOps} MfldOps */\r\n\r\nimport { ATTR_PREFIX } from \"./util.js\";\r\n\r\n/**\r\n * @typedef {Object} DomWorkOrder\r\n * @property {HTMLElement} in - The input HTMLElement\r\n * @property {HTMLElement} out - The output HTMLElement\r\n * @property {\"append\" | \"prepend\" | \"swapinner\" | \"swapouter\"} relation - The relation between the input and output elements\r\n * @property {Partial<MfldOps>} ops - The fetch options for the operation\r\n * @property {(el: HTMLElement | null) => void} done - The callback function to be executed when the operation is done\r\n */\r\n\r\n/** @type {(DomWorkOrder | Function)[]} */ let workArray = [];\r\nlet cancelAnimationFrame = false;\r\n/** @type {Map<string, (any | ((any)=> any))>} */\r\n\r\n// Next tick queue\r\n/**\r\n * @type {Function[]}\r\n */\r\nlet _nextTickQueue = [];\r\n\r\n/** @type {HTMLElement | null} */\r\nlet spacer;\r\nlet spacerHeight = \"\";\r\n\r\n// Polyfill requestAnimationFrame\r\nlet tick = globalThis?.requestAnimationFrame || ((fn)=> setTimeout(fn, 0));\r\n\r\nexport function _addToNextTickQueue(fn) {\r\n    if(fn) _nextTickQueue.push(fn);\r\n}\r\n\r\n/** @export @param {(DomWorkOrder | Function)} update */\r\nexport function _scheduleUpdate(update) {\r\n    workArray.push(update);\r\n    if(!cancelAnimationFrame) {\r\n        cancelAnimationFrame = true;\r\n        tick(_runUpdates);\r\n    }\r\n}\r\n\r\nfunction _addSpacer(inEl, wrapper, wrapperHeight, replaceWholeObject = false, ops) {\r\n    if(!ops.trans?.smartTransition ?? true) return;\r\n    //Conserve parent size\r\n    spacer = document.createElement(\"div\");\r\n    \r\n    let { paddingTop, paddingBottom } = wrapper instanceof Element ? window.getComputedStyle(wrapper) : { paddingTop: 0, paddingBottom: 0 };\r\n    spacerHeight = spacer.style.height = `calc(${(Math.abs(wrapperHeight - (inEl?.clientHeight || 0)))}px - ${paddingTop} - ${paddingBottom})`;\r\n\r\n    wrapper?.after(spacer);\r\n}\r\n\r\nfunction _adjustSizing(inEl, ops) {\r\n    if(!ops.trans?.smartTransition ?? true) return;\r\n    let dur = (ops?.trans?.dur?.[0] || ops?.trans?.dur || 600)/2\r\n\r\n    _scheduleUpdate(()=> {\r\n        spacer?.remove();\r\n        inEl?.animate?.([\r\n            { height: spacerHeight },\r\n            { height: `${inEl.clientHeight || 0}px` }\r\n        ], dur);\r\n    });\r\n}\r\n\r\nfunction _runUpdates() {\r\n    cancelAnimationFrame = false;\r\n    \r\n    /**\r\n    * @type {DomWorkOrder[]}\r\n    */\r\n    for(let order of workArray) {\r\n        if(typeof order == \"function\") (/** @type {Function} */ order)();\r\n        else {\r\n            let wrapperHeight = order.out ? order.out.clientHeight : 0;\r\n\r\n            // Prepend\r\n            if(order.relation == \"prepend\") {\r\n                _addSpacer?.(order.in, order.out, wrapperHeight, false, order.ops);\r\n\r\n                //Prepend\r\n                _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                    if(order.in) order.out?.prepend(order.in);\r\n                    _adjustSizing?.(order.in, order.ops);\r\n                });\r\n            }\r\n            // Remove old children\r\n            else {\r\n                if([\"swapinner\", \"swapouter\"].includes(order.relation)) {\r\n                    //Remove old children before appending (if swapping children)\r\n                    let container = /** @type {HTMLElement | null}*/(order.out?.cloneNode(true));\r\n\r\n                    if(container) {\r\n                        order.out?.after(container);\r\n                        let getDimensionsAfterUpdate = order.relation == \"swapinner\" ? true : false;\r\n\r\n                        if(order.relation == \"swapinner\") {\r\n                            container.style.border = \"none\";\r\n                            order.out.replaceChildren();\r\n                        }\r\n\r\n                        // Transition old children out\r\n                        _applyTransition(container, \"out\", order.ops, undefined, order.out, getDimensionsAfterUpdate);\r\n                    }\r\n                }\r\n\r\n                _addSpacer?.(order.in, order.out, wrapperHeight, false, order.ops);\r\n\r\n                // Transition incoming element and append\r\n                _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                    if(order.in) {\r\n                        if(order.relation == \"swapouter\") order.out?.replaceWith(order.in)\r\n                        else order.out?.appendChild(order.in);\r\n                    }\r\n                    _adjustSizing?.(order.in, order.ops);\r\n                });\r\n            }\r\n\r\n            order.done?.(order.in);\r\n        }\r\n    }\r\n\r\n    //Handle queued nextTick functions\r\n    for(let fn of _nextTickQueue) fn();\r\n    _nextTickQueue = [];\r\n    workArray = [];\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {\"in\" | \"out\"} dir \r\n * @param {Partial<MfldOps>} ops \r\n * @param {Function} [fn] \r\n * @param {HTMLElement} [refElement]\r\n * @param {boolean} [getDimensionsAfterUpdate]\r\n * @returns \r\n */\r\nexport function _applyTransition(el, dir, ops, fn, refElement, getDimensionsAfterUpdate = false) {\r\n    //Handle text nodes\r\n    if(el?.nodeType == Node.TEXT_NODE) {\r\n        let text = el.textContent;\r\n        let newNode = document?.createElement(\"div\");\r\n        newNode.textContent = text;\r\n        el.replaceWith(newNode);\r\n        el = newNode;\r\n    }\r\n\r\n    if(el) {\r\n        let dur = Array.isArray(ops.trans?.dur) ? ops.trans?.dur[dir == \"in\" ? 0 : 1] || ops.trans?.dur[0] : ops.trans?.dur || 0;\r\n\r\n        //Initiate transition\r\n        let transClass = ops?.trans?.class || `${ATTR_PREFIX}trans`;\r\n        el?.classList?.add(transClass);\r\n        ops.trans?.hooks?.[`${dir}-start`]?.(el);\r\n\r\n        //Wait to apply class\r\n        if(dir == \"out\") {\r\n            // Set dimensions\r\n            if(!refElement) refElement = el;\r\n            if(!refElement) return;\r\n            let dimensions = {};\r\n            if((ops.trans?.smartTransition ?? true) && getDimensionsAfterUpdate == false) {\r\n                let style = getComputedStyle(refElement);\r\n                dimensions.w = `calc(${(refElement).clientWidth}px - ${style.paddingLeft} - ${style.paddingRight})`;\r\n                dimensions.left = `calc(${refElement.getBoundingClientRect().left}px + ${window.scrollX}px)`;\r\n                dimensions.top = `calc(${refElement.getBoundingClientRect().top}px + ${window.scrollY}px)`;\r\n            }\r\n\r\n            _scheduleUpdate(()=> {\r\n                if(ops.trans?.smartTransition ?? true) {\r\n                    if(getDimensionsAfterUpdate && refElement) {\r\n                        let style = getComputedStyle(refElement);\r\n                        dimensions.w = `calc(${(refElement).clientWidth}px - ${style.paddingLeft} - ${style.paddingRight})`;\r\n                        dimensions.left = `calc(${refElement.getBoundingClientRect().left}px + ${window.scrollX}px)`;\r\n                        dimensions.top = `calc(${refElement.getBoundingClientRect().top}px + ${window.scrollY}px)`;\r\n                    }\r\n                    \r\n                    el.style.position = \"fixed\";\r\n                    el.style.width = dimensions.w;\r\n                    el.style.left = dimensions.left;\r\n                    el.style.top = dimensions.top;\r\n                    el.style.margin = \"0\";\r\n                }\r\n\r\n                if(dur) el.style.transitionDuration = `${dur}ms`;\r\n                el.classList?.add(\"out\");\r\n            })\r\n        }\r\n        //If dir == in\r\n        else {\r\n            el?.classList?.add(\"in\");\r\n            if(dur) el.style.transitionDuration = `${dur}ms`;\r\n            fn?.();\r\n            setTimeout(()=> {\r\n                _scheduleUpdate(()=> {\r\n                    setTimeout(()=> _scheduleUpdate(()=> el?.classList?.remove(dir)), 0);\r\n                });\r\n            }, ops.trans?.swap || 0);\r\n        }\r\n        \r\n        setTimeout(()=> {\r\n            _scheduleUpdate(()=> {\r\n                //Wrapup\r\n                if(dir == \"out\") el?.remove();\r\n                el?.classList?.remove(transClass);\r\n                ops.trans?.hooks?.[`${dir}-end`]?.(el);\r\n            });\r\n        }, \r\n        dur + (dir == \"in\" ? ops.trans?.swap || 0 : 0));\r\n    }\r\n}","/** \r\n * @template T\r\n * @typedef {import(\"./index.module.js\").UpdaterFunction<T>} UpdaterFunction \r\n */\r\n/** \r\n * @template T\r\n * @typedef {import(\"./index.module.js\").StoreOptions<T>} StoreOptions \r\n */\r\n\r\nimport { _scheduleUpdate } from \"./updates.js\";\r\nimport { _randomEnoughId } from \"./util.js\";\r\n\r\n/**\r\n * @callback SubFunction\r\n * @param {any} value\r\n * @param {string} [ref]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @param {any} input \r\n * @returns {any}\r\n */\r\nfunction _hashAny(input) {\r\n    if(!input) return 0;\r\n    if(typeof input == 'number') return input;\r\n    if(input === true) return 1;\r\n\r\n    if(input instanceof Map) return _hashAny(Array.from(input.entries()));\r\n    else if(input instanceof Set) return _hashAny(Array.from(input));\r\n\r\n    let hash = 0;\r\n    for(let char of new TextEncoder().encode(\r\n        typeof input == 'string' ? input : input?.toString() || \"\"\r\n    )) \r\n        hash = ((hash << 5) - hash) + char;\r\n    return hash;\r\n}\r\n\r\n//Static\r\n/** @type {Map<string, Store<any>>} */ if(!globalThis.MfSt) globalThis.MfSt = new Map();\r\n/** @type {{[key: string]: Function}} */ if(!globalThis.MfFn) globalThis.MfFn = {};\r\n/** @type {Map<Element, {toDestroy: Set<Store<any>>, observer: MutationObserver}>} */ if(!globalThis.MfMutOb) globalThis.MfMutOb = new Map();\r\n\r\n/**\r\n * @template T\r\n */\r\nexport class Store {\r\n    /** @type {UpdaterFunction<T> | undefined} */ _updater = undefined;\r\n    /** @type {Map<string, SubFunction>} */ _subscriptions = new Map();\r\n    /** @type {string | undefined} */ _storedHash = undefined;\r\n    /** @type {Set<Store<any>>} */ _upstreamStores = new Set();\r\n    /** @type {Set<Store<any>>} */ _downstreamStores = new Set();\r\n    /** @type {HTMLElement | SVGScriptElement | string | \"global\"} */ _scope;\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {StoreOptions<T>} [ops]\r\n     */\r\n    constructor(name, ops) {\r\n        return this._modify(name, ops);        \r\n    }\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {StoreOptions<T>} [ops]\r\n     */\r\n    _modify(name, ops) {\r\n        this.name = name;\r\n        this._scope = ops?.scope || document.currentScript || \"global\";\r\n        // @ts-ignore\r\n        MfSt.set(name, this);\r\n\r\n        //Watch for scope destroy\r\n        // Watch for scope destroy\r\n        if(this._scope instanceof Element) {\r\n            // @ts-ignore\r\n            let mutOb = MfMutOb.get(this._scope);\r\n            if(!mutOb) {\r\n                mutOb = {};\r\n                mutOb.toRemove = new Set();\r\n                mutOb.observer = new MutationObserver((muts)=> {\r\n                    for(let mut of muts) {\r\n                        if(mut.type == \"childList\") {\r\n                            for(let node of mut.removedNodes) {\r\n                                if(node instanceof Element) {\r\n                                    for(let store of mutOb.toRemove) {\r\n                                        if(store._scope == node) {\r\n                                            let scope = this._scope;\r\n                                            _destroy(store);\r\n                                            mutOb.observer.disconnect();\r\n                                            mutOb.toRemove.delete(store);\r\n                                            // @ts-ignore\r\n                                            MfMutOb.delete(scope)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                /** @type {MutationObserver}*/(mutOb.observer).observe(/** @type {HTMLElement}*/(this._scope?.parentElement), { childList: true });\r\n            }\r\n            mutOb.toRemove.add(this);\r\n            // @ts-ignore\r\n            MfMutOb.set(this._scope, mutOb);\r\n        }\r\n        \r\n        (ops?.upstream?.map(s=> {\r\n            let S = _store(s);\r\n            this._upstreamStores.add(S);\r\n            S._downstreamStores.add(this);\r\n            return S;\r\n        }) || []);\r\n\r\n        this.value = ops?.value;\r\n        this._updater = ops?.updater;\r\n        this._auto_update();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {(T)=> void} sub\r\n     * @param {string | undefined} [ref]\r\n     * @param {boolean} [immediate]\r\n     */\r\n    sub(sub, ref, immediate = true) {\r\n        this._subscriptions.set(ref || _randomEnoughId(), sub);\r\n        if(immediate) sub?.(this.value);\r\n    }\r\n\r\n    //Update (manual or automated -- cascades downstream on batch updates)\r\n    /**\r\n    * @template T\r\n    * @param {T | ((T)=> T | Promise<T>)} value\r\n    */\r\n    async update(value) {\r\n        return new Promise(async (resolve)=> {\r\n            //Apply new value   \r\n            let newValue = (typeof value == \"function\" ? /** @type {Function} */(await value)?.(this.value) : value);\r\n            let newHash = _hashAny(newValue);\r\n            \r\n            if(newHash !== this._storedHash) {\r\n                this.value = newValue;\r\n                this._storedHash = newHash;\r\n\r\n                // Add this store to the work order\r\n                for(let ds of this._downstreamStores) await ds._auto_update();\r\n\r\n                // Wait for next animation frame to return the value\r\n                _scheduleUpdate(()=> {\r\n                    for(let [ref, sub] of this?._subscriptions || []) sub?.(this.value, ref);\r\n                    resolve(this.value);\r\n                });\r\n            }\r\n            else resolve(this.value);\r\n        });\r\n    }\r\n\r\n    async clearHash() {\r\n        this._storedHash = undefined;\r\n    }\r\n\r\n    async _auto_update() {\r\n        let newVal = await this._updater?.(\r\n            Array.from(this._upstreamStores)?.map(S => S?.value) || [], \r\n            /** @type {T} */(this?.value)\r\n        );\r\n\r\n        await this.update(newVal === undefined ? this.value : newVal);\r\n    }\r\n}\r\n\r\n/**\r\n * STORE STATIC METHODS\r\n */\r\n/**\r\n * @template T\r\n * @param {string} name - The name of the store\r\n * @param {StoreOptions<T> | T} [ops] - Options to update the store\r\n * @returns {Store<T>}\r\n */\r\nexport function _store(name, ops) {\r\n    // @ts-ignore\r\n    let found_store = MfSt.get(name);\r\n    if(ops) {\r\n        if(found_store) {\r\n            return found_store._modify(name, ops);\r\n        }\r\n        return new Store(name, ops);\r\n    }\r\n    return found_store || new Store(name, /** @type {StoreOptions<T>}*/(ops));\r\n}\r\n\r\n/**\r\n * @param {HTMLElement | string} scope \r\n */\r\nexport function _clearScope(scope) {\r\n    // @ts-ignore\r\n    for(let store of MfSt.values()) {\r\n        if(store._scope == scope) _destroy(store);\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Store<any>} store \r\n */\r\nexport function _destroy(store) {\r\n    store._subscriptions.clear();\r\n    store._upstreamStores.clear();\r\n    store._downstreamStores.clear();\r\n    // @ts-ignore\r\n    MfSt.delete(store.name);\r\n    // @ts-ignore\r\n    store = undefined;\r\n}","import { _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _registerSubs } from \"./registrar.js\";\r\nimport { _store } from \"./store.js\";\r\n\r\n/** @typedef {import(\"./index.module.js\").MfldOps} MfldOps */\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {string} trigger \r\n * @param {MfldOps} fetchOps\r\n * @param {string} href\r\n * @param {string} [method] \r\n * @param {any} [input]\r\n * @param {Function} [processFunc]\r\n */\r\nexport function _handleFetch(el, trigger, fetchOps, href, method, input, processFunc) {\r\n    /**\r\n     * @param {Event} [e]\r\n     */\r\n    let ev = async e=> {  \r\n        e?.preventDefault();\r\n        e?.stopPropagation();\r\n\r\n        // Set from target element if relevant; fall back to \"get\"\r\n        if(!method) method = /** @type {any}*/(e?.target)?.method || \"get\";\r\n    \r\n        //Make sure we're allowed to fetch\r\n        let externalPermissions = fetchOps?.fetch?.externals?.find(allowed=> href?.startsWith(allowed.domain)) || \r\n            !href.match(/^https?:\\/\\//) || href.includes(location.origin) ? {\r\n                scripts: true,\r\n                styles: true,\r\n        } : undefined;\r\n\r\n        // Parse input\r\n        let body = Array.isArray(input) ? input[0] : input == \"$form\" ? new FormData(/** @type {HTMLFormElement}*/(el)) : input;\r\n        if(processFunc) {\r\n            let toFunc = Array.isArray(input) ? (input?.map(s=> _store(s).value) || []) : [body];\r\n            body = processFunc?.(...toFunc)\r\n        }\r\n\r\n        //Fetch data\r\n        let data = await fetch(href, {\r\n            ...(fetchOps?.fetch?.request || {}),\r\n            headers: {\r\n                ...fetchOps?.fetch?.request?.headers,\r\n                \"Manifold-App-Fetch\": \"true\",\r\n            },\r\n            method,\r\n            body: input == \"$form\" || typeof body == \"string\" ? body : JSON.stringify(body),\r\n        })\r\n        .catch(error=> {\r\n            fetchOps?.fetch?.err?.(error) || console.error(\"FETCH ERROR\", error);\r\n        });\r\n\r\n        //Handle onCode callback\r\n        let code = data?.status;\r\n        if(code && fetchOps?.fetch?.onCode?.(code, data) == false) return;\r\n\r\n        //Return JSON or text in callback\r\n        let resp = await data?.[fetchOps?.fetch?.responseType || \"text\"]();\r\n\r\n        // Handle resolutions\r\n        for(let instruction of [\"append\", \"prepend\", \"swapinner\", \"swapouter\"]) {\r\n            let ds = el.dataset[`${ATTR_PREFIX}${instruction}`];\r\n            if(ds === undefined) continue;\r\n            let [selector, toReplace] = ds?.split(\"->\").map(s=> s.trim()) || [];\r\n\r\n            //Extract content and schedule a DOM update\r\n            let fullMarkup = (new DOMParser())?.parseFromString?.(resp, 'text/html');\r\n            if(fullMarkup) {\r\n                _scheduleUpdate({\r\n                    in: /** @type {HTMLElement} */ (fullMarkup.querySelector(selector || \"body\")),\r\n                    out: /** @type {HTMLElement} */ (toReplace ? document.querySelector(toReplace) : el),\r\n                    relation: /** @type {\"append\" | \"prepend\" | \"swapinner\" | \"swapouter\"}*/(instruction),\r\n                    ops: fetchOps,\r\n                    done: (el)=> {\r\n                        _registerSubs(el)\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        //Push to history if requested\r\n        if(el.dataset?.[`${ATTR_PREFIX}pushstate`] !== undefined) {\r\n            history.pushState({}, \"\", href);\r\n        }\r\n\r\n        let resolveTxt = el.dataset?.[`${ATTR_PREFIX}resolve`];\r\n        let resolveFunc = _parseFunction(resolveTxt || \"\")?.func;\r\n        resolveFunc?.(resp);\r\n\r\n            // //Clear existing scripts/styles\r\n            // for(let s of [pageScripts, pageStyles]) {\r\n            //     let elements = s.get(fullMarkup) || [];\r\n            //     elements.forEach(el => el.remove());\r\n            //     s.set(fullMarkup, []);\r\n            // }\r\n\r\n            // //Get scripts and styles\r\n            // let seek: string[] = ops.allowScripts ? [\"scripts\"] : [];\r\n            // if(ops.allowStyles) seek.push(\"style\");\r\n            // if(seek.length) {\r\n            //     let globls: NodeListOf<HTMLScriptElement | HTMLStyleElement> = fullMarkup.querySelectorAll(seek.join(\",\"));\r\n            //     for(let el of globls) {\r\n            //         let isScript = el instanceof HTMLScriptElement;\r\n            //         let source = isScript ? pageScripts : pageStyles;\r\n\r\n            //         if(isScript ? ops.allowScripts : ops.allowStyles){\r\n            //             if(!source.has(parent)) source.set(parent, []);\r\n            //             source.get(parent)?.push(el as any);\r\n            //         }\r\n            //         else if(isScript) el.parentNode?.removeChild(el);\r\n            //     }\r\n            // }\r\n    }\r\n\r\n    if(trigger == \"$mount\") ev();\r\n    else el.addEventListener(trigger, ev);\r\n}","import { _registerInternalStore } from \"./domutil\";\r\nimport { _store } from \"./store\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _evalInputs, _inputNestSplitRx, _nestedValue, _randomEnoughId } from \"./util\";\r\n\r\nexport function _handleBindSync(el, inputs, output, trigger, mode, processFunc) {\r\n    /**\r\n     * HANDLE MF-BIND - inputs are stores, output is element property\r\n     */\r\n    if(mode.match(\"bind\")) {\r\n        _registerInternalStore(\r\n            _randomEnoughId(),\r\n            inputs,\r\n            {\r\n                observeEl: el,\r\n                func: ()=> {\r\n                    let val = processFunc?.(..._evalInputs(inputs), el);\r\n\r\n                    if(output && val != undefined) {\r\n                        let parts = output.split(\":\");\r\n                        switch(parts[0]) {\r\n                            case \"style\": el.style[parts[1]] = val; break;\r\n                            case \"attr\": el.setAttribute(parts[1], val); break;\r\n                            default: el[output] = val;\r\n                        }\r\n                    }\r\n\r\n                    //Make sure to update dependent stores on value update\r\n                    el.dispatchEvent(new CustomEvent(trigger));\r\n                    return val;\r\n                }\r\n            } \r\n        )\r\n    }\r\n\r\n    else {\r\n        /**\r\n         * HANDLE MF-SYNC - inputs are element properties, output is a store\r\n         */\r\n        let ev = ()=> {\r\n            if(inputs.length > 1) console.warn(\"Multiple inputs not supported for sync\", el);\r\n\r\n            // Get prop value\r\n            let parts = inputs?.[0].trim().split(\":\");\r\n            let val;\r\n            switch(parts[0]) {\r\n                case \"style\": val = el.style[parts[1]]; break;\r\n                case \"attr\": val = el.getAttribute(parts[1]); break;\r\n                default: val = el[parts[0]];\r\n            }\r\n\r\n            let numVal = parseFloat(val);\r\n            if(!isNaN(numVal)) val = numVal;\r\n\r\n            let value = processFunc?.(val, el);\r\n            if(output && value !== undefined) _store(output)?.update?.(value);\r\n        }\r\n        \r\n        if(trigger == \"$mount\") ev();\r\n        else el.addEventListener(trigger, ev);\r\n    }\r\n}","import { _store } from \"./store\";\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns {HTMLElement}\r\n */\r\nexport function _ensureNodeName(el, nodeName, skipAttributes = []) {\r\n    // Make sure this is a template\r\n    if(el.tagName != nodeName) {\r\n        let newEl = document.createElement(nodeName);\r\n        newEl.innerHTML = el.innerHTML;                \r\n        for(let attr of el.attributes) {\r\n            if(!skipAttributes.includes(attr.name)) newEl.setAttribute(attr.name, attr.value);\r\n        }\r\n        el.replaceWith(newEl);\r\n\r\n        // If not, it's default content\r\n        return newEl;\r\n    }\r\n    return el;\r\n}\r\n\r\n/**\r\n * @param {any} obj \r\n * @param {(value: any, index: any, array?: any)=> void} cb \r\n */\r\nexport function _iterable(obj, cb) {\r\n    if(obj instanceof Map) for(const [key, value] of obj.entries()) cb(key, value);\r\n    else {\r\n        try { \r\n            let arr = Array.from(obj);\r\n            if(arr?.length) arr.forEach(cb);\r\n            else for(let key in obj) cb(key, obj[key]);\r\n        }\r\n        catch(e) { console.error(`${obj} is not iterable`); }\r\n    }\r\n}\r\n\r\n// Returns the sibling that fails the condition\r\n/**\r\n * @param {Element | null} [sib] \r\n * @param {Function} [breakFn] \r\n * @param {Function} [cb] \r\n * @returns {Element | null | undefined}\r\n */\r\nexport function _iterateSiblings(sib, breakFn, cb) {\r\n    if(breakFn?.(sib)) return sib;\r\n    sib = cb?.(sib) || sib;\r\n    return _iterateSiblings(sib?.nextElementSibling, breakFn, cb);\r\n}\r\n\r\n/**\r\n * @typedef InternalStoreOptions\r\n * @property {Function} [func]\r\n * @property {HTMLElement} [observeEl]\r\n */\r\n\r\n/**\r\n * @param {string} [storeName] \r\n * @param {string[]} [storeList] \r\n * @param {InternalStoreOptions} [options]\r\n * @returns \r\n */\r\nexport function _registerInternalStore(storeName, storeList, options) {\r\n    // Register new store (to prevent excess evaluations)\r\n    return _store(storeName || \"\", {\r\n        upstream: [...storeList || []],\r\n        updater: (list)=> {\r\n            try {\r\n                return options?.func?.(...list) || list[0];\r\n            }\r\n            catch(_) {\r\n                return;\r\n            }\r\n        },\r\n        scope: options?.observeEl,\r\n    });\r\n}\r\n","import { _store } from \"./store.js\";\r\nimport { _scheduleUpdate } from \"./updates.js\";\r\nimport { _commaSepRx, _getOpOverrides, _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _handleFetch } from \"./fetch.js\";\r\nimport { _handleBindSync } from \"./bindsync.js\";\r\nimport { _handleConditionals } from \"./conditionals.js\";\r\n/** @typedef {import(\"./index.module.js\").MfldOps} MfldOps */\r\n\r\n/** @type {Partial<MfldOps>} */\r\nlet _ops = {};\r\nlet _modes = [\"bind\", \"sync\", \"templ\", \"if\", \"each\", \"get\", \"head\", \"post\", \"put\", \"delete\", \"patch\"].map(m=> `${ATTR_PREFIX}${m}`);\r\n\r\n/**!\r\n * @param {Partial<MfldOps>} newops \r\n * @param {string} [profileName] \r\n */\r\nexport function _setOptions(newops, profileName) {\r\n    if(profileName) _ops.profiles = { ..._ops.profiles, [profileName]: newops };\r\n    else _ops = { ..._ops, ...newops };\r\n}\r\n\r\n// Handle location state changes\r\nglobalThis.addEventListener(\"popstate\", (e)=> {\r\n    // for(let update of e.state) {\r\n    //     _scheduleUpdate(update);\r\n    // }\r\n});\r\n\r\n//Register subscriptions on the DOM (scopable in case an update needs run on a subset of the DOM)\r\n/**\r\n * @param {HTMLElement | null} [parent] \r\n */\r\nexport function _registerSubs(parent) {\r\n    if(parent && parent.nodeType == Node.TEXT_NODE) return;\r\n\r\n    /** @type {NodeListOf<HTMLElement> | []} */\r\n    let els = (parent || document.body).querySelectorAll(\r\n        `[data-${_modes.join(`],[data-`)}],a,form`\r\n    ) || [];\r\n\r\n    for(let el of els) {\r\n        let _op_overrides = _getOpOverrides(_ops, el);\r\n\r\n        //Check for <a> and <form> elements\r\n        if(el.dataset?.[`${ATTR_PREFIX}promote`] !== undefined) {\r\n            let [mode, href, input, trigger] = el.tagName == \"A\" ?\r\n                [\"get\", /** @type {HTMLAnchorElement}*/(el).href, \"\", \"click\"] : \r\n                [/** @type {HTMLFormElement}*/(el).method.toLowerCase(), /** @type {HTMLFormElement}*/(el).action, \"$form\", \"submit\"];\r\n\r\n            if(href) {\r\n                _handleFetch(el, trigger, _op_overrides, href, mode, input);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        //Loop over all data attributes (modes)\r\n        for(let mode in el.dataset) {\r\n            //HANDLE CONDITIONALS AND LOOPS\r\n            // if([`${ATTR_PREFIX}templ`, `${ATTR_PREFIX}if`, `${ATTR_PREFIX}each`].includes(mode)) {\r\n            //     _handleConditionals(el, mode, _op_overrides);\r\n            //     continue;\r\n            // }\r\n\r\n            if(!_modes.includes(mode)) continue;\r\n            let shouldHaveTriggers = ![`${ATTR_PREFIX}bind`].includes(mode);\r\n\r\n            //Loop over provided settings\r\n            let setting = el.dataset?.[mode];\r\n            //Break out settings\r\n            let [sourceParts, output] = setting?.split(\"->\")?.map(s=> s.trim()) || [];\r\n            let triggers = shouldHaveTriggers ? _paramsInParens(sourceParts.slice(0, sourceParts.indexOf(\")\"))) : [];\r\n            let processFuncStr = shouldHaveTriggers ? sourceParts.slice(sourceParts.indexOf(\")\") + 1) : sourceParts;\r\n\r\n            //Handle errors\r\n            if(shouldHaveTriggers && !triggers?.length) { console.error(\"No trigger\", el); break; }\r\n\r\n            let { func, valueList, as } = _parseFunction(processFuncStr);\r\n            if(processFuncStr && !func) console.warn(`\"${processFuncStr}\" not registered`, el);\r\n\r\n            //Loop over triggers\r\n            if(!triggers?.length) triggers = [\"\"]\r\n            for(let trigger of triggers) {\r\n                if(mode.match(/bind|sync/)) _handleBindSync(el, valueList, output, trigger, mode, func);\r\n                // else {\r\n                //     if(!output) {\r\n                //         output = input[0];\r\n                //         input = [];\r\n                //     }\r\n                //     _handleFetch(el, trigger, _op_overrides, output, mode.replace(ATTR_PREFIX, \"\"), input, processFunc);\r\n                // }\r\n            }\r\n        }; //End loop settings\r\n    };  //End loop elements\r\n}\r\n\r\n/**\r\n * @param {string} str \r\n * @returns \r\n */\r\nfunction _paramsInParens(str) {\r\n    if(str?.includes(\"(\")) {\r\n        let matches = str.match(/[^\\(\\)]{1,}/g);\r\n        str = matches?.[matches.length - 1] || \"\";\r\n    }\r\n    return str?.split(_commaSepRx)?.map(s=> s.trim()) || [];\r\n}","import { _store } from \"./store.js\";\r\nimport { _addToNextTickQueue } from \"./updates.js\";\r\nimport { _registerSubs, _setOptions } from \"./registrar.js\";\r\n\r\n/**! @typedef {\"in-start\"|\"in-end\"|\"out-start\"|\"out-end\"} HookKey*/\r\n\r\n/**!\r\n * @typedef {object} ExternalOptions\r\n * @property {string} domain - The domain name these settings apply to\r\n * @property {boolean} [scripts] - Allow scripts from this domain to execute\r\n * @property {boolean} [styles] - Allow styles from this domain to apply\r\n */\r\n\r\n/**!\r\n * @typedef {object} FetchOptions\r\n * @property {RequestInit} [request] - Fetch request options\r\n * @property {\"json\"|\"text\"} [responseType] - Response type (default: \"text\")\r\n * @property {(err: Error)=> void} [err] - Error callback - run on fetch error\r\n * @property {(code: number, data: void | Response)=> boolean | void} [onCode] - Callback function - run on fetch response code; return `false` to prevent further processing\r\n * @property {ExternalOptions[]} [externals] - External domain fetch settings\r\n */\r\n\r\n/**!\r\n * @typedef {object} TransitionOptions\r\n * @property {string} [class] - CSS class applied to transitions (default: `mfTrans`)\r\n * @property {[number, number] | number} [dur] - Transition duration: [in, out] or single value (in ms); default: 300\r\n * @property {number} [swap] - Swap delay (in ms) - applied between one element's outro start and the replacement's intro start; default: 0\r\n * @property {boolean} [smartTransition] - Enable smart transitions (default: true)\r\n * @property {{ [key in HookKey]?: (el: HTMLElement)=> void }} [hooks] - Transition hooks\r\n */\r\n\r\n/**!\r\n * Manifold options for `fetch`, `trans`, and `profiles`.\r\n * @typedef {Object} MfldOps\r\n * @property {{ [ key: string ]: Partial<MfldOps> }} [profiles] - Fetch profiles assignable to elements\r\n * @property {FetchOptions} [fetch] - Fetch options - see https://google.com\r\n * @property {TransitionOptions} [trans] - Transition settings - see https://google.com\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback UpdaterFunction\r\n * @param {Array<any>} upstreamValues\r\n * @param {T} value\r\n * @returns {T | Promise<T>}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback ValueDeterminer\r\n * @param {T} [currentValue]\r\n * @returns {T | Promise<T> | undefined}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback UpdateFunction\r\n * @param {T | ValueDeterminer<T>} value\r\n * @returns {T | Promise<T> | undefined}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback SubDeterminer\r\n * @param {T} value\r\n * @returns {void}\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @callback SubFunction\r\n * @param {SubDeterminer<T>} value The store's current value\r\n * @returns void\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @typedef {Object} StoreOptions\r\n * @property {T} [value]\r\n * @property {Array<string>} [upstream]\r\n * @property {UpdaterFunction<T>} [updater]\r\n * @property {HTMLElement | SVGScriptElement | \"global\"} [scope]\r\n */\r\n\r\n/**!\r\n * @template T\r\n * @typedef Store\r\n * @prop {T} value - The store's current value (read only)\r\n * @prop {UpdateFunction<T>} update - Update the store's current value\r\n * @prop {SubFunction<T>} sub - Add a subscription function to the store\r\n */\r\n\r\n/**!\r\n * @typedef {Function} MfldFunc\r\n * @param {any} val\r\n * @param {HTMLElement} [el]\r\n */\r\n\r\n/**!\r\n * The global Manifold interface.\r\n */\r\nexport let Mfld = {\r\nstore: \r\n/**!\r\n* - Create or overwrite a _typed_ global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<T\\>`* \r\n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\r\n* @template T\r\n* @param {string} store_name\r\n* @param {StoreOptions<T> | T} store_ops\r\n* @return {Store<T>}\r\n*/ (store_name, store_ops)=> {\r\n    if(!store_ops?.hasOwnProperty(\"value\") && !store_ops?.hasOwnProperty(\"updater\")) {\r\n        store_ops = /** @type {StoreOptions<T>}*/({ value: /** @type {T}*/store_ops });\r\n    }\r\n    return /**@type {Store<T>}*/(_store(store_name, /**@type {StoreOptions<T>}*/store_ops))\r\n},\r\nustore: \r\n/**!\r\n* - Create or overwrite an untyped global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<any\\>`* \r\n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\r\n* @param {string} store_name\r\n* @param {StoreOptions<any> | any} store_ops\r\n* @return {Store<any>}\r\n*/ (store_name, store_ops)=> /**@type {Store<any>}*/(_store(store_name, store_ops)),\r\nget:\r\n/**!\r\n * - Retrieve a Manifold store by name. *returns `Store\\<any\\>`*\r\n * @param {string} store_name\r\n * @return {Store<any>}\r\n */ (store_name)=> /**@type {Store<any>}*/(_store(store_name)),\r\nfunc: \r\n/**!\r\n * - Retrieve a Manifold function by name. *val* refers to the store's current value; *el* refers to the element that triggered the update (if applicable). *returns `MfldFunc`*\r\n * - *Note:* Functions retrived using this method cannot infer the type of the store's value and is therefore **not** type-checked. It is preferable to keep a reference to the function if you need to preserve type information.\r\n * @param {string} func_name\r\n * @return {MfldFunc}\r\n */ (func_name)=> /** @type {(val: any, el?: HTMLElement)=> void}*/(\r\n// @ts-ignore\r\n MfFn[func_name]),\r\nfuncs: \r\n/**!\r\n * - Add functions to the Manifold function registry in key-value pairs.\r\n * - Functions must be registered in order to be accessible to HTML elements via `mfBind`, `mfSync`, and `mfResolve`. \r\n * - It may still be beneficial to keep a reference to the original function if you need to preserve type information.\r\n * @param {{ [key: string]: MfldFunc }} funcs\r\n */ funcs=> {\r\n    for(let key in funcs) {\r\n    // @ts-ignore\r\n    MfFn[key] = funcs[key];\r\n }},\r\nconfig:\r\n/**!\r\n * - Set Manifold configuration options, including `trans` (DOM transition settings), `fetch` (fetch options), and `profiles` (configuration option overrides that can be set on elements ad-hoc via `mfOverrides`).\r\n * - Providing the optional `profileName` parameter allows you to save the configuration as a named profile. Otherwise, the profile is saved as the default configuration.\r\n * @param {MfldOps} new_ops\r\n * @param {string} [profile_name]\r\n */ (new_ops, profile_name)=> _setOptions(new_ops, profile_name),\r\n onTick:\r\n /**!\r\n  * - Wait for the next Manifold data update cycle to complete before executing the callback function.\r\n  * @param {()=> void} cb\r\n  */ (cb)=> _addToNextTickQueue(cb),\r\nregister:\r\n/**!\r\n * - Register Manifold subscriptions on the DOM. *Optional:* Pass an `HTMLElement` or selector string to scope the registration to a specific element.\r\n * @param {HTMLElement | string | null} [parent]\r\n */ (parent)=> {\r\n    if(typeof parent == \"string\") parent = /** @type {HTMLElement | null}*/(document.querySelector(parent));\r\n        _registerSubs(parent)\r\n    },\r\n};"],"names":["ATTR_PREFIX","_inputNestSplitRx","_commaSepRx","_randomEnoughId","Date","now","Math","floor","random","_getOverride","name","el","ops","parse","def","as","override","dataset","profiles","fetch","JSON","parseInt","undefined","_getOpOverrides","overrides","responseType","trans","dur","swap","class","smartTransition","_parseFunction","condition","datakey","fstr","values","split","map","s","trim","reverse","fn","asStr","slice","valueList","replace","func","globalThis","MfFn","length","includes","match","filter","v","_parseValues","Function","e","console","error","log","window","spacer","workArray","cancelAnimationFrame","_nextTickQueue","spacerHeight","tick","requestAnimationFrame","setTimeout","_scheduleUpdate","update","push","_runUpdates","_addSpacer","inEl","wrapper","wrapperHeight","replaceWholeObject","document","createElement","paddingTop","paddingBottom","Element","getComputedStyle","style","height","abs","clientHeight","after","_adjustSizing","remove","animate","order","out","relation","in","_applyTransition","prepend","container","cloneNode","getDimensionsAfterUpdate","border","replaceChildren","replaceWith","appendChild","done","dir","refElement","nodeType","Node","TEXT_NODE","text","textContent","newNode","Array","isArray","transClass","classList","add","hooks","dimensions","w","clientWidth","paddingLeft","paddingRight","left","getBoundingClientRect","scrollX","top","scrollY","position","width","margin","transitionDuration","_hashAny","input","Map","from","entries","Set","hash","char","TextEncoder","encode","toString","MfSt","MfMutOb","Store","_updater","_subscriptions","_storedHash","_upstreamStores","_downstreamStores","_scope","constructor","this","_modify","scope","currentScript","set","mutOb","get","toRemove","observer","MutationObserver","muts","mut","type","node","removedNodes","store","_destroy","disconnect","delete","observe","parentElement","childList","upstream","S","_store","value","updater","_auto_update","sub","ref","immediate","Promise","async","resolve","newValue","newHash","ds","clearHash","newVal","found_store","clear","_handleFetch","trigger","fetchOps","href","method","processFunc","ev","preventDefault","stopPropagation","target","externals","find","allowed","startsWith","domain","location","origin","body","FormData","toFunc","data","request","headers","stringify","catch","err","code","status","onCode","resp","instruction","selector","toReplace","fullMarkup","DOMParser","parseFromString","querySelector","_registerSubs","history","pushState","resolveTxt","resolveFunc","addEventListener","_handleBindSync","inputs","output","mode","storeName","options","observeEl","val","_evalInputs","parts","setAttribute","dispatchEvent","CustomEvent","list","_","warn","getAttribute","numVal","parseFloat","isNaN","_ops","_modes","m","parent","els","querySelectorAll","join","_op_overrides","tagName","toLowerCase","action","shouldHaveTriggers","setting","sourceParts","triggers","_paramsInParens","indexOf","processFuncStr","str","matches","Mfld","store_name","store_ops","hasOwnProperty","ustore","func_name","funcs","key","config","new_ops","profile_name","_setOptions","newops","profileName","onTick","cb","register"],"mappings":"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"}