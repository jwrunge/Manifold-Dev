{"version":3,"file":"mfld.mod.js","sources":["../../src/util.js","../../src/updates.js","../../src/store.js","../../src/fetch.js","../../src/bindsync.js","../../src/domutil.js","../../src/registrar.js","../../src/index.module.js"],"sourcesContent":["export let ATTR_PREFIX = \"mf_\";\r\nexport let _inputNestSplitRx = /[\\.\\[\\]\\?]{1,}/g;\r\n\r\nexport function _randomEnoughId() {\r\n    return `${Date.now()}.${Math.floor(Math.random() * 100_000)}`;\r\n}\r\n\r\n/**\r\n * Get or set nested store values\r\n * @param {any} obj \r\n * @param {(string | number)[]} path \r\n * @param {any} [newval] \r\n * @returns \r\n */\r\nexport function _nestedValue(obj, path, newval) {\r\n    let ptr = obj;\r\n\r\n    for(let key of path) {\r\n        //Dynamically letruct object if it doesn't exist\r\n        if(ptr == undefined) ptr = typeof key == \"number\" ? [] : {};\r\n\r\n        //Set or get value\r\n        if(newval == undefined || path[path.length - 1] !== key) ptr = ptr instanceof Map ? ptr?.get(key) : ptr?.[key];\r\n        else ptr instanceof Map ? ptr.set(key, newval) : ptr[key] = newval;\r\n    }\r\n\r\n    return ptr;\r\n}\r\n\r\nexport function _getStorePathFromKey(s) {\r\n    let [storeName, ...path] = (s)?.split(_inputNestSplitRx);\r\n    return [storeName, path?.map(sp=> !isNaN(parseInt(sp)) ? parseInt(sp) : sp).filter(sp=> sp) || []];\r\n}\r\n\r\nfunction _getOverride(name, el, ops, parse = true, def = \"{}\", as) {\r\n    let override = el.dataset[`${ATTR_PREFIX}${name}`];\r\n    if(!override) return undefined;\r\n    if(name == \"overrides\") return ops.profiles?.[override || \"\"]?.fetch || JSON.parse(override || \"{}\");\r\n    if(parse) return JSON.parse(override || def);\r\n    if(as == \"num\") return parseInt(override) || undefined;\r\n    if(as == \"bool\") return override == \"true\" ? true : override == \"false\" ? false : undefined;\r\n    return override;\r\n}\r\n\r\n/**\r\n * Get or set nested store values\r\n * @param {import(\"./index.module\").MfldOps} ops\r\n * @param {HTMLElement} el\r\n * @returns {import(\"./index.module\").MfldOps}\r\n */\r\nexport function _getOpOverrides(ops, el) {\r\n    let overrides = _getOverride(\"overrides\", el, ops);\r\n\r\n    let newops = {\r\n        profiles: ops.profiles,\r\n        fetch: {\r\n            ...ops.fetch,\r\n            ...{\r\n                responseType: _getOverride(\"responsetype\", el, ops, false) || ops.fetch?.responseType\r\n            },\r\n            ...(overrides?.fetch || {}),\r\n            ...(_getOverride(\"fetch\", el, ops) || {}),\r\n        },\r\n        trans: {\r\n            ...ops.trans,\r\n            ...{\r\n                dur: _getOverride(\"transdur\", el, ops, true, \"[]\", \"num\") || ops.trans?.dur,\r\n                swap: _getOverride(\"transswap\", el, ops, false, \"\", \"num\") || ops.trans?.swap,\r\n                class: _getOverride(\"transclass\", el, ops, false) || ops.trans?.class,\r\n                smartTransition: _getOverride(\"transsmart\", el, ops, false, undefined, \"bool\") || ops.trans?.smartTransition,\r\n            },\r\n            ...(overrides?.trans || {}),\r\n            ...(_getOverride(\"trans\", el, ops) || {}),\r\n        },\r\n    }\r\n\r\n    return newops;\r\n}\r\n\r\nfunction _parseValues(values) {\r\n    if(typeof values == \"string\") values = values.split(/\\s{0,},\\s{0,}/);\r\n    return values.map(v=> v.split(_inputNestSplitRx)?.[0]) || [];\r\n}\r\n\r\n/**\r\n * @param {{el: HTMLElement, datakey: string} | string} condition \r\n * @returns {{ valueList?: string[], func?: Function }}\r\n */\r\nexport function _parseFunction(condition) {\r\n    if(typeof condition != \"string\") {\r\n        condition = condition?.el?.dataset?.[condition?.datakey] || \"\";\r\n        if(!condition && /** @type {any}*/(condition)?.el?.dataset?.[`${ATTR_PREFIX}else`] != undefined) condition = \"return true\";\r\n    }\r\n\r\n    let [fn, values] = condition?.split(\"=>\")?.map(s=> s.trim())?.reverse() || [\"\", \"\"];\r\n\r\n    // Set up function to evaluate store values\r\n    let valueList = values?.split(\",\")?.map(s=> s.replace(/[()]/g, \"\").trim()) || [];\r\n    // @ts-ignore\r\n    let func = globalThis[fn] || MfFn?.get(fn);\r\n    if(!func) {\r\n        // If function is not found, try to create it; account for implicit returns\r\n        if(!valueList?.length && !fn.includes(\"=>\")) {\r\n            if(!fn.match(/\\(|\\)/)) {\r\n                valueList = [fn];\r\n                fn = `return ${fn}`;\r\n            }\r\n            else {\r\n                valueList = fn.match(/\\([^\\)]{1,}\\)/)?.[0]?.replace(/[\\(\\) ]/g, \"\").split(\",\").filter(s=> !s.match(/[\\\"\\'\\`]/)) || [];\r\n            }\r\n        }\r\n\r\n        valueList = _parseValues(valueList);\r\n        if(!fn.match(/^\\s{0,}\\{/) && !fn.includes(\"return\")) fn = fn.replace(/^\\s{0,}/, \"return \");\r\n        func = new Function(...valueList, fn);\r\n    }\r\n\r\n    return { valueList, func };\r\n}","/** @typedef {import(\"./index.module.js\").MfldOps} MfldOps */\r\n\r\nimport { ATTR_PREFIX } from \"./util.js\";\r\n\r\n/**\r\n * @typedef {Object} DomWorkOrder\r\n * @property {HTMLElement} in - The input HTMLElement\r\n * @property {HTMLElement} out - The output HTMLElement\r\n * @property {\"append\" | \"prepend\" | \"swapinner\" | \"swapouter\"} relation - The relation between the input and output elements\r\n * @property {Partial<MfldOps>} ops - The fetch options for the operation\r\n * @property {(el: HTMLElement | null) => void} done - The callback function to be executed when the operation is done\r\n */\r\n\r\n/** @type {(DomWorkOrder | Function)[]} */ let workArray = [];\r\nlet cancelAnimationFrame = false;\r\n/** @type {Map<string, (any | ((any)=> any))>} */\r\n\r\n// Next tick queue\r\n/**\r\n * @type {Function[]}\r\n */\r\nlet _nextTickQueue = [];\r\n\r\n/** @type {HTMLElement | null} */\r\nlet spacer;\r\nlet spacerHeight = \"\";\r\n\r\n// Polyfill requestAnimationFrame\r\nlet tick = globalThis?.requestAnimationFrame || ((fn)=> setTimeout(fn, 0));\r\n\r\nexport function _addToNextTickQueue(fn) {\r\n    if(fn) _nextTickQueue.push(fn);\r\n}\r\n\r\n/** @export @param {(DomWorkOrder | Function)} update */\r\nexport function _scheduleUpdate(update) {\r\n    workArray.push(update);\r\n    if(!cancelAnimationFrame) {\r\n        cancelAnimationFrame = true;\r\n        tick(_runUpdates);\r\n    }\r\n}\r\n\r\nfunction _addSpacer(inEl, wrapper, wrapperHeight, replaceWholeObject = false, ops) {\r\n    if(!ops.trans?.smartTransition ?? true) return;\r\n    //Conserve parent size\r\n    spacer = document.createElement(\"div\");\r\n    \r\n    let { paddingTop, paddingBottom } = wrapper instanceof Element ? window.getComputedStyle(wrapper) : { paddingTop: 0, paddingBottom: 0 };\r\n    spacerHeight = spacer.style.height = `calc(${(Math.abs(wrapperHeight - (inEl?.clientHeight || 0)))}px - ${paddingTop} - ${paddingBottom})`;\r\n\r\n    wrapper?.after(spacer);\r\n}\r\n\r\nfunction _adjustSizing(inEl, ops) {\r\n    if(!ops.trans?.smartTransition ?? true) return;\r\n    let dur = (ops?.trans?.dur?.[0] || ops?.trans?.dur || 600)/2\r\n\r\n    _scheduleUpdate(()=> {\r\n        spacer?.remove();\r\n        inEl?.animate?.([\r\n            { height: spacerHeight },\r\n            { height: `${inEl.clientHeight || 0}px` }\r\n        ], dur);\r\n    });\r\n}\r\n\r\nfunction _runUpdates() {\r\n    cancelAnimationFrame = false;\r\n    \r\n    /**\r\n    * @type {DomWorkOrder[]}\r\n    */\r\n    for(let order of workArray) {\r\n        if(typeof order == \"function\") (/** @type {Function} */ order)();\r\n        else {\r\n            let wrapperHeight = order.out ? order.out.clientHeight : 0;\r\n\r\n            // Prepend\r\n            if(order.relation == \"prepend\") {\r\n                _addSpacer?.(order.in, order.out, wrapperHeight, false, order.ops);\r\n\r\n                //Prepend\r\n                _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                    if(order.in) order.out?.prepend(order.in);\r\n                    _adjustSizing?.(order.in, order.ops);\r\n                });\r\n            }\r\n            // Remove old children\r\n            else {\r\n                if([\"swapinner\", \"swapouter\"].includes(order.relation)) {\r\n                    //Remove old children before appending (if swapping children)\r\n                    let container = /** @type {HTMLElement | null}*/(order.out?.cloneNode(true));\r\n\r\n                    if(container) {\r\n                        order.out?.after(container);\r\n                        let getDimensionsAfterUpdate = order.relation == \"swapinner\" ? true : false;\r\n\r\n                        if(order.relation == \"swapinner\") {\r\n                            container.style.border = \"none\";\r\n                            order.out.replaceChildren();\r\n                        }\r\n\r\n                        // Transition old children out\r\n                        _applyTransition(container, \"out\", order.ops, undefined, order.out, getDimensionsAfterUpdate);\r\n                    }\r\n                }\r\n\r\n                _addSpacer?.(order.in, order.out, wrapperHeight, false, order.ops);\r\n\r\n                // Transition incoming element and append\r\n                _applyTransition(order.in, \"in\", order.ops, ()=> {\r\n                    if(order.in) {\r\n                        if(order.relation == \"swapouter\") order.out?.replaceWith(order.in)\r\n                        else order.out?.appendChild(order.in);\r\n                    }\r\n                    _adjustSizing?.(order.in, order.ops);\r\n                });\r\n            }\r\n\r\n            order.done?.(order.in);\r\n        }\r\n    }\r\n\r\n    //Handle queued nextTick functions\r\n    for(let fn of _nextTickQueue) fn();\r\n    _nextTickQueue = [];\r\n    workArray = [];\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {\"in\" | \"out\"} dir \r\n * @param {Partial<MfldOps>} ops \r\n * @param {Function} [fn] \r\n * @param {HTMLElement} [refElement]\r\n * @param {boolean} [getDimensionsAfterUpdate]\r\n * @returns \r\n */\r\nexport function _applyTransition(el, dir, ops, fn, refElement, getDimensionsAfterUpdate = false) {\r\n    //Handle text nodes\r\n    if(el?.nodeType == Node.TEXT_NODE) {\r\n        let text = el.textContent;\r\n        let newNode = document?.createElement(\"div\");\r\n        newNode.textContent = text;\r\n        el.replaceWith(newNode);\r\n        el = newNode;\r\n    }\r\n\r\n    if(el) {\r\n        let dur = Array.isArray(ops.trans?.dur) ? ops.trans?.dur[dir == \"in\" ? 0 : 1] || ops.trans?.dur[0] : ops.trans?.dur || 0;\r\n\r\n        //Initiate transition\r\n        let transClass = ops?.trans?.class || `${ATTR_PREFIX}trans`;\r\n        el?.classList?.add(transClass);\r\n        ops.trans?.hooks?.[`${dir}-start`]?.(el);\r\n\r\n        //Wait to apply class\r\n        if(dir == \"out\") {\r\n            // Set dimensions\r\n            if(!refElement) refElement = el;\r\n            if(!refElement) return;\r\n            let dimensions = {};\r\n            if((ops.trans?.smartTransition ?? true) && getDimensionsAfterUpdate == false) {\r\n                let style = getComputedStyle(refElement);\r\n                dimensions.w = `calc(${(refElement).clientWidth}px - ${style.paddingLeft} - ${style.paddingRight})`;\r\n                dimensions.left = `calc(${refElement.getBoundingClientRect().left}px + ${window.scrollX}px)`;\r\n                dimensions.top = `calc(${refElement.getBoundingClientRect().top}px + ${window.scrollY}px)`;\r\n            }\r\n\r\n            _scheduleUpdate(()=> {\r\n                if(ops.trans?.smartTransition ?? true) {\r\n                    if(getDimensionsAfterUpdate && refElement) {\r\n                        let style = getComputedStyle(refElement);\r\n                        dimensions.w = `calc(${(refElement).clientWidth}px - ${style.paddingLeft} - ${style.paddingRight})`;\r\n                        dimensions.left = `calc(${refElement.getBoundingClientRect().left}px + ${window.scrollX}px)`;\r\n                        dimensions.top = `calc(${refElement.getBoundingClientRect().top}px + ${window.scrollY}px)`;\r\n                    }\r\n                    \r\n                    el.style.position = \"fixed\";\r\n                    el.style.width = dimensions.w;\r\n                    el.style.left = dimensions.left;\r\n                    el.style.top = dimensions.top;\r\n                    el.style.margin = \"0\";\r\n                }\r\n\r\n                if(dur) el.style.transitionDuration = `${dur}ms`;\r\n                el.classList?.add(\"out\");\r\n            })\r\n        }\r\n        //If dir == in\r\n        else {\r\n            el?.classList?.add(\"in\");\r\n            if(dur) el.style.transitionDuration = `${dur}ms`;\r\n            fn?.();\r\n            setTimeout(()=> {\r\n                _scheduleUpdate(()=> {\r\n                    setTimeout(()=> _scheduleUpdate(()=> el?.classList?.remove(dir)), 0);\r\n                });\r\n            }, ops.trans?.swap || 0);\r\n        }\r\n        \r\n        setTimeout(()=> {\r\n            _scheduleUpdate(()=> {\r\n                //Wrapup\r\n                if(dir == \"out\") el?.remove();\r\n                el?.classList?.remove(transClass);\r\n                ops.trans?.hooks?.[`${dir}-end`]?.(el);\r\n            });\r\n        }, \r\n        dur + (dir == \"in\" ? ops.trans?.swap || 0 : 0));\r\n    }\r\n}","/** \n * @template T\n * @typedef {import(\"./index.module.js\").UpdaterFunction<T>} UpdaterFunction \n */\n/** \n * @template T\n * @typedef {import(\"./index.module.js\").StoreOptions<T>} StoreOptions \n */\n\nimport { _scheduleUpdate } from \"./updates.js\";\nimport { _randomEnoughId } from \"./util.js\";\n\n/**\n * @callback SubFunction\n * @param {any} value\n * @param {string} [ref]\n * @returns {void}\n */\n\n/**\n * @param {any} input \n * @returns {any}\n */\nfunction _hashAny(input) {\n    if(!input) return 0;\n    if(typeof input == 'number') return input;\n    if(input === true) return 1;\n\n    if(input instanceof Map) return _hashAny(Array.from(input.entries()));\n    else if(input instanceof Set) return _hashAny(Array.from(input));\n\n    let hash = 0;\n    for(let char of new TextEncoder().encode(\n        typeof input == 'string' ? input : input?.toString() || \"\"\n    )) \n        hash = ((hash << 5) - hash) + char;\n    return hash;\n}\n\n//Static\n/** @type {Map<string, Store<any>>} */ if(!globalThis.MfSt) globalThis.MfSt = new Map();\n/** @type {Map<string, Function>} */ if(!globalThis.MfFn) globalThis.MfFn = new Map();\n/** @type {Map<Element, {toDestroy: Set<Store<any>>, observer: MutationObserver}>} */ if(!globalThis.MfMutOb) globalThis.MfMutOb = new Map();\n\n/**\n * @template T\n */\nexport class Store {\n    /** @type {UpdaterFunction<T> | undefined} */ _updater = undefined;\n    /** @type {Map<string, SubFunction>} */ _subscriptions = new Map();\n    /** @type {string | undefined} */ _storedHash = undefined;\n    /** @type {Set<Store<any>>} */ _upstreamStores = new Set();\n    /** @type {Set<Store<any>>} */ _downstreamStores = new Set();\n    /** @type {HTMLElement | SVGScriptElement | string | \"global\"} */ _scope;\n\n    /**\n     * @param {string} name\n     * @param {StoreOptions<T>} [ops]\n     */\n    constructor(name, ops) {\n        return this._modify(name, ops);        \n    }\n\n    /**\n     * @param {string} name\n     * @param {StoreOptions<T>} [ops]\n     */\n    _modify(name, ops) {\n        this.name = name;\n        this._scope = ops?.scope || document.currentScript || \"global\";\n        // @ts-ignore\n        MfSt.set(name, this);\n\n        //Watch for scope destroy\n        // Watch for scope destroy\n        if(this._scope instanceof Element) {\n            // @ts-ignore\n            let mutOb = MfMutOb.get(this._scope);\n            if(!mutOb) {\n                mutOb = {};\n                mutOb.toRemove = new Set();\n                mutOb.observer = new MutationObserver((muts)=> {\n                    for(let mut of muts) {\n                        if(mut.type == \"childList\") {\n                            for(let node of mut.removedNodes) {\n                                if(node instanceof Element) {\n                                    for(let store of mutOb.toRemove) {\n                                        if(store._scope == node) {\n                                            let scope = this._scope;\n                                            _destroy(store);\n                                            mutOb.observer.disconnect();\n                                            mutOb.toRemove.delete(store);\n                                            // @ts-ignore\n                                            MfMutOb.delete(scope)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n                /** @type {MutationObserver}*/(mutOb.observer).observe(/** @type {HTMLElement}*/(this._scope?.parentElement), { childList: true });\n            }\n            mutOb.toRemove.add(this);\n            // @ts-ignore\n            MfMutOb.set(this._scope, mutOb);\n        }\n        \n        (ops?.upstream?.map(s=> {\n            let S = _store(s);\n            this._upstreamStores.add(S);\n            S._downstreamStores.add(this);\n            return S;\n        }) || []);\n\n        this.value = ops?.value;\n        this._updater = ops?.updater;\n        this._auto_update();\n        return this;\n    }\n\n    /**\n     * @param {(T)=> void} sub\n     * @param {string | undefined} [ref]\n     * @param {boolean} [immediate]\n     */\n    sub(sub, ref, immediate = true) {\n        this._subscriptions.set(ref || _randomEnoughId(), sub);\n        if(immediate) sub?.(this.value);\n    }\n\n    //Update (manual or automated -- cascades downstream on batch updates)\n    /**\n    * @template T\n    * @param {T | ((T)=> T | Promise<T>)} value\n    */\n    async update(value) {\n        return new Promise(async (resolve)=> {\n            //Apply new value   \n            let newValue = (typeof value == \"function\" ? /** @type {Function} */(await value)?.(this.value) : value);\n            let newHash = _hashAny(newValue);\n            \n            if(newHash !== this._storedHash) {\n                this.value = newValue;\n                this._storedHash = newHash;\n\n                // Add this store to the work order\n                for(let ds of this._downstreamStores) await ds._auto_update();\n\n                // Wait for next animation frame to return the value\n                _scheduleUpdate(()=> {\n                    for(let [ref, sub] of this?._subscriptions || []) sub?.(this.value, ref);\n                    resolve(this.value);\n                });\n            }\n            else resolve(this.value);\n        });\n    }\n\n    async clearHash() {\n        this._storedHash = undefined;\n    }\n\n    async _auto_update() {\n        let newVal = await this._updater?.(\n            Array.from(this._upstreamStores)?.map(S => S?.value) || [], \n            /** @type {T} */(this?.value)\n        );\n\n        await this.update(newVal === undefined ? this.value : newVal);\n    }\n}\n\n/**\n * STORE STATIC METHODS\n */\n/**\n * @template T\n * @param {string} name - The name of the store\n * @param {StoreOptions<T> | T} [ops] - Options to update the store\n * @returns {Store<T>}\n */\nexport function _store(name, ops) {\n    // @ts-ignore\n    let found_store = MfSt.get(name);\n    if(ops) {\n        if(found_store) {\n            return found_store._modify(name, ops);\n        }\n        return new Store(name, ops);\n    }\n    return found_store || new Store(name, /** @type {StoreOptions<T>}*/(ops));\n}\n\n/**\n * @param {HTMLElement | string} scope \n */\nexport function _clearScope(scope) {\n    // @ts-ignore\n    for(let store of MfSt.values()) {\n        if(store._scope == scope) _destroy(store);\n    }\n}\n\n/**\n * @param {Store<any>} store \n */\nexport function _destroy(store) {\n    store._subscriptions.clear();\n    store._upstreamStores.clear();\n    store._downstreamStores.clear();\n    // @ts-ignore\n    MfSt.delete(store.name);\n    // @ts-ignore\n    store = undefined;\n}","import { _parseFunction, ATTR_PREFIX } from \"./util.js\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _registerSubs } from \"./registrar.js\";\r\nimport { _store } from \"./store.js\";\r\n\r\n/** @typedef {import(\"./index.module.js\").MfldOps} MfldOps */\r\n\r\n/**\r\n * @param {HTMLElement} el \r\n * @param {string} trigger \r\n * @param {MfldOps} fetchOps\r\n * @param {string} href\r\n * @param {string} [method] \r\n * @param {any} [input]\r\n * @param {Function} [processFunc]\r\n */\r\nexport function _handleFetch(el, trigger, fetchOps, href, method, input, processFunc) {\r\n    /**\r\n     * @param {Event} [e]\r\n     */\r\n    let ev = async e=> {  \r\n        e?.preventDefault();\r\n        e?.stopPropagation();\r\n\r\n        // Set from target element if relevant; fall back to \"get\"\r\n        if(!method) method = /** @type {any}*/(e?.target)?.method || \"get\";\r\n    \r\n        //Make sure we're allowed to fetch\r\n        let externalPermissions = fetchOps?.fetch?.externals?.find(allowed=> href?.startsWith(allowed.domain)) || \r\n            !href.match(/^https?:\\/\\//) || href.includes(location.origin) ? {\r\n                scripts: true,\r\n                styles: true,\r\n        } : undefined;\r\n\r\n        // Parse input\r\n        let body = Array.isArray(input) ? input[0] : input == \"$form\" ? new FormData(/** @type {HTMLFormElement}*/(el)) : input;\r\n        if(processFunc) {\r\n            let toFunc = Array.isArray(input) ? (input?.map(s=> _store(s).value) || []) : [body];\r\n            body = processFunc?.(...toFunc)\r\n        }\r\n\r\n        //Fetch data\r\n        let data = await fetch(href, {\r\n            ...(fetchOps?.fetch?.request || {}),\r\n            headers: {\r\n                ...fetchOps?.fetch?.request?.headers,\r\n                \"Manifold-App-Fetch\": \"true\",\r\n            },\r\n            method,\r\n            body: input == \"$form\" || typeof body == \"string\" ? body : JSON.stringify(body),\r\n        })\r\n        .catch(error=> {\r\n            fetchOps?.fetch?.err?.(error) || console.error(\"FETCH ERROR\", error);\r\n        });\r\n\r\n        //Handle onCode callback\r\n        let code = data?.status;\r\n        if(code && fetchOps?.fetch?.onCode?.(code, data) == false) return;\r\n\r\n        //Return JSON or text in callback\r\n        let resp = await data?.[fetchOps?.fetch?.responseType || \"text\"]();\r\n\r\n        // Handle resolutions\r\n        for(let instruction of [\"append\", \"prepend\", \"swapinner\", \"swapouter\"]) {\r\n            let ds = el.dataset[`${ATTR_PREFIX}${instruction}`];\r\n            if(ds === undefined) continue;\r\n            let [selector, toReplace] = ds?.split(\"->\").map(s=> s.trim()) || [];\r\n\r\n            //Extract content and schedule a DOM update\r\n            let fullMarkup = (new DOMParser())?.parseFromString?.(resp, 'text/html');\r\n            if(fullMarkup) {\r\n                _scheduleUpdate({\r\n                    in: /** @type {HTMLElement} */ (fullMarkup.querySelector(selector || \"body\")),\r\n                    out: /** @type {HTMLElement} */ (toReplace ? document.querySelector(toReplace) : el),\r\n                    relation: /** @type {\"append\" | \"prepend\" | \"swapinner\" | \"swapouter\"}*/(instruction),\r\n                    ops: fetchOps,\r\n                    done: (el)=> {\r\n                        _registerSubs(el)\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        //Push to history if requested\r\n        if(el.dataset?.[`${ATTR_PREFIX}pushstate`] !== undefined) {\r\n            history.pushState({}, \"\", href);\r\n        }\r\n\r\n        let resolveTxt = el.dataset?.[`${ATTR_PREFIX}resolve`];\r\n        let resolveFunc = _parseFunction(resolveTxt || \"\")?.func;\r\n        resolveFunc?.(resp);\r\n\r\n            // //Clear existing scripts/styles\r\n            // for(let s of [pageScripts, pageStyles]) {\r\n            //     let elements = s.get(fullMarkup) || [];\r\n            //     elements.forEach(el => el.remove());\r\n            //     s.set(fullMarkup, []);\r\n            // }\r\n\r\n            // //Get scripts and styles\r\n            // let seek: string[] = ops.allowScripts ? [\"scripts\"] : [];\r\n            // if(ops.allowStyles) seek.push(\"style\");\r\n            // if(seek.length) {\r\n            //     let globls: NodeListOf<HTMLScriptElement | HTMLStyleElement> = fullMarkup.querySelectorAll(seek.join(\",\"));\r\n            //     for(let el of globls) {\r\n            //         let isScript = el instanceof HTMLScriptElement;\r\n            //         let source = isScript ? pageScripts : pageStyles;\r\n\r\n            //         if(isScript ? ops.allowScripts : ops.allowStyles){\r\n            //             if(!source.has(parent)) source.set(parent, []);\r\n            //             source.get(parent)?.push(el as any);\r\n            //         }\r\n            //         else if(isScript) el.parentNode?.removeChild(el);\r\n            //     }\r\n            // }\r\n    }\r\n\r\n    if(trigger == \"$mount\") ev();\r\n    else el.addEventListener(trigger, ev);\r\n}","import { _registerInternalStore } from \"./domutil\";\r\nimport { _store } from \"./store\";\r\nimport { _scheduleUpdate } from \"./updates\";\r\nimport { _getStorePathFromKey, _inputNestSplitRx, _nestedValue, _randomEnoughId, ATTR_PREFIX } from \"./util\";\r\n\r\nexport function _handleBindSync(el, input, output, trigger, mode, processFunc) {\r\n    /**\r\n     * HANDLE MF-BIND - inputs are stores, output is element property\r\n     */\r\n    if(mode == `${ATTR_PREFIX}bind`) {\r\n        let stores = [], paths = [];\r\n        for(let s of input) {\r\n            let [storeName, path] = _getStorePathFromKey(s);\r\n            stores.push(storeName);\r\n            paths.push(path);\r\n        }\r\n\r\n        _registerInternalStore(\r\n            _randomEnoughId(),\r\n            stores,\r\n            {\r\n                observeEl: el,\r\n                func: ()=> {\r\n                    let storeValues = [];\r\n                    for(let i=0; i<stores.length; i++) storeValues.push(_nestedValue(_store(stores[i])?.value, paths[i]));\r\n\r\n                    let val = processFunc?.(...storeValues, el) ?? storeValues[0];\r\n\r\n                    if(output && val !== undefined) {\r\n                        let parts = output.split(\":\");\r\n                        if(parts.length > 1) {\r\n                            switch(parts[0]) {\r\n                                case \"style\": el.style[parts[1]] = val; break;\r\n                                case \"attr\": el.setAttribute(parts[1], val); break;\r\n                                default: el[output] = val;\r\n                            }\r\n                        }\r\n                        else el[output] = val;\r\n                    }\r\n\r\n                    //Make sure to update dependent stores on value update\r\n                    el.dispatchEvent(new CustomEvent(trigger));\r\n                    return val;\r\n                }\r\n            } \r\n        )\r\n    }\r\n\r\n    else {\r\n        /**\r\n         * HANDLE MF-SYNC - inputs are element properties, output is a store\r\n         */\r\n        if(mode == `${ATTR_PREFIX}sync`) {\r\n            let [storeName, path] = _getStorePathFromKey(output || \"\");\r\n            let ev = ()=> {\r\n                let propValues = input.map(prop=> {\r\n                    prop = prop.trim();\r\n                    let parts = prop.split(\":\");\r\n                    if(parts.length > 1) {\r\n                        switch(parts[0]) {\r\n                            case \"style\": return el.style[prop] ?? undefined;\r\n                            case \"attr\": return el.getAttribute(prop) ?? undefined;\r\n                            default: return el[prop] ?? undefined;\r\n                        }\r\n                    }\r\n                    else return el[prop] ?? undefined;\r\n                });\r\n\r\n                let value = processFunc?.(...propValues) ?? propValues[0];\r\n                \r\n                if(storeName && value !== undefined) {\r\n                    _store(storeName)?.update?.(curVal=> {\r\n                        return path?.length ? _nestedValue(curVal, path, value) : value\r\n                    });\r\n                }\r\n            }\r\n            if(trigger == \"$mount\") ev();\r\n            else el.addEventListener(trigger, ev);\r\n        }\r\n    }\r\n}","import { _store } from \"./store\";\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns {HTMLElement}\r\n */\r\nexport function _ensureNodeName(el, nodeName, skipAttributes = []) {\r\n    // Make sure this is a template\r\n    if(el.tagName != nodeName) {\r\n        let newEl = document.createElement(nodeName);\r\n        newEl.innerHTML = el.innerHTML;                \r\n        for(let attr of el.attributes) {\r\n            console.log(skipAttributes, attr.name, skipAttributes.includes(attr.name))\r\n            if(!skipAttributes.includes(attr.name)) newEl.setAttribute(attr.name, attr.value);\r\n        }\r\n        el.replaceWith(newEl);\r\n\r\n        // If not, it's default content\r\n        return newEl;\r\n    }\r\n    return el;\r\n}\r\n\r\n/**\r\n * @param {any} obj \r\n * @param {(value: any, index: any, array?: any)=> void} cb \r\n */\r\nexport function _iterable(obj, cb) {\r\n    if(obj instanceof Map) for(const [key, value] of obj.entries()) cb(key, value);\r\n    else {\r\n        try { \r\n            let arr = Array.from(obj);\r\n            if(arr?.length) arr.forEach(cb);\r\n            else for(let key in obj) cb(key, obj[key]);\r\n        }\r\n        catch(e) { console.error(`${obj} is not iterable`); }\r\n    }\r\n}\r\n\r\n// Returns the sibling that fails the condition\r\n/**\r\n * @param {Element | null} [sib] \r\n * @param {Function} [breakFn] \r\n * @param {Function} [cb] \r\n * @returns {Element | null | undefined}\r\n */\r\nexport function _iterateSiblings(sib, breakFn, cb) {\r\n    if(breakFn?.(sib)) return sib;\r\n    sib = cb?.(sib) || sib;\r\n    return _iterateSiblings(sib?.nextElementSibling, breakFn, cb);\r\n}\r\n\r\n/**\r\n * @typedef InternalStoreOptions\r\n * @property {Function} [func]\r\n * @property {HTMLElement} [observeEl]\r\n */\r\n\r\n/**\r\n * @param {string} [storeName] \r\n * @param {string[]} [storeList] \r\n * @param {InternalStoreOptions} [options]\r\n * @returns \r\n */\r\nexport function _registerInternalStore(storeName, storeList, options) {\r\n    // Register new store (to prevent excess evaluations)\r\n    return _store(storeName || \"\", {\r\n        upstream: [...storeList || []],\r\n        updater: (list)=> {\r\n            if(storeName?.startsWith(\"TEMPL\")) console.log(\"RUNNING UPDATE\", storeName, _store(storeName || \"\")?.value)\r\n            try {\r\n                return options?.func?.(...list) || list[0];\r\n            }\r\n            catch(_) {\r\n                if(storeName?.startsWith(\"TEMPL\")) console.log(\"Returning failure\", storeName)\r\n                return;\r\n            }\r\n        },\r\n        scope: options?.observeEl,\r\n    });\r\n}\r\n","import { _store } from \"./store.js\";\nimport { _scheduleUpdate } from \"./updates.js\";\nimport { _getOpOverrides, _parseFunction, ATTR_PREFIX } from \"./util.js\";\nimport { _handleFetch } from \"./fetch.js\";\nimport { _handleBindSync } from \"./bindsync.js\";\nimport { _handleConditionals } from \"./conditionals.js\";\n/** @typedef {import(\"./index.module.js\").MfldOps} MfldOps */\n\n/** @type {Partial<MfldOps>} */\nlet _ops = {};\nlet _commaSepRx = /, {0,}/g;\nlet _modes = [\"bind\", \"sync\", \"templ\", \"if\", \"each\", \"get\", \"head\", \"post\", \"put\", \"delete\", \"patch\"].map(m=> `${ATTR_PREFIX}${m}`);\n\n/**!\n * @param {Partial<MfldOps>} newops \n * @param {string} [profileName] \n */\nexport function _setOptions(newops, profileName) {\n    if(profileName) _ops.profiles = { ..._ops.profiles, [profileName]: newops };\n    else _ops = { ..._ops, ...newops };\n}\n\n// Handle location state changes\nglobalThis.addEventListener(\"popstate\", (e)=> {\n    // for(let update of e.state) {\n    //     _scheduleUpdate(update);\n    // }\n});\n\n//Register subscriptions on the DOM (scopable in case an update needs run on a subset of the DOM)\n/**\n * @param {HTMLElement | null} [parent] \n */\nexport function _registerSubs(parent) {\n    if(parent && parent.nodeType == Node.TEXT_NODE) return;\n\n    /** @type {NodeListOf<HTMLElement> | []} */\n    let els = (parent || document.body).querySelectorAll(\n        `[data-${_modes.join(`],[data-`)}],a,form`\n    ) || [];\n\n    for(let el of els) {\n        let _op_overrides = _getOpOverrides(_ops, el);\n\n        //Check for <a> and <form> elements\n        if(el.dataset?.[`${ATTR_PREFIX}promote`] !== undefined) {\n            let [mode, href, input, trigger] = el.tagName == \"A\" ?\n                [\"get\", /** @type {HTMLAnchorElement}*/(el).href, \"\", \"click\"] : \n                [/** @type {HTMLFormElement}*/(el).method.toLowerCase(), /** @type {HTMLFormElement}*/(el).action, \"$form\", \"submit\"];\n\n            if(href) {\n                _handleFetch(el, trigger, _op_overrides, href, mode, input);\n                continue;\n            }\n        }\n\n        //Loop over all data attributes (modes)\n        for(let mode in el.dataset) {\n            //HANDLE CONDITIONALS AND LOOPS\n            // if([`${ATTR_PREFIX}templ`, `${ATTR_PREFIX}if`, `${ATTR_PREFIX}each`].includes(mode)) {\n            //     _handleConditionals(el, mode, _op_overrides);\n            //     continue;\n            // }\n\n            if(!_modes.includes(mode)) continue;\n            let shouldHaveTriggers = ![`${ATTR_PREFIX}bind`].includes(mode);\n\n            //Loop over provided settings\n            for(let setting of el.dataset?.[mode]?.split(\";\") || []) {\n                //Break out settings\n                let [sourceParts, output] = setting?.split(\"->\")?.map(s=> s.trim()) || [];\n                let triggers = shouldHaveTriggers ? _paramsInParens(sourceParts.slice(0, sourceParts.indexOf(\")\"))) : [];\n                let processFuncStr = shouldHaveTriggers ? sourceParts.slice(sourceParts.indexOf(\")\") + 1) : sourceParts;\n\n                //Handle errors\n                if(shouldHaveTriggers && !triggers?.length) { console.error(\"No trigger\", el); break; }\n\n                let { func, valueList } = _parseFunction(processFuncStr);\n                if(processFuncStr) {\n                    if(!func) console.warn(`\"${processFuncStr}\" not registered`, el);\n                }\n\n                //Loop over triggers\n                if(!triggers?.length) triggers = [\"\"]\n                for(let trigger of triggers) {\n                    if(mode.match(/bind|sync/)) _handleBindSync(el, valueList, output, trigger, mode, func);\n                    // else {\n                    //     if(!output) {\n                    //         output = input[0];\n                    //         input = [];\n                    //     }\n                    //     _handleFetch(el, trigger, _op_overrides, output, mode.replace(ATTR_PREFIX, \"\"), input, processFunc);\n                    // }\n                }\n            }; //End loop settings\n        }   //End loop dataset modes\n    };  //End loop elements\n}\n\n/**\n * @param {string} str \n * @returns \n */\nfunction _paramsInParens(str) {\n    if(str?.includes(\"(\")) {\n        let matches = str.match(/[^\\(\\)]{1,}/g);\n        str = matches?.[matches.length - 1] || \"\";\n    }\n    return str?.split(_commaSepRx)?.map(s=> s.trim()) || [];\n}","import { _store } from \"./store.js\";\nimport { _addToNextTickQueue } from \"./updates.js\";\nimport { _registerSubs, _setOptions } from \"./registrar.js\";\n\n/**! @typedef {\"in-start\"|\"in-end\"|\"out-start\"|\"out-end\"} HookKey*/\n\n/**!\n * @typedef {object} ExternalOptions\n * @property {string} domain - The domain name these settings apply to\n * @property {boolean} [scripts] - Allow scripts from this domain to execute\n * @property {boolean} [styles] - Allow styles from this domain to apply\n */\n\n/**!\n * @typedef {object} FetchOptions\n * @property {RequestInit} [request] - Fetch request options\n * @property {\"json\"|\"text\"} [responseType] - Response type (default: \"text\")\n * @property {(err: Error)=> void} [err] - Error callback - run on fetch error\n * @property {(code: number, data: void | Response)=> boolean | void} [onCode] - Callback function - run on fetch response code; return `false` to prevent further processing\n * @property {ExternalOptions[]} [externals] - External domain fetch settings\n */\n\n/**!\n * @typedef {object} TransitionOptions\n * @property {string} [class] - CSS class applied to transitions (default: `mfTrans`)\n * @property {[number, number] | number} [dur] - Transition duration: [in, out] or single value (in ms); default: 300\n * @property {number} [swap] - Swap delay (in ms) - applied between one element's outro start and the replacement's intro start; default: 0\n * @property {boolean} [smartTransition] - Enable smart transitions (default: true)\n * @property {{ [key in HookKey]?: (el: HTMLElement)=> void }} [hooks] - Transition hooks\n */\n\n/**!\n * Manifold options for `fetch`, `trans`, and `profiles`.\n * @typedef {Object} MfldOps\n * @property {{ [ key: string ]: Partial<MfldOps> }} [profiles] - Fetch profiles assignable to elements\n * @property {FetchOptions} [fetch] - Fetch options - see https://google.com\n * @property {TransitionOptions} [trans] - Transition settings - see https://google.com\n */\n\n/**!\n * @template T\n * @callback UpdaterFunction\n * @param {Array<any>} upstreamValues\n * @param {T} value\n * @returns {T | Promise<T>}\n */\n\n/**!\n * @template T\n * @callback ValueDeterminer\n * @param {T} [currentValue]\n * @returns {T | Promise<T> | undefined}\n */\n\n/**!\n * @template T\n * @callback UpdateFunction\n * @param {T | ValueDeterminer<T>} value\n * @returns {T | Promise<T> | undefined}\n */\n\n/**!\n * @template T\n * @callback SubDeterminer\n * @param {T} value\n * @returns {void}\n */\n\n/**!\n * @template T\n * @callback SubFunction\n * @param {SubDeterminer<T>} value The store's current value\n * @returns void\n */\n\n/**!\n * @template T\n * @typedef {Object} StoreOptions\n * @property {T} [value]\n * @property {Array<string>} [upstream]\n * @property {UpdaterFunction<T>} [updater]\n * @property {HTMLElement | SVGScriptElement | \"global\"} [scope]\n */\n\n/**!\n * @template T\n * @typedef Store\n * @prop {T} value - The store's current value (read only)\n * @prop {UpdateFunction<T>} update - Update the store's current value\n * @prop {SubFunction<T>} sub - Add a subscription function to the store\n */\n\n/**!\n * @typedef {Function} MfldFunc\n * @param {any} val\n * @param {HTMLElement} [el]\n */\n\n/**!\n * The global Manifold interface.\n */\nexport let Mfld = {\nstore: \n/**!\n* - Create or overwrite a _typed_ global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<T\\>`* \n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\n* @template T\n* @param {string} store_name\n* @param {StoreOptions<T> | T} store_ops\n* @return {Store<T>}\n*/ (store_name, store_ops)=> {\n    if(!store_ops?.hasOwnProperty(\"value\") && !store_ops?.hasOwnProperty(\"updater\")) {\n        store_ops = /** @type {StoreOptions<T>}*/({ value: /** @type {T}*/store_ops });\n    }\n    return /**@type {Store<T>}*/(_store(store_name, /**@type {StoreOptions<T>}*/store_ops))\n},\nustore: \n/**!\n* - Create or overwrite an untyped global Manifold store by passing `store_ops` (`MfldOps`) -> *returns `Store\\<any\\>`* \n* - Retrieve an untyped reference to the store specified by name by omitting `store_ops` -> *returns `Store\\<any\\>`*\n* @param {string} store_name\n* @param {StoreOptions<any> | any} store_ops\n* @return {Store<any>}\n*/ (store_name, store_ops)=> /**@type {Store<any>}*/(_store(store_name, store_ops)),\nget:\n/**!\n * - Retrieve a Manifold store by name. *returns `Store\\<any\\>`*\n * @param {string} store_name\n * @return {Store<any>}\n */ (store_name)=> /**@type {Store<any>}*/(_store(store_name)),\nfunc: \n/**!\n * - Retrieve a Manifold function by name. *val* refers to the store's current value; *el* refers to the element that triggered the update (if applicable). *returns `MfldFunc`*\n * - *Note:* Functions retrived using this method cannot infer the type of the store's value and is therefore **not** type-checked. It is preferable to keep a reference to the function if you need to preserve type information.\n * @param {string} func_name\n * @return {MfldFunc}\n */ (func_name)=> /** @type {(val: any, el?: HTMLElement)=> void}*/(\n// @ts-ignore\n MfFn?.get(func_name)),\nfuncs: \n/**!\n * - Add functions to the Manifold function registry in key-value pairs.\n * - Functions must be registered in order to be accessible to HTML elements via `mfBind`, `mfSync`, and `mfResolve`. \n * - It may still be beneficial to keep a reference to the original function if you need to preserve type information.\n * @param {{ [key: string]: MfldFunc }} funcs\n */ funcs=> {for(let key in funcs) \n// @ts-ignore\n MfFn.set(key, funcs[key])},\nconfig:\n/**!\n * - Set Manifold configuration options, including `trans` (DOM transition settings), `fetch` (fetch options), and `profiles` (configuration option overrides that can be set on elements ad-hoc via `mfOverrides`).\n * - Providing the optional `profileName` parameter allows you to save the configuration as a named profile. Otherwise, the profile is saved as the default configuration.\n * @param {MfldOps} new_ops\n * @param {string} [profile_name]\n */ (new_ops, profile_name)=> _setOptions(new_ops, profile_name),\n onTick:\n /**!\n  * - Wait for the next Manifold data update cycle to complete before executing the callback function.\n  * @param {()=> void} cb\n  */ (cb)=> _addToNextTickQueue(cb),\nregister:\n/**!\n * - Register Manifold subscriptions on the DOM. *Optional:* Pass an `HTMLElement` or selector string to scope the registration to a specific element.\n * @param {HTMLElement | string | null} [parent]\n */ (parent)=> {\n    if(typeof parent == \"string\") parent = /** @type {HTMLElement | null}*/(document.querySelector(parent));\n        _registerSubs(parent)\n    },\n};"],"names":["ATTR_PREFIX","_inputNestSplitRx","_randomEnoughId","Date","now","Math","floor","random","_nestedValue","obj","path","newval","ptr","key","undefined","length","Map","get","set","_getStorePathFromKey","s","storeName","split","map","sp","isNaN","parseInt","filter","_getOverride","name","el","ops","parse","def","as","override","dataset","profiles","fetch","JSON","_getOpOverrides","overrides","responseType","trans","dur","swap","class","smartTransition","_parseFunction","condition","datakey","fn","values","trim","reverse","valueList","replace","func","globalThis","MfFn","includes","match","v","_parseValues","Function","spacer","workArray","cancelAnimationFrame","_nextTickQueue","spacerHeight","tick","requestAnimationFrame","setTimeout","_scheduleUpdate","update","push","_runUpdates","_addSpacer","inEl","wrapper","wrapperHeight","replaceWholeObject","document","createElement","paddingTop","paddingBottom","Element","window","getComputedStyle","style","height","abs","clientHeight","after","_adjustSizing","remove","animate","order","out","relation","in","_applyTransition","prepend","container","cloneNode","getDimensionsAfterUpdate","border","replaceChildren","replaceWith","appendChild","done","dir","refElement","nodeType","Node","TEXT_NODE","text","textContent","newNode","Array","isArray","transClass","classList","add","hooks","dimensions","w","clientWidth","paddingLeft","paddingRight","left","getBoundingClientRect","scrollX","top","scrollY","position","width","margin","transitionDuration","_hashAny","input","from","entries","Set","hash","char","TextEncoder","encode","toString","MfSt","MfMutOb","Store","_updater","_subscriptions","_storedHash","_upstreamStores","_downstreamStores","_scope","constructor","this","_modify","scope","currentScript","mutOb","toRemove","observer","MutationObserver","muts","mut","type","node","removedNodes","store","_destroy","disconnect","delete","observe","parentElement","childList","upstream","S","_store","value","updater","_auto_update","sub","ref","immediate","Promise","async","resolve","newValue","newHash","ds","clearHash","newVal","found_store","clear","_handleFetch","trigger","fetchOps","href","method","processFunc","ev","e","preventDefault","stopPropagation","target","externals","find","allowed","startsWith","domain","location","origin","body","FormData","toFunc","data","request","headers","stringify","catch","error","err","console","code","status","onCode","resp","instruction","selector","toReplace","fullMarkup","DOMParser","parseFromString","querySelector","_registerSubs","history","pushState","resolveTxt","resolveFunc","addEventListener","_handleBindSync","output","mode","stores","paths","options","observeEl","storeValues","i","val","parts","setAttribute","dispatchEvent","CustomEvent","list","log","_","propValues","prop","getAttribute","curVal","_ops","_commaSepRx","_modes","m","parent","els","querySelectorAll","join","_op_overrides","tagName","toLowerCase","action","shouldHaveTriggers","setting","sourceParts","triggers","_paramsInParens","slice","indexOf","processFuncStr","warn","str","matches","Mfld","store_name","store_ops","hasOwnProperty","ustore","func_name","funcs","config","new_ops","profile_name","_setOptions","newops","profileName","onTick","cb","register"],"mappings":"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"}